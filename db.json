{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/hector/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/hector/source/images/favicon.ico","path":"images/favicon.ico","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/hector/source/images/phone.png","path":"images/phone.png","modified":0,"renderable":1},{"_id":"themes/hector/source/js/vivus.min.js","path":"js/vivus.min.js","modified":0,"renderable":1},{"_id":"themes/hector/source/js/highlight.min.js","path":"js/highlight.min.js","modified":0,"renderable":1},{"_id":"themes/hector/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/hector/source/js/jquery-2.0.3.min.js","path":"js/jquery-2.0.3.min.js","modified":0,"renderable":1},{"_id":"themes/hector/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-01.png","path":"images/mvui/Mvui-01.png","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-02.png","path":"images/mvui/Mvui-02.png","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-04.png","path":"images/mvui/Mvui-04.png","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-03.png","path":"images/mvui/Mvui-03.png","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui02-01.svg","path":"images/mvui/Mvui02-01.svg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui02-03.svg","path":"images/mvui/Mvui02-03.svg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui02-04.svg","path":"images/mvui/Mvui02-04.svg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui02-02.svg","path":"images/mvui/Mvui02-02.svg","modified":0,"renderable":1},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-04.jpg","path":"images/mvui/Mvui-04.jpg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-01.jpg","path":"images/mvui/Mvui-01.jpg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-02.jpg","path":"images/mvui/Mvui-02.jpg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui-03.jpg","path":"images/mvui/Mvui-03.jpg","modified":0,"renderable":1},{"_id":"themes/hector/source/images/mvui/Mvui.ai","path":"images/mvui/Mvui.ai","modified":0,"renderable":1},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/hector/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1}],"Cache":[{"_id":"themes/hector/.DS_Store","hash":"694f0fbc41d69d0f05d3eb8abf00a66666ff4c2c","modified":1476866086000},{"_id":"themes/hector/.gitignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1476781575000},{"_id":"themes/hector/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1476838519000},{"_id":"themes/hector/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1476781575000},{"_id":"themes/hector/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1476838072000},{"_id":"themes/hector/_config.yml","hash":"47e330214e936e85f0987007891578fb5770bd3b","modified":1476862625000},{"_id":"themes/hector/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1476781575000},{"_id":"source/_posts/alert.md","hash":"62481a404fcae86adb9479397617bf44bfac8329","modified":1479804796000},{"_id":"source/_posts/button.md","hash":"1f187954d763032484e90bb8f8f7c3d891c0a07a","modified":1479794626000},{"_id":"source/_posts/circle.md","hash":"cfcc2e4ae0627c878d7f8521f8cb87e06c279846","modified":1479866251000},{"_id":"source/_posts/collapse.md","hash":"6a4527d47aab4e2b1efbe02a2d124d693b4169b8","modified":1477623989000},{"_id":"source/_posts/desc.md","hash":"94f2bb51715dbc2c0785f817e7d1076a93325875","modified":1479949462000},{"_id":"source/_posts/gotop.md","hash":"5ed3d67882cb960e192b75a21715960459ff89e5","modified":1479866107000},{"_id":"source/_posts/icon.md","hash":"a3014540f90d01b20afc79d6628f1ad732c507af","modified":1479794621000},{"_id":"source/_posts/loadding.md","hash":"467468e34a71dac1b7cc61e26d2560902678c59d","modified":1479865224000},{"_id":"source/_posts/log.md","hash":"06966622050d7040a8d1630e6dde31aad8c0ebc2","modified":1480406444000},{"_id":"source/_posts/modal.md","hash":"a43d4897a1066c44e6c903c478f770b7309304d2","modified":1479866232000},{"_id":"source/_posts/progress.md","hash":"84efe0c3304d20bd6a943c4ceaeaaa86ad1372cf","modified":1479866274000},{"_id":"source/_posts/pullload.md","hash":"9d9c996403cd7fd683f993c3d66d45605e256dbe","modified":1479882276000},{"_id":"source/_posts/pullrefresh.md","hash":"fd3790e77629ea29ee05d1e8a5b6f4bdaa81518b","modified":1479882259000},{"_id":"source/_posts/standard.md","hash":"5823635b9aa2a178cef18ca0035bb4d005c3550b","modified":1479953367000},{"_id":"source/_posts/start.md","hash":"3f0d0d7754b4606106d5f89e3d537fd07f111c5d","modified":1480406407000},{"_id":"source/_posts/tip.md","hash":"c744574a999aea5f8272123434fd73197f4942cc","modified":1479866300000},{"_id":"themes/hector/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1476781575000},{"_id":"themes/hector/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1476781575000},{"_id":"themes/hector/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1476781575000},{"_id":"themes/hector/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1476838090000},{"_id":"themes/hector/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1476781575000},{"_id":"themes/hector/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1476838099000},{"_id":"themes/hector/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1476781575000},{"_id":"themes/hector/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1476781575000},{"_id":"themes/hector/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1476839431000},{"_id":"themes/hector/layout/index.ejs","hash":"4ead30c5e617d371c3d6d9fe84fef2c66cf85d3c","modified":1476863431000},{"_id":"themes/hector/layout/layout.ejs","hash":"3a4d4dfe8b1089d182279d8a0fd000d8abe5d409","modified":1479878505000},{"_id":"themes/hector/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1476781575000},{"_id":"themes/hector/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1476858199000},{"_id":"themes/hector/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1476839058000},{"_id":"themes/hector/scripts/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1476847741000},{"_id":"themes/hector/scripts/fancybox.js","hash":"8dfe5848b3e6348dd3c910f6f2c022b6cd40fb10","modified":1476847812000},{"_id":"themes/hector/source/.DS_Store","hash":"578018122dc426aefd6de84dfa3056b857746db5","modified":1476860185000},{"_id":"themes/hector/layout/_partial/after-footer.ejs","hash":"eea9a89e8d5b982031792d3709960c4318600005","modified":1477360013000},{"_id":"themes/hector/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1476781575000},{"_id":"themes/hector/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1476864438000},{"_id":"themes/hector/layout/_partial/article.ejs","hash":"8031c70196d6fbf5e7472b8e2b10702f34cc0024","modified":1476865100000},{"_id":"themes/hector/layout/_partial/footer.ejs","hash":"9017a69a3c81ee4872a086bd4bd7e7e1732dd949","modified":1476856947000},{"_id":"themes/hector/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1476781575000},{"_id":"themes/hector/layout/_partial/head.ejs","hash":"8dc1e524105141dc64d4432d6be06d24b07b5284","modified":1479889835000},{"_id":"themes/hector/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1476860202000},{"_id":"themes/hector/layout/_partial/header_new.ejs","hash":"cbcbf164129970177cc821315ad01634fcc09dbc","modified":1476861520000},{"_id":"themes/hector/layout/_partial/leftnav.ejs","hash":"c748679f0d2e7c6d5ab07b84427420d56722f39b","modified":1479801373000},{"_id":"themes/hector/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1476864434000},{"_id":"themes/hector/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1476840713000},{"_id":"themes/hector/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1476781575000},{"_id":"themes/hector/layout/_widget/category.ejs","hash":"97d74f8e803381c7e1b985cdadcf798e7859adb6","modified":1476854506000},{"_id":"themes/hector/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1476781575000},{"_id":"themes/hector/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1476781575000},{"_id":"themes/hector/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1476781575000},{"_id":"themes/hector/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1476838984000},{"_id":"themes/hector/source/css/_variables.styl","hash":"dc187cfdf95197fb8d58663b8364a31fd1b06bdd","modified":1477366028000},{"_id":"themes/hector/source/css/style.styl","hash":"9fbe5764bb7834b6471d49ce16b6048a8a6d5e61","modified":1477366004000},{"_id":"themes/hector/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1476781575000},{"_id":"themes/hector/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1476781575000},{"_id":"themes/hector/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1476781575000},{"_id":"themes/hector/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1476781575000},{"_id":"themes/hector/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1476781575000},{"_id":"themes/hector/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1476781575000},{"_id":"themes/hector/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1476781575000},{"_id":"themes/hector/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1476781575000},{"_id":"themes/hector/source/images/.DS_Store","hash":"a5c5904b0acabeb6417eb76fca7bfb88d7e13604","modified":1476864005000},{"_id":"themes/hector/source/images/favicon.ico","hash":"ceddcb8b71a01ff1b5907919f316bd1b960db66a","modified":1476863090000},{"_id":"themes/hector/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1476781575000},{"_id":"themes/hector/source/images/phone.png","hash":"2e427f8de7a536274ea808bd6ca39efd38ebbc31","modified":1476863952000},{"_id":"themes/hector/source/js/.DS_Store","hash":"df2fbeb1400acda0909a32c1cf6bf492f1121e07","modified":1476857902000},{"_id":"themes/hector/source/js/vivus.min.js","hash":"09df85f749941a1e9b5e6eee3937ae98ed7e7447","modified":1476287038000},{"_id":"themes/hector/source/js/highlight.min.js","hash":"cb57424edbe858c8fb86ade3ebe651fb8a6d2a4f","modified":1477359984000},{"_id":"themes/hector/source/js/script.js","hash":"b9f9dafe090f310c8f9ccc59abafa7e523500594","modified":1479874918000},{"_id":"themes/hector/layout/_partial/post/nav.ejs","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1476857364000},{"_id":"themes/hector/source/js/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1378362472000},{"_id":"themes/hector/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1476864441000},{"_id":"themes/hector/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1476781575000},{"_id":"themes/hector/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1476781575000},{"_id":"themes/hector/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1476781575000},{"_id":"themes/hector/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1476781575000},{"_id":"themes/hector/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1476781575000},{"_id":"themes/hector/source/css/_partial/article.styl","hash":"b011f0137058484948a1a4be6a08f49c5180393f","modified":1477378134000},{"_id":"themes/hector/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1476781575000},{"_id":"themes/hector/source/css/_partial/footer.styl","hash":"f632b98f410359083bf73fa5c2c5d3fb21ea7e6f","modified":1476846962000},{"_id":"themes/hector/source/css/_partial/header.styl","hash":"d0b150a35338c5c17981dd2448a7849f93f467db","modified":1476861715000},{"_id":"themes/hector/source/css/_partial/highlight.styl","hash":"8df4baa09c8dd96faafaefa37672a8fb6625e728","modified":1477358684000},{"_id":"themes/hector/source/css/_partial/leftnav-aside.styl","hash":"bc01405203060c77cf7a84fd14f12ce2dc68e723","modified":1476846818000},{"_id":"themes/hector/source/css/_partial/leftnav-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1476842572000},{"_id":"themes/hector/source/css/_partial/leftnav.styl","hash":"d508c9a44f5ccbc6e8baf56ad60cb524cb7504f5","modified":1479889111000},{"_id":"themes/hector/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1476781575000},{"_id":"themes/hector/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1476842583000},{"_id":"themes/hector/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1476842578000},{"_id":"themes/hector/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1476855114000},{"_id":"themes/hector/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1476781575000},{"_id":"themes/hector/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1476781575000},{"_id":"themes/hector/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1476781575000},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1476781575000},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1476781575000},{"_id":"themes/hector/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1476781575000},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1476781575000},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1476781575000},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1476781575000},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1476781575000},{"_id":"themes/hector/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1476781575000},{"_id":"themes/hector/source/images/mvui/Mvui-01.png","hash":"183a232df76b85dfb479138876510e66783a95c8","modified":1476860449000},{"_id":"themes/hector/source/images/mvui/Mvui-02.png","hash":"1f4a25f38c5dfea99661f7a2123fd313b26e4134","modified":1476860448000},{"_id":"themes/hector/source/images/mvui/Mvui-04.png","hash":"94779603ce3c87d2761a5f611f58fec8dec44c11","modified":1476860450000},{"_id":"themes/hector/source/images/mvui/Mvui-03.png","hash":"2f3ec701c660139e7bb57bab45e7a9e7e7b82086","modified":1476860448000},{"_id":"themes/hector/source/images/mvui/Mvui02-01.svg","hash":"17118728a8ab24a65b3876f93a5618d600029c99","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui02-03.svg","hash":"2b39407d27206979674d61201d9e15c5d1d6679e","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui02-04.svg","hash":"a2698db11cd29184c8f5b79fe57f152ca4b95795","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui02-02.svg","hash":"524f41a023076aec37b6953dc527b8b0b7a2875b","modified":1476858318000},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1476781575000},{"_id":"themes/hector/source/images/mvui/Mvui-04.jpg","hash":"c8d7e0da4eab73920cc4b7f7586d965aa2f9b910","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui-01.jpg","hash":"7c130e0a050e23491fe6b5b5218c982e6cfd0763","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui-02.jpg","hash":"f0e3f6b7b429ab3790950352d0404c484e64da7b","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui-03.jpg","hash":"258feee7e14963789ee7d87ea4661d2f0cd1d58d","modified":1476858318000},{"_id":"themes/hector/source/images/mvui/Mvui.ai","hash":"e969eb56b08468a1d5169e09b2e430f5b547688d","modified":1476858318000},{"_id":"themes/hector/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1476781575000},{"_id":"themes/hector/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1476781575000},{"_id":"public/Summary/log/index.html","hash":"2ebe124a507f7e7f6f8d36d768012715175b5061","modified":1477625953965},{"_id":"public/Summary/standard/index.html","hash":"5116b1e44418aea0f860161a4624d212adb06c54","modified":1477625953966},{"_id":"public/Summary/desc/index.html","hash":"56336aa14c40e22dc2176367a4c08246ea078304","modified":1477625953966},{"_id":"public/archives/index.html","hash":"f2fa805914ca8308c135e26e541c29b5ef5fcf4f","modified":1477625953966},{"_id":"public/archives/page/2/index.html","hash":"0906b763cc75dedf1e76ebb92de3a1a504c20753","modified":1477625953966},{"_id":"public/archives/2016/index.html","hash":"2b1f6fbafc616e147029635509e587f0069db0a4","modified":1477625953966},{"_id":"public/archives/2016/page/2/index.html","hash":"fe02bea919a4dd0072328c6857511e8cf63a9851","modified":1477625953966},{"_id":"public/archives/2016/10/index.html","hash":"8a40eb234cca3df66d3cf15d744994b0039a2980","modified":1477625953966},{"_id":"public/archives/2016/10/page/2/index.html","hash":"a5399e26a2d477224521c199f99f82d579ca8d4e","modified":1477625953966},{"_id":"public/categories/View/index.html","hash":"b74d6875146fc905e6ccbadcd6f5b8dd75f5eb2c","modified":1477625953967},{"_id":"public/categories/Basic/index.html","hash":"677d4ec5c403c3e3ac681568b21a455b6cd60100","modified":1477625953967},{"_id":"public/categories/Chart/index.html","hash":"a51b461b86be0fe8306a5c9a1e4b67e016998818","modified":1477625953967},{"_id":"public/categories/Summary/index.html","hash":"8d7ad38d18a663973fd113bf9878c19d6549916c","modified":1477625953967},{"_id":"public/categories/Other/index.html","hash":"80181dd4c103357908c70c822751b05632c1dbff","modified":1477625953967},{"_id":"public/tags/http-localhost-8080-alert-hidetitle-true/index.html","hash":"c3d39b572987929935c331e24404f15576975e51","modified":1477625953967},{"_id":"public/tags/http-localhost-8080-button-hidetitle-true/index.html","hash":"dc4507eac1df1d4bef94eec68caa915cf73b2a44","modified":1477625953967},{"_id":"public/tags/http-localhost-8080-circle-hidetitle-true/index.html","hash":"692e4bad35ec9df78f71131f7f03295788a6b460","modified":1477625953967},{"_id":"public/tags/http-localhost-8080-home/index.html","hash":"40790abc4440cc25aa726c4465a72bf0ca2e8ce1","modified":1477625953967},{"_id":"public/tags/http-localhost-8080-gotop-hidetitle-true/index.html","hash":"c16ca6bdaee140193d5e4f620b1483df5c6e946f","modified":1477625953967},{"_id":"public/tags/http-localhost-8080-icon-hidetitle-true/index.html","hash":"9cd38e0af0a5dcdd8d01459e29c42cabc6c67df7","modified":1477625953968},{"_id":"public/tags/http-localhost-8080-loadding-hidetitle-true/index.html","hash":"6a6f02593d07432c1bd50c2ca6855351e17c0c5d","modified":1477625953968},{"_id":"public/tags/http-localhost-8080-modal-hidetitle-true/index.html","hash":"5ee10cd51516e4a583f0574e325c505112d6b414","modified":1477625953968},{"_id":"public/tags/http-localhost-8080-progress-hidetitle-true/index.html","hash":"a2620a34d71f37c62c6f92e5c40d33900e36ad10","modified":1477625953968},{"_id":"public/tags/http-localhost-8080-pullrefresh-hidetitle-true/index.html","hash":"b974699846fb4be444eaa185b9636445e7cfd67e","modified":1477625953968},{"_id":"public/tags/http-localhost-8080-pullload-hidetitle-true/index.html","hash":"e639ae055166f7fa2a216f52e790c102dfa98d57","modified":1477625953968},{"_id":"public/tags/http-localhost-8080-tip-hidetitle-true/index.html","hash":"cce01f5ae5eafd276b580fa14495a6f521cce594","modified":1477625953968},{"_id":"public/index.html","hash":"db3d397fcd00b28eb6c74b55a441cdba40fd0d0b","modified":1477625953968},{"_id":"public/page/2/index.html","hash":"cec02dee86e991851d7540d72057a6cb5a452889","modified":1477625953968},{"_id":"public/Other/loadding/index.html","hash":"ebac5367eb3d72e48b4bc88af2d082111c3f1c8c","modified":1477625953968},{"_id":"public/Other/gotop/index.html","hash":"eb6e0cc181b4d14b51357fa99a2482f8edd0b632","modified":1477625953968},{"_id":"public/View/modal/index.html","hash":"b5e7cd30345be8ebf319325a95b4ec4c1738570b","modified":1477625953969},{"_id":"public/View/tip/index.html","hash":"c705fca363b76cc02cbcc13adcc8cb6df49911b4","modified":1477625953969},{"_id":"public/View/alert/index.html","hash":"486e41962142d2236abc5d09dcbe95289ed3751e","modified":1477625953969},{"_id":"public/View/collapse/index.html","hash":"170003ce0da06f210d1d0741a020fa7c0deaf84d","modified":1477625953969},{"_id":"public/Basic/button/index.html","hash":"2eb53ffe7aa43d578bc4a09746986a1951a37ec4","modified":1477625953969},{"_id":"public/Chart/circle/index.html","hash":"bfba6ebd4cd51aaabac185611ef75bf732220d91","modified":1477625953969},{"_id":"public/Chart/progress/index.html","hash":"533db26e7f617e5489988cb9bf5e912d16eded40","modified":1477625953969},{"_id":"public/Other/pullrefresh/index.html","hash":"16b0b004aff3325ec29b260aef72043a4be273c0","modified":1477625953969},{"_id":"public/Other/pullload/index.html","hash":"d663c46ab03246045e67a75b5cc427e7ba0bde8e","modified":1477625953969},{"_id":"public/Summary/start/index.html","hash":"78125a5a59208848ab5ae931c2be1eb01a722b06","modified":1477625953969},{"_id":"public/Basic/icon/index.html","hash":"e5ebe1ca48ddadea85673001d2bcd41871a36676","modified":1477625953969},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1477625953978},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1477625953978},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1477625953978},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1477625953978},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1477625953978},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1477625953978},{"_id":"public/images/favicon.ico","hash":"ceddcb8b71a01ff1b5907919f316bd1b960db66a","modified":1477625953978},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1477625953978},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1477625953978},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1477625953978},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1477625953978},{"_id":"public/images/mvui/Mvui-01.png","hash":"183a232df76b85dfb479138876510e66783a95c8","modified":1477625953978},{"_id":"public/images/mvui/Mvui-02.png","hash":"1f4a25f38c5dfea99661f7a2123fd313b26e4134","modified":1477625953978},{"_id":"public/images/mvui/Mvui02-01.svg","hash":"17118728a8ab24a65b3876f93a5618d600029c99","modified":1477625953978},{"_id":"public/images/mvui/Mvui-04.png","hash":"94779603ce3c87d2761a5f611f58fec8dec44c11","modified":1477625953978},{"_id":"public/images/mvui/Mvui02-03.svg","hash":"2b39407d27206979674d61201d9e15c5d1d6679e","modified":1477625953978},{"_id":"public/images/mvui/Mvui02-04.svg","hash":"a2698db11cd29184c8f5b79fe57f152ca4b95795","modified":1477625953978},{"_id":"public/images/mvui/Mvui-03.png","hash":"2f3ec701c660139e7bb57bab45e7a9e7e7b82086","modified":1477625953979},{"_id":"public/images/mvui/Mvui02-02.svg","hash":"524f41a023076aec37b6953dc527b8b0b7a2875b","modified":1477625953979},{"_id":"public/images/phone.png","hash":"2e427f8de7a536274ea808bd6ca39efd38ebbc31","modified":1477625953979},{"_id":"public/images/mvui/Mvui-04.jpg","hash":"c8d7e0da4eab73920cc4b7f7586d965aa2f9b910","modified":1477625954485},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1477625954487},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1477625954490},{"_id":"public/js/vivus.min.js","hash":"09df85f749941a1e9b5e6eee3937ae98ed7e7447","modified":1477625954490},{"_id":"public/js/script.js","hash":"ef328a398ab81048a70a1777cee15188c6887dbb","modified":1477625954490},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1477625954490},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1477625954490},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1477625954490},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1477625954490},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1477625954490},{"_id":"public/css/style.css","hash":"c9767428dca76c2733ef64b4692ad41875c04852","modified":1477625954490},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1477625954491},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1477625954491},{"_id":"public/js/highlight.min.js","hash":"cb57424edbe858c8fb86ade3ebe651fb8a6d2a4f","modified":1477625954491},{"_id":"public/js/jquery-2.0.3.min.js","hash":"fbf9c77d0c4e3c34a485980c1e5316b6212160c8","modified":1477625954491},{"_id":"public/images/mvui/Mvui-01.jpg","hash":"7c130e0a050e23491fe6b5b5218c982e6cfd0763","modified":1477625954491},{"_id":"public/images/mvui/Mvui-02.jpg","hash":"f0e3f6b7b429ab3790950352d0404c484e64da7b","modified":1477625954491},{"_id":"public/images/mvui/Mvui-03.jpg","hash":"258feee7e14963789ee7d87ea4661d2f0cd1d58d","modified":1477625954491},{"_id":"public/images/mvui/Mvui.ai","hash":"e969eb56b08468a1d5169e09b2e430f5b547688d","modified":1477625954491},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1477625954495},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1477625954495},{"_id":"source/_posts/checkbox.md","hash":"0bdc042c8f9ee701fa3816a139c370ac4389e4c8","modified":1479798521000},{"_id":"source/_posts/inputbox.md","hash":"725c4f12ff0609fb53ab2879dc9d1502639b5e63","modified":1479794800000},{"_id":"source/_posts/radio.md","hash":"a6484dbcd5f268008783f56a1b0bfff7857b57d9","modified":1479806587000},{"_id":"source/_posts/selector.md","hash":"d866393b36cef1ccffff1dce07d04069330fc700","modified":1479798531000},{"_id":"source/_posts/switch.md","hash":"d72573d12940ce1e375bfb791fa66d589aee52ca","modified":1479866292000},{"_id":"source/_posts/accordion.md","hash":"829c9cb485649e6f156acb6a920e629c914c8d89","modified":1479862421000},{"_id":"source/_posts/scroll.md","hash":"c7eb137bd12b24afc82a90fa33084605f1b55e5f","modified":1479975998000},{"_id":"source/_posts/page.md","hash":"db09146e605d58a95ba9e5ed3c32c85664d0aa7b","modified":1479866463000},{"_id":"source/_posts/slider.md","hash":"c69ebf86e3d59e73fe9319c3743a650b281f396f","modified":1479950663000},{"_id":"source/_posts/uploader.md","hash":"18c7e0df6a243a1fd15601fc92a60e0ed78159f3","modified":1479952488000}],"Category":[{"name":"View","_id":"ciut8cagy0002v7s611wpdqfj"},{"name":"Basic","_id":"ciut8cah70007v7s6rkc8frzu"},{"name":"Chart","_id":"ciut8cahf000jv7s65txllvtf"},{"name":"Summary","_id":"ciut8cahj000qv7s6ku2d51aa"},{"name":"Other","_id":"ciut8cahm000xv7s65igeu71i"},{"name":"Form","_id":"ciuxugojt0009vos6fr2czxca"}],"Data":[],"Page":[],"Post":[{"title":"Alert 弹框","date":"2016-10-19T07:25:42.000Z","_content":"\n\n# Alert 弹框\n\n\n## 概述\nAlert 是Modal的一个单例，支持remove方法销毁，同时也 show 方法的参数为对象,属性为 title（标题），content（内容），okText（按钮文本），onClose(关闭回调)\n\n\n## 如何使用\nAlert 组件代用api显示\n\n``` javascript\n// 引入\nimport { Alert } from 'mvui';\n// 调用方法\nAlert.show({\n    title: '我是title',\n    content: '我是内容',\n    onClose: function(){\n        Alert.remove();\n    }\n});\n```\n\n\n## API\n\nAlert show param参数\n\n|     属性       | 说明                       |        类型           |    默认值   |    可选值             |\n| :------------- |:--------------------------| :----------------   | :------------|    :-----------------|\n|    title      |       必填，标题             |    String          |      -       |     任意              |\n|    content    |     必填，提示内容           |   String            |      -        |     任意              |\n|    onClose    |        选填，关闭回调        |    Function         |      -       |       任意函数        |\n\nAlert close 方法\n\nAlert.close() 直接销毁alert\n\n\n## 右侧示例代码\n\n\n### 默认弹框\n``` html\n<template>\n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">默认alert弹框</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow1\">点击提示弹框</div>\n        </div>\n    </div>\n</template>\n<script>\n    export default{   \n        components: { \n            Alert\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                Alert.show({\n                    title: '我是title',\n                    content: '我是内容'\n                });\n            },\n        }\n    }\n</script>\n```\n\n\n\n### 弹框回调\n``` html\n<template>\n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">弹框回调</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow2\">点击提示弹框2</div>\n        </div>\n        <Tip :show.sync=\"showtip\">{{tipmessage}}</Tip>\n    </div>\n</template>\n<script>\n    import { Tip, Alert } from 'mvui';\n    export default{   \n        components: { \n            Tip,\n            Alert\n        },\n        data(){\n             return {\n                show2: false,\n                tipmessage: '',\n                showtip: false\n             }\n        },\n        methods: {\n            clickshow2(){\n                var self = this;\n                Alert.show({\n                    title: '我是title',\n                    content: '我是内容',\n                    onClose: function(){\n                        Alert.remove();\n                        self.tipmessage = '弹框已经被销毁';\n                        self.showtip = true;\n                    }\n                });\n            },\n        }\n    }\n\n</script>\n```\n\n\n\n","source":"_posts/alert.md","raw":"---\ntitle: Alert 弹框\ndate: 2016-10-19 15:25:42\ntags: http://localhost:8080/#!/alert?hidetitle=true\ncategories:\n- View\n---\n\n\n# Alert 弹框\n\n\n## 概述\nAlert 是Modal的一个单例，支持remove方法销毁，同时也 show 方法的参数为对象,属性为 title（标题），content（内容），okText（按钮文本），onClose(关闭回调)\n\n\n## 如何使用\nAlert 组件代用api显示\n\n``` javascript\n// 引入\nimport { Alert } from 'mvui';\n// 调用方法\nAlert.show({\n    title: '我是title',\n    content: '我是内容',\n    onClose: function(){\n        Alert.remove();\n    }\n});\n```\n\n\n## API\n\nAlert show param参数\n\n|     属性       | 说明                       |        类型           |    默认值   |    可选值             |\n| :------------- |:--------------------------| :----------------   | :------------|    :-----------------|\n|    title      |       必填，标题             |    String          |      -       |     任意              |\n|    content    |     必填，提示内容           |   String            |      -        |     任意              |\n|    onClose    |        选填，关闭回调        |    Function         |      -       |       任意函数        |\n\nAlert close 方法\n\nAlert.close() 直接销毁alert\n\n\n## 右侧示例代码\n\n\n### 默认弹框\n``` html\n<template>\n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">默认alert弹框</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow1\">点击提示弹框</div>\n        </div>\n    </div>\n</template>\n<script>\n    export default{   \n        components: { \n            Alert\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                Alert.show({\n                    title: '我是title',\n                    content: '我是内容'\n                });\n            },\n        }\n    }\n</script>\n```\n\n\n\n### 弹框回调\n``` html\n<template>\n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">弹框回调</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow2\">点击提示弹框2</div>\n        </div>\n        <Tip :show.sync=\"showtip\">{{tipmessage}}</Tip>\n    </div>\n</template>\n<script>\n    import { Tip, Alert } from 'mvui';\n    export default{   \n        components: { \n            Tip,\n            Alert\n        },\n        data(){\n             return {\n                show2: false,\n                tipmessage: '',\n                showtip: false\n             }\n        },\n        methods: {\n            clickshow2(){\n                var self = this;\n                Alert.show({\n                    title: '我是title',\n                    content: '我是内容',\n                    onClose: function(){\n                        Alert.remove();\n                        self.tipmessage = '弹框已经被销毁';\n                        self.showtip = true;\n                    }\n                });\n            },\n        }\n    }\n\n</script>\n```\n\n\n\n","slug":"alert","published":1,"updated":"2016-11-22T08:53:16.000Z","_id":"ciut8cagr0000v7s6nk2e51vt","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Alert-弹框\"><a href=\"#Alert-弹框\" class=\"headerlink\" title=\"Alert 弹框\"></a>Alert 弹框</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Alert 是Modal的一个单例，支持remove方法销毁，同时也 show 方法的参数为对象,属性为 title（标题），content（内容），okText（按钮文本），onClose(关闭回调)</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>Alert 组件代用api显示</p>\n<pre><code class=\"javascript\">// 引入\nimport { Alert } from &#39;mvui&#39;;\n// 调用方法\nAlert.show({\n    title: &#39;我是title&#39;,\n    content: &#39;我是内容&#39;,\n    onClose: function(){\n        Alert.remove();\n    }\n});\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Alert show param参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">title</td>\n<td style=\"text-align:left\">必填，标题</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">必填，提示内容</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">onClose</td>\n<td style=\"text-align:left\">选填，关闭回调</td>\n<td style=\"text-align:left\">Function</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意函数</td>\n</tr>\n</tbody>\n</table>\n<p>Alert close 方法</p>\n<p>Alert.close() 直接销毁alert</p>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认弹框\"><a href=\"#默认弹框\" class=\"headerlink\" title=\"默认弹框\"></a>默认弹框</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;默认alert弹框&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow1&quot;&gt;点击提示弹框&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    export default{   \n        components: { \n            Alert\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                Alert.show({\n                    title: &#39;我是title&#39;,\n                    content: &#39;我是内容&#39;\n                });\n            },\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"弹框回调\"><a href=\"#弹框回调\" class=\"headerlink\" title=\"弹框回调\"></a>弹框回调</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;弹框回调&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow2&quot;&gt;点击提示弹框2&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;Tip :show.sync=&quot;showtip&quot;&gt;{{tipmessage}}&lt;/Tip&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip, Alert } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Tip,\n            Alert\n        },\n        data(){\n             return {\n                show2: false,\n                tipmessage: &#39;&#39;,\n                showtip: false\n             }\n        },\n        methods: {\n            clickshow2(){\n                var self = this;\n                Alert.show({\n                    title: &#39;我是title&#39;,\n                    content: &#39;我是内容&#39;,\n                    onClose: function(){\n                        Alert.remove();\n                        self.tipmessage = &#39;弹框已经被销毁&#39;;\n                        self.showtip = true;\n                    }\n                });\n            },\n        }\n    }\n\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Alert-弹框\"><a href=\"#Alert-弹框\" class=\"headerlink\" title=\"Alert 弹框\"></a>Alert 弹框</h1><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Alert 是Modal的一个单例，支持remove方法销毁，同时也 show 方法的参数为对象,属性为 title（标题），content（内容），okText（按钮文本），onClose(关闭回调)</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>Alert 组件代用api显示</p>\n<pre><code class=\"javascript\">// 引入\nimport { Alert } from &#39;mvui&#39;;\n// 调用方法\nAlert.show({\n    title: &#39;我是title&#39;,\n    content: &#39;我是内容&#39;,\n    onClose: function(){\n        Alert.remove();\n    }\n});\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Alert show param参数</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">title</td>\n<td style=\"text-align:left\">必填，标题</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">content</td>\n<td style=\"text-align:left\">必填，提示内容</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">onClose</td>\n<td style=\"text-align:left\">选填，关闭回调</td>\n<td style=\"text-align:left\">Function</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意函数</td>\n</tr>\n</tbody>\n</table>\n<p>Alert close 方法</p>\n<p>Alert.close() 直接销毁alert</p>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认弹框\"><a href=\"#默认弹框\" class=\"headerlink\" title=\"默认弹框\"></a>默认弹框</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;默认alert弹框&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow1&quot;&gt;点击提示弹框&lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    export default{   \n        components: { \n            Alert\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                Alert.show({\n                    title: &#39;我是title&#39;,\n                    content: &#39;我是内容&#39;\n                });\n            },\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"弹框回调\"><a href=\"#弹框回调\" class=\"headerlink\" title=\"弹框回调\"></a>弹框回调</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;弹框回调&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow2&quot;&gt;点击提示弹框2&lt;/div&gt;\n        &lt;/div&gt;\n        &lt;Tip :show.sync=&quot;showtip&quot;&gt;{{tipmessage}}&lt;/Tip&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip, Alert } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Tip,\n            Alert\n        },\n        data(){\n             return {\n                show2: false,\n                tipmessage: &#39;&#39;,\n                showtip: false\n             }\n        },\n        methods: {\n            clickshow2(){\n                var self = this;\n                Alert.show({\n                    title: &#39;我是title&#39;,\n                    content: &#39;我是内容&#39;,\n                    onClose: function(){\n                        Alert.remove();\n                        self.tipmessage = &#39;弹框已经被销毁&#39;;\n                        self.showtip = true;\n                    }\n                });\n            },\n        }\n    }\n\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Button 按钮","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Button 按钮\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nbutton 可以自定义通用属性class和style，以及disabled（是否可用），type（按钮类型），shape（按钮形状），plain（是否无背景色），icon（icon种类），iconStyle（icon样式）\n\n\n## 如何使用\n使用Icon组件只需要指定图标的class即可，示例代码\n\n\n``` html\n<Button></Button>\n```\n渲染后为\n\n``` html\n<button class=\"mv-btn\"></button>\n```\n\n\n## API\n\nButton Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    disabled   | 选填，系统功能是否可用        |    String          |              |       disabled        |\n|    type       | 选填，系统功能按钮类型        |    String          |      -       | submit,button,reset   |\n|    shape      | 选填，按钮形状，默认方形      |    String          |      -       |  round                |\n|    plain      | 选填，是否无背景色           |    Boolean          |      false       |  true,false      |\n|    icon       | 选填，图标类名               |    String          |      -       |    任意图标类名        |\n|    iconStyle  | 选填，图标样式               |   [Object, String] |      -       |    任意               |\n\n\n\n## 右侧示例代码\n\n\n### 默认形状\n``` html\n<template>\n    <Button>方形</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n### 形状控制\n``` html\n<template>\n    <Button shape=\"round\">圆形</Button>\n    <Button shape=\"round\" disabled=\"disabled\">圆形</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n\n### 颜色\n``` html\n<template>\n    <Button class=\"mv-btn-primary\" type=\"submit\">primary</Button>\n    <Button class=\"mv-btn-success\">success</Button>\n    <Button class=\"mv-btn-warning\">warning</Button>\n    <Button class=\"mv-btn-danger\">danger</Button>\n    <Button class=\"mv-btn-royal\">royal</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n\n### 是否有背景色\n``` html\n<template>\n    <Button class=\"mv-btn-primary\" type=\"submit\">primary</Button>\n    <Button class=\"mv-btn-primary\" type=\"submit\" :plain=\"true\">primary</Button>\n    <Button class=\"mv-btn-primary\" type=\"submit\" :plain=\"true\" shape=\"round\">primary</Button>\n    <Button class=\"mv-btn-primary\" type=\"submit\" :plain=\"true\" shape=\"round\" disabled=\"disabled\">primary</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n\n\n### 是否有icon以及修改icon样式\n``` html\n<template>\n    <Button class=\"mv-btn-primary\" icon=\"mv-icon-loading-1\" icon-style=\"font-size: 0.14rem;\">加载中...</Button>\n    <Button class=\"mv-btn-primary\" icon=\"mv-icon-loading-1\" icon-style=\"color: red;font-size: 0.14rem;\">加载完成</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n\n```\n\n\n### 点击事件\n``` html\n<template>\n    <Button @click=\"click\">按钮点击</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        },\n        methods: {\n            click(event){\n                console.log(event);\n                debugger;\n            }\n        }\n    }\n</script>\n\n```\n\n\n\n\n","source":"_posts/button.md","raw":"---\ntitle: Button 按钮\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/button?hidetitle=true\ncategories:\n- Basic\n---\n\n\n# Button 按钮\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nbutton 可以自定义通用属性class和style，以及disabled（是否可用），type（按钮类型），shape（按钮形状），plain（是否无背景色），icon（icon种类），iconStyle（icon样式）\n\n\n## 如何使用\n使用Icon组件只需要指定图标的class即可，示例代码\n\n\n``` html\n<Button></Button>\n```\n渲染后为\n\n``` html\n<button class=\"mv-btn\"></button>\n```\n\n\n## API\n\nButton Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    disabled   | 选填，系统功能是否可用        |    String          |              |       disabled        |\n|    type       | 选填，系统功能按钮类型        |    String          |      -       | submit,button,reset   |\n|    shape      | 选填，按钮形状，默认方形      |    String          |      -       |  round                |\n|    plain      | 选填，是否无背景色           |    Boolean          |      false       |  true,false      |\n|    icon       | 选填，图标类名               |    String          |      -       |    任意图标类名        |\n|    iconStyle  | 选填，图标样式               |   [Object, String] |      -       |    任意               |\n\n\n\n## 右侧示例代码\n\n\n### 默认形状\n``` html\n<template>\n    <Button>方形</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n### 形状控制\n``` html\n<template>\n    <Button shape=\"round\">圆形</Button>\n    <Button shape=\"round\" disabled=\"disabled\">圆形</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n\n### 颜色\n``` html\n<template>\n    <Button class=\"mv-btn-primary\" type=\"submit\">primary</Button>\n    <Button class=\"mv-btn-success\">success</Button>\n    <Button class=\"mv-btn-warning\">warning</Button>\n    <Button class=\"mv-btn-danger\">danger</Button>\n    <Button class=\"mv-btn-royal\">royal</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n\n### 是否有背景色\n``` html\n<template>\n    <Button class=\"mv-btn-primary\" type=\"submit\">primary</Button>\n    <Button class=\"mv-btn-primary\" type=\"submit\" :plain=\"true\">primary</Button>\n    <Button class=\"mv-btn-primary\" type=\"submit\" :plain=\"true\" shape=\"round\">primary</Button>\n    <Button class=\"mv-btn-primary\" type=\"submit\" :plain=\"true\" shape=\"round\" disabled=\"disabled\">primary</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n```\n\n\n\n### 是否有icon以及修改icon样式\n``` html\n<template>\n    <Button class=\"mv-btn-primary\" icon=\"mv-icon-loading-1\" icon-style=\"font-size: 0.14rem;\">加载中...</Button>\n    <Button class=\"mv-btn-primary\" icon=\"mv-icon-loading-1\" icon-style=\"color: red;font-size: 0.14rem;\">加载完成</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        }\n    }\n</script>\n\n```\n\n\n### 点击事件\n``` html\n<template>\n    <Button @click=\"click\">按钮点击</Button>\n</template>\n<script>\n    import { Button } from 'mvui';\n    export default{   \n        components: { \n            Button\n        },\n        methods: {\n            click(event){\n                console.log(event);\n                debugger;\n            }\n        }\n    }\n</script>\n\n```\n\n\n\n\n","slug":"button","published":1,"updated":"2016-11-22T06:03:46.000Z","_id":"ciut8cagw0001v7s6f6d5xxjc","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Button-按钮\"><a href=\"#Button-按钮\" class=\"headerlink\" title=\"Button 按钮\"></a>Button 按钮</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>button 可以自定义通用属性class和style，以及disabled（是否可用），type（按钮类型），shape（按钮形状），plain（是否无背景色），icon（icon种类），iconStyle（icon样式）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用Icon组件只需要指定图标的class即可，示例代码</p>\n<pre><code class=\"html\">&lt;Button&gt;&lt;/Button&gt;\n</code></pre>\n<p>渲染后为</p>\n<pre><code class=\"html\">&lt;button class=&quot;mv-btn&quot;&gt;&lt;/button&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Button Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，系统功能是否可用</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">disabled</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，系统功能按钮类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">submit,button,reset</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shape</td>\n<td style=\"text-align:left\">选填，按钮形状，默认方形</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">round</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">plain</td>\n<td style=\"text-align:left\">选填，是否无背景色</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">icon</td>\n<td style=\"text-align:left\">选填，图标类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意图标类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyle</td>\n<td style=\"text-align:left\">选填，图标样式</td>\n<td style=\"text-align:left\">[Object, String]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认形状\"><a href=\"#默认形状\" class=\"headerlink\" title=\"默认形状\"></a>默认形状</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button&gt;方形&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"形状控制\"><a href=\"#形状控制\" class=\"headerlink\" title=\"形状控制\"></a>形状控制</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button shape=&quot;round&quot;&gt;圆形&lt;/Button&gt;\n    &lt;Button shape=&quot;round&quot; disabled=&quot;disabled&quot;&gt;圆形&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-success&quot;&gt;success&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-warning&quot;&gt;warning&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-danger&quot;&gt;danger&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-royal&quot;&gt;royal&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"是否有背景色\"><a href=\"#是否有背景色\" class=\"headerlink\" title=\"是否有背景色\"></a>是否有背景色</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot; :plain=&quot;true&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot; :plain=&quot;true&quot; shape=&quot;round&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot; :plain=&quot;true&quot; shape=&quot;round&quot; disabled=&quot;disabled&quot;&gt;primary&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"是否有icon以及修改icon样式\"><a href=\"#是否有icon以及修改icon样式\" class=\"headerlink\" title=\"是否有icon以及修改icon样式\"></a>是否有icon以及修改icon样式</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; icon=&quot;mv-icon-loading-1&quot; icon-style=&quot;font-size: 0.14rem;&quot;&gt;加载中...&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; icon=&quot;mv-icon-loading-1&quot; icon-style=&quot;color: red;font-size: 0.14rem;&quot;&gt;加载完成&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button @click=&quot;click&quot;&gt;按钮点击&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        },\n        methods: {\n            click(event){\n                console.log(event);\n                debugger;\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Button-按钮\"><a href=\"#Button-按钮\" class=\"headerlink\" title=\"Button 按钮\"></a>Button 按钮</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>button 可以自定义通用属性class和style，以及disabled（是否可用），type（按钮类型），shape（按钮形状），plain（是否无背景色），icon（icon种类），iconStyle（icon样式）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用Icon组件只需要指定图标的class即可，示例代码</p>\n<pre><code class=\"html\">&lt;Button&gt;&lt;/Button&gt;\n</code></pre>\n<p>渲染后为</p>\n<pre><code class=\"html\">&lt;button class=&quot;mv-btn&quot;&gt;&lt;/button&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Button Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，系统功能是否可用</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">disabled</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，系统功能按钮类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">submit,button,reset</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shape</td>\n<td style=\"text-align:left\">选填，按钮形状，默认方形</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">round</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">plain</td>\n<td style=\"text-align:left\">选填，是否无背景色</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">icon</td>\n<td style=\"text-align:left\">选填，图标类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意图标类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyle</td>\n<td style=\"text-align:left\">选填，图标样式</td>\n<td style=\"text-align:left\">[Object, String]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认形状\"><a href=\"#默认形状\" class=\"headerlink\" title=\"默认形状\"></a>默认形状</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button&gt;方形&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"形状控制\"><a href=\"#形状控制\" class=\"headerlink\" title=\"形状控制\"></a>形状控制</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button shape=&quot;round&quot;&gt;圆形&lt;/Button&gt;\n    &lt;Button shape=&quot;round&quot; disabled=&quot;disabled&quot;&gt;圆形&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-success&quot;&gt;success&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-warning&quot;&gt;warning&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-danger&quot;&gt;danger&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-royal&quot;&gt;royal&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"是否有背景色\"><a href=\"#是否有背景色\" class=\"headerlink\" title=\"是否有背景色\"></a>是否有背景色</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot; :plain=&quot;true&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot; :plain=&quot;true&quot; shape=&quot;round&quot;&gt;primary&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; type=&quot;submit&quot; :plain=&quot;true&quot; shape=&quot;round&quot; disabled=&quot;disabled&quot;&gt;primary&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"是否有icon以及修改icon样式\"><a href=\"#是否有icon以及修改icon样式\" class=\"headerlink\" title=\"是否有icon以及修改icon样式\"></a>是否有icon以及修改icon样式</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; icon=&quot;mv-icon-loading-1&quot; icon-style=&quot;font-size: 0.14rem;&quot;&gt;加载中...&lt;/Button&gt;\n    &lt;Button class=&quot;mv-btn-primary&quot; icon=&quot;mv-icon-loading-1&quot; icon-style=&quot;color: red;font-size: 0.14rem;&quot;&gt;加载完成&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"点击事件\"><a href=\"#点击事件\" class=\"headerlink\" title=\"点击事件\"></a>点击事件</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;Button @click=&quot;click&quot;&gt;按钮点击&lt;/Button&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Button } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Button\n        },\n        methods: {\n            click(event){\n                console.log(event);\n                debugger;\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Circle 进度环","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Circle 进度环\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\ncircle 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）\n\n\n## 如何使用\n\n``` html\n<template>\n   <Circle :percent.sync=\"10\" :stroke-width=\"15\" stroke-color=\"#ff4081\"></Circle> \n</template>\n<script>\nimport {\n    Circle\n} from 'mvui';\nexport default {\n    components: {\n        Circle,\n    }\n} \n</script>\n```\n\n\n## API\n\nCircle props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    percent    | 必填，百分比                |    Num            |       0       |       0-100            |\n|    size       | 选填，尺寸（单位rem）        |    Number          |      0.5       |  任意                |\n|   stroke-width| 选填，进度环宽度             |    Number          |       10       |     任意            |\n|stroke-color   | 选填，进度环颜色             |    String          |      #007aff   |    任意颜色        |\n|stroke-linecap | 选填，环顶端形状             |   String           |      round    |round(圆)，square（方）|\n|    bg-width   | 选填，背景环宽度             |    Number          |      10        |    任意数值        |\n|    bg-color   | 选填，背景环颜色             |    String          |      #ecf1f4   |    任意颜色        |\n\n\n\n\n## 右侧示例代码\n\n### 默认形状\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Circle</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认cricle</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">进度环顶端的形状</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\" stroke-linecap=\"square\"></Circle>\n                    <Circle :percent.sync=\"percent\" stroke-linecap=\"round\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">背景环宽度、颜色</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\" :bg-width=\"5\" bg-color=\"#7a67ee\"></Circle>\n                    <Circle :percent.sync=\"percent\" :bg-width=\"15\" bg-color=\"#fd6131\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">进度环宽度、颜色</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\" :stroke-width=\"5\" stroke-color=\"#10c0d8\"></Circle>\n                    <Circle :percent.sync=\"percent\" :stroke-width=\"15\" stroke-color=\"#ff4081\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">进度环文本</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\">\n                        润度\n                    </Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">控制进度环</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Button @click=\"add\" class=\"progress-btn-example\" shape=\"round\">增加</Button>\n                        <Button @click=\"minus\" class=\"progress-btn-example\" shape=\"round\">减少</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Circle,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Circle,\n        Button\n    },\n    data() {\n        return {\n            percent: 10,\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent < 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent > 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n.click-btn {\n    cursor: pointer;\n}\n</style>\n```\n\n","source":"_posts/circle.md","raw":"---\ntitle: Circle 进度环\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/circle?hidetitle=true\ncategories:\n- Chart\n---\n\n\n# Circle 进度环\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\ncircle 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）\n\n\n## 如何使用\n\n``` html\n<template>\n   <Circle :percent.sync=\"10\" :stroke-width=\"15\" stroke-color=\"#ff4081\"></Circle> \n</template>\n<script>\nimport {\n    Circle\n} from 'mvui';\nexport default {\n    components: {\n        Circle,\n    }\n} \n</script>\n```\n\n\n## API\n\nCircle props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    percent    | 必填，百分比                |    Num            |       0       |       0-100            |\n|    size       | 选填，尺寸（单位rem）        |    Number          |      0.5       |  任意                |\n|   stroke-width| 选填，进度环宽度             |    Number          |       10       |     任意            |\n|stroke-color   | 选填，进度环颜色             |    String          |      #007aff   |    任意颜色        |\n|stroke-linecap | 选填，环顶端形状             |   String           |      round    |round(圆)，square（方）|\n|    bg-width   | 选填，背景环宽度             |    Number          |      10        |    任意数值        |\n|    bg-color   | 选填，背景环颜色             |    String          |      #ecf1f4   |    任意颜色        |\n\n\n\n\n## 右侧示例代码\n\n### 默认形状\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Circle</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认cricle</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">进度环顶端的形状</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\" stroke-linecap=\"square\"></Circle>\n                    <Circle :percent.sync=\"percent\" stroke-linecap=\"round\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">背景环宽度、颜色</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\" :bg-width=\"5\" bg-color=\"#7a67ee\"></Circle>\n                    <Circle :percent.sync=\"percent\" :bg-width=\"15\" bg-color=\"#fd6131\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">进度环宽度、颜色</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\" :stroke-width=\"5\" stroke-color=\"#10c0d8\"></Circle>\n                    <Circle :percent.sync=\"percent\" :stroke-width=\"15\" stroke-color=\"#ff4081\"></Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">进度环文本</div>\n                <div class=\"wrapper-area-content\">\n                    <Circle :percent.sync=\"percent\">\n                        润度\n                    </Circle>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">控制进度环</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Button @click=\"add\" class=\"progress-btn-example\" shape=\"round\">增加</Button>\n                        <Button @click=\"minus\" class=\"progress-btn-example\" shape=\"round\">减少</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Circle,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Circle,\n        Button\n    },\n    data() {\n        return {\n            percent: 10,\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent < 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent > 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n.click-btn {\n    cursor: pointer;\n}\n</style>\n```\n\n","slug":"circle","published":1,"updated":"2016-11-23T01:57:31.000Z","_id":"ciut8cah20005v7s6u3w9b11d","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Circle-进度环\"><a href=\"#Circle-进度环\" class=\"headerlink\" title=\"Circle 进度环\"></a>Circle 进度环</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>circle 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n   &lt;Circle :percent.sync=&quot;10&quot; :stroke-width=&quot;15&quot; stroke-color=&quot;#ff4081&quot;&gt;&lt;/Circle&gt; \n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Circle\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Circle,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Circle props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">percent</td>\n<td style=\"text-align:left\">必填，百分比</td>\n<td style=\"text-align:left\">Num</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0-100</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">size</td>\n<td style=\"text-align:left\">选填，尺寸（单位rem）</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0.5</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-width</td>\n<td style=\"text-align:left\">选填，进度环宽度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-color</td>\n<td style=\"text-align:left\">选填，进度环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#007aff</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-linecap</td>\n<td style=\"text-align:left\">选填，环顶端形状</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">round</td>\n<td style=\"text-align:left\">round(圆)，square（方）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bg-width</td>\n<td style=\"text-align:left\">选填，背景环宽度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">任意数值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bg-color</td>\n<td style=\"text-align:left\">选填，背景环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#ecf1f4</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认形状\"><a href=\"#默认形状\" class=\"headerlink\" title=\"默认形状\"></a>默认形状</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Circle&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认cricle&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;进度环顶端的形状&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; stroke-linecap=&quot;square&quot;&gt;&lt;/Circle&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; stroke-linecap=&quot;round&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;背景环宽度、颜色&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :bg-width=&quot;5&quot; bg-color=&quot;#7a67ee&quot;&gt;&lt;/Circle&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :bg-width=&quot;15&quot; bg-color=&quot;#fd6131&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;进度环宽度、颜色&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :stroke-width=&quot;5&quot; stroke-color=&quot;#10c0d8&quot;&gt;&lt;/Circle&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :stroke-width=&quot;15&quot; stroke-color=&quot;#ff4081&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;进度环文本&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot;&gt;\n                        润度\n                    &lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;控制进度环&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Button @click=&quot;add&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;增加&lt;/Button&gt;\n                        &lt;Button @click=&quot;minus&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;减少&lt;/Button&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Circle,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Circle,\n        Button\n    },\n    data() {\n        return {\n            percent: 10,\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent &lt; 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent &gt; 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n.click-btn {\n    cursor: pointer;\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Circle-进度环\"><a href=\"#Circle-进度环\" class=\"headerlink\" title=\"Circle 进度环\"></a>Circle 进度环</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>circle 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n   &lt;Circle :percent.sync=&quot;10&quot; :stroke-width=&quot;15&quot; stroke-color=&quot;#ff4081&quot;&gt;&lt;/Circle&gt; \n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Circle\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Circle,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Circle props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">percent</td>\n<td style=\"text-align:left\">必填，百分比</td>\n<td style=\"text-align:left\">Num</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0-100</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">size</td>\n<td style=\"text-align:left\">选填，尺寸（单位rem）</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0.5</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-width</td>\n<td style=\"text-align:left\">选填，进度环宽度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-color</td>\n<td style=\"text-align:left\">选填，进度环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#007aff</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-linecap</td>\n<td style=\"text-align:left\">选填，环顶端形状</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">round</td>\n<td style=\"text-align:left\">round(圆)，square（方）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bg-width</td>\n<td style=\"text-align:left\">选填，背景环宽度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">10</td>\n<td style=\"text-align:left\">任意数值</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bg-color</td>\n<td style=\"text-align:left\">选填，背景环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#ecf1f4</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认形状\"><a href=\"#默认形状\" class=\"headerlink\" title=\"默认形状\"></a>默认形状</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Circle&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认cricle&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;进度环顶端的形状&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; stroke-linecap=&quot;square&quot;&gt;&lt;/Circle&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; stroke-linecap=&quot;round&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;背景环宽度、颜色&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :bg-width=&quot;5&quot; bg-color=&quot;#7a67ee&quot;&gt;&lt;/Circle&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :bg-width=&quot;15&quot; bg-color=&quot;#fd6131&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;进度环宽度、颜色&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :stroke-width=&quot;5&quot; stroke-color=&quot;#10c0d8&quot;&gt;&lt;/Circle&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot; :stroke-width=&quot;15&quot; stroke-color=&quot;#ff4081&quot;&gt;&lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;进度环文本&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Circle :percent.sync=&quot;percent&quot;&gt;\n                        润度\n                    &lt;/Circle&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;控制进度环&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Button @click=&quot;add&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;增加&lt;/Button&gt;\n                        &lt;Button @click=&quot;minus&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;减少&lt;/Button&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Circle,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Circle,\n        Button\n    },\n    data() {\n        return {\n            percent: 10,\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent &lt; 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent &gt; 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n.click-btn {\n    cursor: pointer;\n}\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Mvui介绍","date":"2016-10-18T09:25:16.000Z","_content":"\n\n# 关于Mvui\nMvui是一套基于 Vue.js 的开源UI组件库，主要服务于移动端产品，崇尚自由的原则，您可以自己有更改的样式以及添加组件的功能\nmVui = mobile + Vue.js + Ui + Component\n\n基于单文件的Vue组件化开发模式，npm + webpack + babel 开发\n\n组件由来：最近自己做了一个项目，由于有自己定制的ui，因此在造一个轮子，其中参考了很多框架，例如vuex、iview等，非常感谢国内积极做开源的公司和个人，让我们的开发方面了很多很多。在这里我也把自己的轮子贡献出来，由于作者技术有限，希望大家勿喷，觉得有问题的可以提出来一起交流交流，QQ群：215660750\n\n\n希望大家踊跃造轮子，因为没有自己亲手去折腾一番，永远对某些技术人认识还是不够深刻，多多动手，希望大家都能成为轮子发明人，哈哈\n\n\n[了解更多](/Summary/start/)\n\n\n","source":"_posts/desc.md","raw":"---\ntitle: Mvui介绍\ndate: 2016-10-18 17:25:16\ntags: \n- http://localhost:8080/#!/home\ncategories:\n- Summary\n---\n\n\n# 关于Mvui\nMvui是一套基于 Vue.js 的开源UI组件库，主要服务于移动端产品，崇尚自由的原则，您可以自己有更改的样式以及添加组件的功能\nmVui = mobile + Vue.js + Ui + Component\n\n基于单文件的Vue组件化开发模式，npm + webpack + babel 开发\n\n组件由来：最近自己做了一个项目，由于有自己定制的ui，因此在造一个轮子，其中参考了很多框架，例如vuex、iview等，非常感谢国内积极做开源的公司和个人，让我们的开发方面了很多很多。在这里我也把自己的轮子贡献出来，由于作者技术有限，希望大家勿喷，觉得有问题的可以提出来一起交流交流，QQ群：215660750\n\n\n希望大家踊跃造轮子，因为没有自己亲手去折腾一番，永远对某些技术人认识还是不够深刻，多多动手，希望大家都能成为轮子发明人，哈哈\n\n\n[了解更多](/Summary/start/)\n\n\n","slug":"desc","published":1,"updated":"2016-11-24T01:04:22.000Z","_id":"ciut8cah60006v7s6qefmfkv7","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"关于Mvui\"><a href=\"#关于Mvui\" class=\"headerlink\" title=\"关于Mvui\"></a>关于Mvui</h1><p>Mvui是一套基于 Vue.js 的开源UI组件库，主要服务于移动端产品，崇尚自由的原则，您可以自己有更改的样式以及添加组件的功能<br>mVui = mobile + Vue.js + Ui + Component</p>\n<p>基于单文件的Vue组件化开发模式，npm + webpack + babel 开发</p>\n<p>组件由来：最近自己做了一个项目，由于有自己定制的ui，因此在造一个轮子，其中参考了很多框架，例如vuex、iview等，非常感谢国内积极做开源的公司和个人，让我们的开发方面了很多很多。在这里我也把自己的轮子贡献出来，由于作者技术有限，希望大家勿喷，觉得有问题的可以提出来一起交流交流，QQ群：215660750</p>\n<p>希望大家踊跃造轮子，因为没有自己亲手去折腾一番，永远对某些技术人认识还是不够深刻，多多动手，希望大家都能成为轮子发明人，哈哈</p>\n<p><a href=\"/Summary/start/\">了解更多</a></p>\n","excerpt":"","more":"<h1 id=\"关于Mvui\"><a href=\"#关于Mvui\" class=\"headerlink\" title=\"关于Mvui\"></a>关于Mvui</h1><p>Mvui是一套基于 Vue.js 的开源UI组件库，主要服务于移动端产品，崇尚自由的原则，您可以自己有更改的样式以及添加组件的功能<br>mVui = mobile + Vue.js + Ui + Component</p>\n<p>基于单文件的Vue组件化开发模式，npm + webpack + babel 开发</p>\n<p>组件由来：最近自己做了一个项目，由于有自己定制的ui，因此在造一个轮子，其中参考了很多框架，例如vuex、iview等，非常感谢国内积极做开源的公司和个人，让我们的开发方面了很多很多。在这里我也把自己的轮子贡献出来，由于作者技术有限，希望大家勿喷，觉得有问题的可以提出来一起交流交流，QQ群：215660750</p>\n<p>希望大家踊跃造轮子，因为没有自己亲手去折腾一番，永远对某些技术人认识还是不够深刻，多多动手，希望大家都能成为轮子发明人，哈哈</p>\n<p><a href=\"/Summary/start/\">了解更多</a></p>\n"},{"title":"gotop 回到顶部","date":"2016-10-19T07:25:57.000Z","_content":"\n# Gotop 回到顶部\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nGotop 可以自定义通用属性class和style，以及icon（icon类名），iconStyle（icon样式），height（距离多高显示），on-click（回调）\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Gotop @on-click=\"gotopCallback\"></Gotop>\n</template>\n<script>\n    import { Gotop } from 'mvui';\n    export default{   \n        components: { \n            Gotop\n        },\n        methods: {\n            gotopCallback(){\n                console.dir('click');\n            }\n        }\n    }\n</script>\n```\n\n\n## API\n\n\nGotop props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    height     | 选填，滚动条多高显示          |    Numer          |     100         |    任意整数        |\n|    icon       | 选填，图标类名               |    String          |mv-icon-arrow-top|    任意图标类名        |\n|    iconStyle  | 选填，图标样式               |   [Object, String] |      -       |    任意               |\n\n\nGotop events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-click    |    点击按钮时触发            |        event          |\n\n\n\n## 右侧示例代码\n\n### 回到顶部\n``` html\n<template>  \n    <div class=\"body-wrapper\">\n        <Hometitle>Gotop</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">回到顶部</div>\n                <div class=\"wrapper-area-content\">\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                </div>\n            </div>\n            <Gotop @on-click=\"gotopCallback\"></Gotop>\n        </div>\n    </div>\n</template>\n<script>\n    import Hometitle from './common/hometitle.vue';\n    import { Gotop } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Gotop\n        },\n        methods: {\n            gotopCallback(e){\n                console.dir('click');\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .mv-btn{\n        margin-top: 0.05rem;\n    }\n</style>\n```\n\n\n\n","source":"_posts/gotop.md","raw":"---\ntitle: gotop 回到顶部\ndate: 2016-10-19 15:25:57\ntags: http://localhost:8080/#!/gotop?hidetitle=true\ncategories:\n- Other\n---\n\n# Gotop 回到顶部\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nGotop 可以自定义通用属性class和style，以及icon（icon类名），iconStyle（icon样式），height（距离多高显示），on-click（回调）\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Gotop @on-click=\"gotopCallback\"></Gotop>\n</template>\n<script>\n    import { Gotop } from 'mvui';\n    export default{   \n        components: { \n            Gotop\n        },\n        methods: {\n            gotopCallback(){\n                console.dir('click');\n            }\n        }\n    }\n</script>\n```\n\n\n## API\n\n\nGotop props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    height     | 选填，滚动条多高显示          |    Numer          |     100         |    任意整数        |\n|    icon       | 选填，图标类名               |    String          |mv-icon-arrow-top|    任意图标类名        |\n|    iconStyle  | 选填，图标样式               |   [Object, String] |      -       |    任意               |\n\n\nGotop events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-click    |    点击按钮时触发            |        event          |\n\n\n\n## 右侧示例代码\n\n### 回到顶部\n``` html\n<template>  \n    <div class=\"body-wrapper\">\n        <Hometitle>Gotop</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">回到顶部</div>\n                <div class=\"wrapper-area-content\">\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                    <div>回到顶部</div>\n                </div>\n            </div>\n            <Gotop @on-click=\"gotopCallback\"></Gotop>\n        </div>\n    </div>\n</template>\n<script>\n    import Hometitle from './common/hometitle.vue';\n    import { Gotop } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Gotop\n        },\n        methods: {\n            gotopCallback(e){\n                console.dir('click');\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .mv-btn{\n        margin-top: 0.05rem;\n    }\n</style>\n```\n\n\n\n","slug":"gotop","published":1,"updated":"2016-11-23T01:55:07.000Z","_id":"ciut8cah8000av7s6sizgjvk7","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Gotop-回到顶部\"><a href=\"#Gotop-回到顶部\" class=\"headerlink\" title=\"Gotop 回到顶部\"></a>Gotop 回到顶部</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Gotop 可以自定义通用属性class和style，以及icon（icon类名），iconStyle（icon样式），height（距离多高显示），on-click（回调）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Gotop @on-click=&quot;gotopCallback&quot;&gt;&lt;/Gotop&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Gotop } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Gotop\n        },\n        methods: {\n            gotopCallback(){\n                console.dir(&#39;click&#39;);\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Gotop props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:left\">选填，滚动条多高显示</td>\n<td style=\"text-align:left\">Numer</td>\n<td style=\"text-align:left\">100</td>\n<td style=\"text-align:left\">任意整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">icon</td>\n<td style=\"text-align:left\">选填，图标类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-arrow-top</td>\n<td style=\"text-align:left\">任意图标类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyle</td>\n<td style=\"text-align:left\">选填，图标样式</td>\n<td style=\"text-align:left\">[Object, String]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Gotop events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-click</td>\n<td style=\"text-align:left\">点击按钮时触发</td>\n<td style=\"text-align:left\">event</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"回到顶部\"><a href=\"#回到顶部\" class=\"headerlink\" title=\"回到顶部\"></a>回到顶部</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Gotop&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;回到顶部&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;Gotop @on-click=&quot;gotopCallback&quot;&gt;&lt;/Gotop&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import Hometitle from &#39;./common/hometitle.vue&#39;;\n    import { Gotop } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Gotop\n        },\n        methods: {\n            gotopCallback(e){\n                console.dir(&#39;click&#39;);\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .mv-btn{\n        margin-top: 0.05rem;\n    }\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Gotop-回到顶部\"><a href=\"#Gotop-回到顶部\" class=\"headerlink\" title=\"Gotop 回到顶部\"></a>Gotop 回到顶部</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Gotop 可以自定义通用属性class和style，以及icon（icon类名），iconStyle（icon样式），height（距离多高显示），on-click（回调）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Gotop @on-click=&quot;gotopCallback&quot;&gt;&lt;/Gotop&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Gotop } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Gotop\n        },\n        methods: {\n            gotopCallback(){\n                console.dir(&#39;click&#39;);\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Gotop props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:left\">选填，滚动条多高显示</td>\n<td style=\"text-align:left\">Numer</td>\n<td style=\"text-align:left\">100</td>\n<td style=\"text-align:left\">任意整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">icon</td>\n<td style=\"text-align:left\">选填，图标类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-arrow-top</td>\n<td style=\"text-align:left\">任意图标类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyle</td>\n<td style=\"text-align:left\">选填，图标样式</td>\n<td style=\"text-align:left\">[Object, String]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Gotop events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-click</td>\n<td style=\"text-align:left\">点击按钮时触发</td>\n<td style=\"text-align:left\">event</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"回到顶部\"><a href=\"#回到顶部\" class=\"headerlink\" title=\"回到顶部\"></a>回到顶部</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Gotop&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;回到顶部&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                    &lt;div&gt;回到顶部&lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;Gotop @on-click=&quot;gotopCallback&quot;&gt;&lt;/Gotop&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import Hometitle from &#39;./common/hometitle.vue&#39;;\n    import { Gotop } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Gotop\n        },\n        methods: {\n            gotopCallback(e){\n                console.dir(&#39;click&#39;);\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .mv-btn{\n        margin-top: 0.05rem;\n    }\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Icon 图标","date":"2016-10-18T09:25:16.000Z","_content":"\n\n\n\n# Icon 图标\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nicon 图标尽量选用常用的图标，由于项目中自定义的图标比较多，因此框架不提供更多的图标，\n自己可以用自己的图标，这里图标来源于iconfont，在此感谢[iconfont](http://www.iconfont.cn/)，感谢国内的大公司能做出这么多优秀的开源框架和工具。\n\n\n## 如何使用\n使用Icon组件只需要指定图标的class即可，示例代码\n\n``` html\n<Icon class=\"mv-icon-add\"></Icon>\n```\n渲染后为\n\n``` html\n<i class=\"mvfont mv-icon-add\"></i>\n```\n\n\n## API\n\nIcon Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意icon类        |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n\n\n\n## 右侧示例代码\n\n``` html\n<template>  \n    <div class=\"body-wrapper icon-wrapper wrapper-example-icon\">\n        <Hometitle>Icon</Hometitle>\n        <div class=\"wrapper-example\">\n            <li>\n                <Icon class=\"mv-icon-arrow-down-c\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-down-c</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-up-c\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-up-c</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-add\"></Icon>\n                <br/>\n                <span>mv-icon-add</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-reduce\"></Icon>\n                <br/>\n                <span>mv-icon-reduce</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-add\"></Icon>\n                <br/>\n                <span>mv-icon-round-add</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-add-fill\"></Icon>\n                <br/>\n                <span>mv-icon-round-add-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-close\"></Icon>\n                <br/>\n                <span>mv-icon-round-close</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-close-fill\"></Icon>\n                <br/>\n                <span>mv-icon-round-close-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-square-check\"></Icon>\n                <br/>\n                <span>mv-icon-square-check</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-square\"></Icon>\n                <br/>\n                <span>mv-icon-square</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-square-check-fill\"></Icon>\n                <br/>\n                <span>mv-icon-square-check-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-notification\"></Icon>\n                <br/>\n                <span>mv-icon-notification</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-notificationfill\"></Icon>\n                <br/>\n                <span>mv-icon-notificationfill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-check-fill\"></Icon>\n                <br/>\n                <span>mv-icon-round-check-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round\"></Icon>\n                <br/>\n                <span>mv-icon-round</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-radio\"></Icon>\n                <br/>\n                <span>mv-icon-round-radio</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-favor\"></Icon>\n                <br/>\n                <span>mv-icon-favor</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-favor-fill\"></Icon>\n                <br/>\n                <span>mv-icon-favor-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-close\"></Icon>\n                <br/>\n                <span>mv-icon-close</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-check\"></Icon>\n                <br/>\n                <span>mv-icon-check</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-top\"></Icon>\n                <br/>\n                <span>mv-icon-caret-top</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-right\"></Icon>\n                <br/>\n                <span>mv-icon-caret-right</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-left\"></Icon>\n                <br/>\n                <span>mv-icon-caret-left</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-bottom\"></Icon>\n                <br/>\n                <span>mv-icon-caret-bottom</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-top\"></Icon>\n                <br/>\n                <span>mv-icon-loading-3</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-bottom\"></Icon>\n                <br/>\n                <span>mv-icon-loading-4</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-left\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-left</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-right\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-right</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-1\"></Icon>\n                <br/>\n                <span>mv-icon-loading-1</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-2\"></Icon>\n                <br/>\n                <span>mv-icon-loading-2</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-3\"></Icon>\n                <br/>\n                <span>mv-icon-loading-3</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-4\"></Icon>\n                <br/>\n                <span>mv-icon-loading-4</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-5\"></Icon>\n                <br/>\n                <span>mv-icon-loading-5</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-6\"></Icon>\n                <br/>\n                <span>mv-icon-loading-2</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-7\"></Icon>\n                <br/>\n                <span>mv-icon-loading-7</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-home\"></Icon>\n                <br/>\n                <span>mv-icon-home</span>\n            </li>\n        </div>\n    </div>\n</template> \n<script>\n    import Hometitle from './common/hometitle.vue';\n    import { Icon } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Icon,\n        },\n        data(){\n            return {\n                test: {\n                    'font-size': '12px',\n                    'color': 'red'\n                }\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .wrapper-example-icon .wrapper-example{\n        li{\n            box-sizing: border-box;\n            -webkit-box-sizing: border-box;\n            width: 25%;\n            color: #5e6d82;\n            float: left;\n            text-align: center;\n            border-right: 1px solid #eee ;\n            border-bottom: 1px solid #eee ;\n            background: white;\n            height: 0.9rem;\n            padding: 0.1rem 0px;\n            &:nth-child(4n+4){\n                border-right: 0px;\n            }\n            span{\n                font-size: 0.11rem;\n            }\n        }\n    }\n</style>\n```\n\n\n\n\n\n\n\n\n\n","source":"_posts/icon.md","raw":"---\ntitle: Icon 图标\ndate: 2016-10-18 17:25:16\ntags: \n- http://localhost:8080/#!/icon?hidetitle=true\ncategories:\n- Basic\n---\n\n\n\n\n# Icon 图标\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nicon 图标尽量选用常用的图标，由于项目中自定义的图标比较多，因此框架不提供更多的图标，\n自己可以用自己的图标，这里图标来源于iconfont，在此感谢[iconfont](http://www.iconfont.cn/)，感谢国内的大公司能做出这么多优秀的开源框架和工具。\n\n\n## 如何使用\n使用Icon组件只需要指定图标的class即可，示例代码\n\n``` html\n<Icon class=\"mv-icon-add\"></Icon>\n```\n渲染后为\n\n``` html\n<i class=\"mvfont mv-icon-add\"></i>\n```\n\n\n## API\n\nIcon Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意icon类        |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n\n\n\n## 右侧示例代码\n\n``` html\n<template>  \n    <div class=\"body-wrapper icon-wrapper wrapper-example-icon\">\n        <Hometitle>Icon</Hometitle>\n        <div class=\"wrapper-example\">\n            <li>\n                <Icon class=\"mv-icon-arrow-down-c\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-down-c</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-up-c\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-up-c</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-add\"></Icon>\n                <br/>\n                <span>mv-icon-add</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-reduce\"></Icon>\n                <br/>\n                <span>mv-icon-reduce</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-add\"></Icon>\n                <br/>\n                <span>mv-icon-round-add</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-add-fill\"></Icon>\n                <br/>\n                <span>mv-icon-round-add-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-close\"></Icon>\n                <br/>\n                <span>mv-icon-round-close</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-close-fill\"></Icon>\n                <br/>\n                <span>mv-icon-round-close-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-square-check\"></Icon>\n                <br/>\n                <span>mv-icon-square-check</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-square\"></Icon>\n                <br/>\n                <span>mv-icon-square</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-square-check-fill\"></Icon>\n                <br/>\n                <span>mv-icon-square-check-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-notification\"></Icon>\n                <br/>\n                <span>mv-icon-notification</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-notificationfill\"></Icon>\n                <br/>\n                <span>mv-icon-notificationfill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-check-fill\"></Icon>\n                <br/>\n                <span>mv-icon-round-check-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round\"></Icon>\n                <br/>\n                <span>mv-icon-round</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-round-radio\"></Icon>\n                <br/>\n                <span>mv-icon-round-radio</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-favor\"></Icon>\n                <br/>\n                <span>mv-icon-favor</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-favor-fill\"></Icon>\n                <br/>\n                <span>mv-icon-favor-fill</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-close\"></Icon>\n                <br/>\n                <span>mv-icon-close</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-check\"></Icon>\n                <br/>\n                <span>mv-icon-check</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-top\"></Icon>\n                <br/>\n                <span>mv-icon-caret-top</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-right\"></Icon>\n                <br/>\n                <span>mv-icon-caret-right</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-left\"></Icon>\n                <br/>\n                <span>mv-icon-caret-left</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-caret-bottom\"></Icon>\n                <br/>\n                <span>mv-icon-caret-bottom</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-top\"></Icon>\n                <br/>\n                <span>mv-icon-loading-3</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-bottom\"></Icon>\n                <br/>\n                <span>mv-icon-loading-4</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-left\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-left</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-arrow-right\"></Icon>\n                <br/>\n                <span>mv-icon-arrow-right</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-1\"></Icon>\n                <br/>\n                <span>mv-icon-loading-1</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-2\"></Icon>\n                <br/>\n                <span>mv-icon-loading-2</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-3\"></Icon>\n                <br/>\n                <span>mv-icon-loading-3</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-4\"></Icon>\n                <br/>\n                <span>mv-icon-loading-4</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-5\"></Icon>\n                <br/>\n                <span>mv-icon-loading-5</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-6\"></Icon>\n                <br/>\n                <span>mv-icon-loading-2</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-loading-7\"></Icon>\n                <br/>\n                <span>mv-icon-loading-7</span>\n            </li>\n            <li>\n                <Icon class=\"mv-icon-home\"></Icon>\n                <br/>\n                <span>mv-icon-home</span>\n            </li>\n        </div>\n    </div>\n</template> \n<script>\n    import Hometitle from './common/hometitle.vue';\n    import { Icon } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Icon,\n        },\n        data(){\n            return {\n                test: {\n                    'font-size': '12px',\n                    'color': 'red'\n                }\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .wrapper-example-icon .wrapper-example{\n        li{\n            box-sizing: border-box;\n            -webkit-box-sizing: border-box;\n            width: 25%;\n            color: #5e6d82;\n            float: left;\n            text-align: center;\n            border-right: 1px solid #eee ;\n            border-bottom: 1px solid #eee ;\n            background: white;\n            height: 0.9rem;\n            padding: 0.1rem 0px;\n            &:nth-child(4n+4){\n                border-right: 0px;\n            }\n            span{\n                font-size: 0.11rem;\n            }\n        }\n    }\n</style>\n```\n\n\n\n\n\n\n\n\n\n","slug":"icon","published":1,"updated":"2016-11-22T06:03:41.000Z","_id":"ciut8cah9000cv7s6s3cnr89n","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Icon-图标\"><a href=\"#Icon-图标\" class=\"headerlink\" title=\"Icon 图标\"></a>Icon 图标</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>icon 图标尽量选用常用的图标，由于项目中自定义的图标比较多，因此框架不提供更多的图标，<br>自己可以用自己的图标，这里图标来源于iconfont，在此感谢<a href=\"http://www.iconfont.cn/\" target=\"_blank\" rel=\"external\">iconfont</a>，感谢国内的大公司能做出这么多优秀的开源框架和工具。</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用Icon组件只需要指定图标的class即可，示例代码</p>\n<pre><code class=\"html\">&lt;Icon class=&quot;mv-icon-add&quot;&gt;&lt;/Icon&gt;\n</code></pre>\n<p>渲染后为</p>\n<pre><code class=\"html\">&lt;i class=&quot;mvfont mv-icon-add&quot;&gt;&lt;/i&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Icon Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意icon类</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper icon-wrapper wrapper-example-icon&quot;&gt;\n        &lt;Hometitle&gt;Icon&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-down-c&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-down-c&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-up-c&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-up-c&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-add&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-add&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-reduce&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-reduce&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-add&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-add&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-add-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-add-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-close&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-close&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-close-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-close-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-square-check&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-square-check&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-square&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-square&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-square-check-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-square-check-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-notification&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-notification&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-notificationfill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-notificationfill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-check-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-check-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-radio&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-radio&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-favor&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-favor&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-favor-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-favor-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-close&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-close&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-check&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-check&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-top&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-top&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-right&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-right&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-left&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-left&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-bottom&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-bottom&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-top&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-3&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-bottom&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-4&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-left&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-left&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-right&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-right&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-1&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-1&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-2&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-2&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-3&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-3&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-4&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-4&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-5&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-5&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-6&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-2&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-7&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-7&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-home&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-home&lt;/span&gt;\n            &lt;/li&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt; \n&lt;script&gt;\n    import Hometitle from &#39;./common/hometitle.vue&#39;;\n    import { Icon } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Icon,\n        },\n        data(){\n            return {\n                test: {\n                    &#39;font-size&#39;: &#39;12px&#39;,\n                    &#39;color&#39;: &#39;red&#39;\n                }\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .wrapper-example-icon .wrapper-example{\n        li{\n            box-sizing: border-box;\n            -webkit-box-sizing: border-box;\n            width: 25%;\n            color: #5e6d82;\n            float: left;\n            text-align: center;\n            border-right: 1px solid #eee ;\n            border-bottom: 1px solid #eee ;\n            background: white;\n            height: 0.9rem;\n            padding: 0.1rem 0px;\n            &amp;:nth-child(4n+4){\n                border-right: 0px;\n            }\n            span{\n                font-size: 0.11rem;\n            }\n        }\n    }\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Icon-图标\"><a href=\"#Icon-图标\" class=\"headerlink\" title=\"Icon 图标\"></a>Icon 图标</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>icon 图标尽量选用常用的图标，由于项目中自定义的图标比较多，因此框架不提供更多的图标，<br>自己可以用自己的图标，这里图标来源于iconfont，在此感谢<a href=\"http://www.iconfont.cn/\">iconfont</a>，感谢国内的大公司能做出这么多优秀的开源框架和工具。</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>使用Icon组件只需要指定图标的class即可，示例代码</p>\n<pre><code class=\"html\">&lt;Icon class=&quot;mv-icon-add&quot;&gt;&lt;/Icon&gt;\n</code></pre>\n<p>渲染后为</p>\n<pre><code class=\"html\">&lt;i class=&quot;mvfont mv-icon-add&quot;&gt;&lt;/i&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Icon Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意icon类</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper icon-wrapper wrapper-example-icon&quot;&gt;\n        &lt;Hometitle&gt;Icon&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-down-c&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-down-c&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-up-c&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-up-c&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-add&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-add&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-reduce&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-reduce&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-add&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-add&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-add-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-add-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-close&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-close&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-close-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-close-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-square-check&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-square-check&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-square&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-square&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-square-check-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-square-check-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-notification&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-notification&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-notificationfill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-notificationfill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-check-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-check-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-round-radio&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-round-radio&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-favor&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-favor&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-favor-fill&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-favor-fill&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-close&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-close&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-check&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-check&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-top&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-top&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-right&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-right&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-left&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-left&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-caret-bottom&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-caret-bottom&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-top&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-3&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-bottom&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-4&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-left&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-left&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-arrow-right&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-arrow-right&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-1&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-1&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-2&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-2&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-3&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-3&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-4&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-4&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-5&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-5&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-6&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-2&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-loading-7&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-loading-7&lt;/span&gt;\n            &lt;/li&gt;\n            &lt;li&gt;\n                &lt;Icon class=&quot;mv-icon-home&quot;&gt;&lt;/Icon&gt;\n                &lt;br/&gt;\n                &lt;span&gt;mv-icon-home&lt;/span&gt;\n            &lt;/li&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt; \n&lt;script&gt;\n    import Hometitle from &#39;./common/hometitle.vue&#39;;\n    import { Icon } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Icon,\n        },\n        data(){\n            return {\n                test: {\n                    &#39;font-size&#39;: &#39;12px&#39;,\n                    &#39;color&#39;: &#39;red&#39;\n                }\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .wrapper-example-icon .wrapper-example{\n        li{\n            box-sizing: border-box;\n            -webkit-box-sizing: border-box;\n            width: 25%;\n            color: #5e6d82;\n            float: left;\n            text-align: center;\n            border-right: 1px solid #eee ;\n            border-bottom: 1px solid #eee ;\n            background: white;\n            height: 0.9rem;\n            padding: 0.1rem 0px;\n            &amp;:nth-child(4n+4){\n                border-right: 0px;\n            }\n            span{\n                font-size: 0.11rem;\n            }\n        }\n    }\n&lt;/style&gt;\n</code></pre>\n"},{"title":"loadding 加载图标","date":"2016-10-19T07:25:57.000Z","_content":"\n\n# Loadding 加载图标\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nLoadding 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Loadding position=\"center\" :show=\"show\"></Loadding>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n## API\n\n\nLoadding props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    type       | 选填，loadding样式          |    String          |     circle    |    circle,line        |\n|    show       | 选填，是否显示loadding       |    Boolean          |      false  |    false,true        |\n|    position  | 选填，图标位置               |     String          |      -       |    center               |\n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">默认loadding</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding class=\"custome-loadding\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n### 颜色\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">颜色</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding class=\"mv-loadding-primary\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n### circle or line\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">circle or line</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding type=\"circle\" :show=\"show\"></Loadding>\n            <Loadding type=\"line\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n### 自定义\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">自定义</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding :show=\"show\">\n                <Icon class=\"ion-load-c circular\" position=\"center\"></Icon>\n            </Loadding>\n            <Loadding :show=\"show\">\n                <Icon class=\"ion-android-refresh circular\"></Icon>\n            </Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding,Icon } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n            Icon\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n### 居中\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">居中</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding position=\"center\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n        ","source":"_posts/loadding.md","raw":"---\ntitle: loadding 加载图标\ndate: 2016-10-19 15:25:57\ntags: http://localhost:8080/#!/loadding?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Loadding 加载图标\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nLoadding 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Loadding position=\"center\" :show=\"show\"></Loadding>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n## API\n\n\nLoadding props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    type       | 选填，loadding样式          |    String          |     circle    |    circle,line        |\n|    show       | 选填，是否显示loadding       |    Boolean          |      false  |    false,true        |\n|    position  | 选填，图标位置               |     String          |      -       |    center               |\n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">默认loadding</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding class=\"custome-loadding\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n### 颜色\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">颜色</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding class=\"mv-loadding-primary\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n### circle or line\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">circle or line</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding type=\"circle\" :show=\"show\"></Loadding>\n            <Loadding type=\"line\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n### 自定义\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">自定义</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding :show=\"show\">\n                <Icon class=\"ion-load-c circular\" position=\"center\"></Icon>\n            </Loadding>\n            <Loadding :show=\"show\">\n                <Icon class=\"ion-android-refresh circular\"></Icon>\n            </Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding,Icon } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n            Icon\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n\n\n### 居中\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">居中</div>\n        <div class=\"wrapper-area-content\">\n            <Loadding position=\"center\" :show=\"show\"></Loadding>\n        </div>\n    </div>\n</template>\n<script>\n    import { Loadding } from 'mvui';\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n</script>\n```\n        ","slug":"loadding","published":1,"updated":"2016-11-23T01:40:24.000Z","_id":"ciut8cahd000fv7s6dwxwzijn","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Loadding-加载图标\"><a href=\"#Loadding-加载图标\" class=\"headerlink\" title=\"Loadding 加载图标\"></a>Loadding 加载图标</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Loadding 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Loadding position=&quot;center&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Loadding props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，loadding样式</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">circle</td>\n<td style=\"text-align:left\">circle,line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show</td>\n<td style=\"text-align:left\">选填，是否显示loadding</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false,true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">position</td>\n<td style=\"text-align:left\">选填，图标位置</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">center</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;默认loadding&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding class=&quot;custome-loadding&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;颜色&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding class=&quot;mv-loadding-primary&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"circle-or-line\"><a href=\"#circle-or-line\" class=\"headerlink\" title=\"circle or line\"></a>circle or line</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;circle or line&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding type=&quot;circle&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n            &lt;Loadding type=&quot;line&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"自定义\"><a href=\"#自定义\" class=\"headerlink\" title=\"自定义\"></a>自定义</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding :show=&quot;show&quot;&gt;\n                &lt;Icon class=&quot;ion-load-c circular&quot; position=&quot;center&quot;&gt;&lt;/Icon&gt;\n            &lt;/Loadding&gt;\n            &lt;Loadding :show=&quot;show&quot;&gt;\n                &lt;Icon class=&quot;ion-android-refresh circular&quot;&gt;&lt;/Icon&gt;\n            &lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding,Icon } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n            Icon\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"居中\"><a href=\"#居中\" class=\"headerlink\" title=\"居中\"></a>居中</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;居中&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding position=&quot;center&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Loadding-加载图标\"><a href=\"#Loadding-加载图标\" class=\"headerlink\" title=\"Loadding 加载图标\"></a>Loadding 加载图标</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Loadding 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Loadding position=&quot;center&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Loadding props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，loadding样式</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">circle</td>\n<td style=\"text-align:left\">circle,line</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show</td>\n<td style=\"text-align:left\">选填，是否显示loadding</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false,true</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">position</td>\n<td style=\"text-align:left\">选填，图标位置</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">center</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;默认loadding&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding class=&quot;custome-loadding&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"颜色\"><a href=\"#颜色\" class=\"headerlink\" title=\"颜色\"></a>颜色</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;颜色&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding class=&quot;mv-loadding-primary&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"circle-or-line\"><a href=\"#circle-or-line\" class=\"headerlink\" title=\"circle or line\"></a>circle or line</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;circle or line&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding type=&quot;circle&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n            &lt;Loadding type=&quot;line&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"自定义\"><a href=\"#自定义\" class=\"headerlink\" title=\"自定义\"></a>自定义</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding :show=&quot;show&quot;&gt;\n                &lt;Icon class=&quot;ion-load-c circular&quot; position=&quot;center&quot;&gt;&lt;/Icon&gt;\n            &lt;/Loadding&gt;\n            &lt;Loadding :show=&quot;show&quot;&gt;\n                &lt;Icon class=&quot;ion-android-refresh circular&quot;&gt;&lt;/Icon&gt;\n            &lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding,Icon } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n            Icon\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h3 id=\"居中\"><a href=\"#居中\" class=\"headerlink\" title=\"居中\"></a>居中</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;居中&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;Loadding position=&quot;center&quot; :show=&quot;show&quot;&gt;&lt;/Loadding&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Loadding } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Loadding,\n        },\n        data (){\n            return {\n                show: true\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n"},{"title":"更新日志","date":"2016-10-19T07:25:04.000Z","_content":"\n\n### 更新日志\n\n\n\n#### 1.0.0 \n2016-11-23 发布\n发布里程碑版本，包含了21个常用组件。\n\n***\n\n\n","source":"_posts/log.md","raw":"---\ntitle: 更新日志\ndate: 2016-10-19 15:25:04\ntags:\ncategories:\n- Summary\n---\n\n\n### 更新日志\n\n\n\n#### 1.0.0 \n2016-11-23 发布\n发布里程碑版本，包含了21个常用组件。\n\n***\n\n\n","slug":"log","published":1,"updated":"2016-11-29T08:00:44.000Z","_id":"ciut8cahe000hv7s6pm8wdvq9","comments":1,"layout":"post","photos":[],"link":"","content":"<h3 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h3><h4 id=\"1-0-0\"><a href=\"#1-0-0\" class=\"headerlink\" title=\"1.0.0\"></a>1.0.0</h4><p>2016-11-23 发布<br>发布里程碑版本，包含了21个常用组件。</p>\n<hr>\n","excerpt":"","more":"<h3 id=\"更新日志\"><a href=\"#更新日志\" class=\"headerlink\" title=\"更新日志\"></a>更新日志</h3><h4 id=\"1-0-0\"><a href=\"#1-0-0\" class=\"headerlink\" title=\"1.0.0\"></a>1.0.0</h4><p>2016-11-23 发布<br>发布里程碑版本，包含了21个常用组件。</p>\n<hr>\n"},{"title":"Modal 模态框","date":"2016-10-19T07:25:42.000Z","_content":"\n\n# Modal 弹出框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nbutton 可以自定义通用属性class和style，以及show（是否显示），headerHide（隐藏header），footerHide（隐藏footerHide），cancelText（取消按钮文本），okText（确定按钮文本），width（width宽度）\n\n\n\n\n## 如何使用\n\n\n``` html\n<Modal :show.sync=\"show\">\n    <div slot=\"header\">Mvui 默认弹框</div>\n    <div>这是一个弹窗</div>\n</Modal>\n<script>\n    import { Modal } from 'mvui';\n    export default{   \n        components: { \n            Modal,\n        },\n        data(){\n             return {\n                show: true\n             }\n        },\n    }\n</script>\n```\n\n\n## API\n\nModal props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    show       | 必填，是否显示               |    Boolean          |              |       false,ture     |\n|    header-hide | 选填，是否隐藏header        |    Boolean          |      false    | false,ture           |\n|    footer-hide | 选填，是否隐藏footer        |    Boolean          |      false    |  false,ture          |\n|    cancel-text | 选填，取消按钮文本           |    String          |      取消     |      任意文本      |\n|    ok-text     | 选填，确定按钮文本           |    String          |      确定       |    任意文本        |\n|    width      | 选填，弹框宽度               |   Number           |      80%      |    任意宽度         |\n|    auto-close | 选填，点击的时候是否自动关闭   |   Boolean           |     true      |    默认开启         |\n\n\n\n\n\n## 右侧示例代码\n\n\n### 默认\n``` html\n<template>  \n    <div class=\"body-wrapper\">\n        <Hometitle>Modal</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认模态框</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow1\">点击提示弹框</div>\n                    <Modal :show.sync=\"show1\">\n                        <div slot=\"header\">Mvui 默认弹框</div>\n                        <div>这是一个弹窗</div>\n                    </Modal>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">通过属性隐藏header 和 footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow2\">点击提示弹框</div>\n                    <Modal :show.sync=\"show2\" :footer-hide=\"true\" :header-hide=\"true\">\n                        <div slot=\"header\">Mvui 默认弹框</div>\n                        <div>\n                            这是一个没有header和footer的弹框\n                            <div @click=\"clickhide2\">点我关闭</div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">通过slot 隐藏header 和 footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow3\">点击提示弹框</div>\n                    <Modal :show.sync=\"show3\">\n                        <div slot=\"header\"></div>\n                        <div>\n                            这是一个没有header和footer的弹框\n                            <div @click=\"clickhide3\">点我关闭</div>\n                        </div>\n                        <div slot=\"footer\"></div>\n                    </Modal>\n                </div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义header footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow4\">点击提示弹框</div>\n                    <Modal :show.sync=\"show4\">\n                        <div slot=\"header\">\n                            自定义模态框\n                        </div>\n                        <div>\n                            <div>你好，我是自定义模块狂</div>\n                            <div>你好，我是自定义模块狂框框</div>\n                        </div>\n                        <div slot=\"footer\">\n                            <div @click=\"clickhide4\" style=\"padding-bottom: 10px;\">自定义按钮</div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义header footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow5\">事件回调</div>\n                    <Modal :show.sync=\"show5\" @on-cancel=\"oncancel\" @on-ok=\"onok\" :auto-close=\"false\">\n                        <div slot=\"header\">\n                            事件回调\n                        </div>\n                        <div>\n                            <div>你好，我是自定义模块狂</div>\n                            <div>你好，我是自定义模块狂框框</div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n\n            <Tip :show.sync=\"showtip\">{{tipmessage}}</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import Hometitle from './common/hometitle.vue';\n    import { Modal, Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Modal,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n                show2: false,\n                show3: false,\n                show4: false,\n                show5: false,\n                showtip: false,\n                tipmessage: ''\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            },\n            clickshow2(){\n                this.show2 = true;\n            },\n            clickhide2(){\n                this.show2 = false;\n            },\n            clickshow3(){\n                this.show3 = true;\n            },\n            clickhide3(){\n                this.show3 = false;\n            },\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickhide4(){\n                this.show4 = false;\n            },\n            clickshow5(){\n                this.show5 = true;\n            },\n            oncancel(){\n                this.show5 = false;\n                this.tipmessage = \"点击cancel按钮\";\n                this.showtip = true;\n            },\n            onok(){\n                this.tipmessage = \"点击ok按钮\";\n                this.showtip = true;\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n","source":"_posts/modal.md","raw":"---\ntitle: Modal 模态框\ndate: 2016-10-19 15:25:42\ntags: http://localhost:8080/#!/modal?hidetitle=true\ncategories:\n- View\n---\n\n\n# Modal 弹出框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nbutton 可以自定义通用属性class和style，以及show（是否显示），headerHide（隐藏header），footerHide（隐藏footerHide），cancelText（取消按钮文本），okText（确定按钮文本），width（width宽度）\n\n\n\n\n## 如何使用\n\n\n``` html\n<Modal :show.sync=\"show\">\n    <div slot=\"header\">Mvui 默认弹框</div>\n    <div>这是一个弹窗</div>\n</Modal>\n<script>\n    import { Modal } from 'mvui';\n    export default{   \n        components: { \n            Modal,\n        },\n        data(){\n             return {\n                show: true\n             }\n        },\n    }\n</script>\n```\n\n\n## API\n\nModal props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    show       | 必填，是否显示               |    Boolean          |              |       false,ture     |\n|    header-hide | 选填，是否隐藏header        |    Boolean          |      false    | false,ture           |\n|    footer-hide | 选填，是否隐藏footer        |    Boolean          |      false    |  false,ture          |\n|    cancel-text | 选填，取消按钮文本           |    String          |      取消     |      任意文本      |\n|    ok-text     | 选填，确定按钮文本           |    String          |      确定       |    任意文本        |\n|    width      | 选填，弹框宽度               |   Number           |      80%      |    任意宽度         |\n|    auto-close | 选填，点击的时候是否自动关闭   |   Boolean           |     true      |    默认开启         |\n\n\n\n\n\n## 右侧示例代码\n\n\n### 默认\n``` html\n<template>  \n    <div class=\"body-wrapper\">\n        <Hometitle>Modal</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认模态框</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow1\">点击提示弹框</div>\n                    <Modal :show.sync=\"show1\">\n                        <div slot=\"header\">Mvui 默认弹框</div>\n                        <div>这是一个弹窗</div>\n                    </Modal>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">通过属性隐藏header 和 footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow2\">点击提示弹框</div>\n                    <Modal :show.sync=\"show2\" :footer-hide=\"true\" :header-hide=\"true\">\n                        <div slot=\"header\">Mvui 默认弹框</div>\n                        <div>\n                            这是一个没有header和footer的弹框\n                            <div @click=\"clickhide2\">点我关闭</div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">通过slot 隐藏header 和 footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow3\">点击提示弹框</div>\n                    <Modal :show.sync=\"show3\">\n                        <div slot=\"header\"></div>\n                        <div>\n                            这是一个没有header和footer的弹框\n                            <div @click=\"clickhide3\">点我关闭</div>\n                        </div>\n                        <div slot=\"footer\"></div>\n                    </Modal>\n                </div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义header footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow4\">点击提示弹框</div>\n                    <Modal :show.sync=\"show4\">\n                        <div slot=\"header\">\n                            自定义模态框\n                        </div>\n                        <div>\n                            <div>你好，我是自定义模块狂</div>\n                            <div>你好，我是自定义模块狂框框</div>\n                        </div>\n                        <div slot=\"footer\">\n                            <div @click=\"clickhide4\" style=\"padding-bottom: 10px;\">自定义按钮</div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义header footer</div>\n                <div class=\"wrapper-area-content\">\n                    <div class=\"click-btn\" @click=\"clickshow5\">事件回调</div>\n                    <Modal :show.sync=\"show5\" @on-cancel=\"oncancel\" @on-ok=\"onok\" :auto-close=\"false\">\n                        <div slot=\"header\">\n                            事件回调\n                        </div>\n                        <div>\n                            <div>你好，我是自定义模块狂</div>\n                            <div>你好，我是自定义模块狂框框</div>\n                        </div>\n                    </Modal>\n                </div>\n            </div>\n\n            <Tip :show.sync=\"showtip\">{{tipmessage}}</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import Hometitle from './common/hometitle.vue';\n    import { Modal, Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Modal,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n                show2: false,\n                show3: false,\n                show4: false,\n                show5: false,\n                showtip: false,\n                tipmessage: ''\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            },\n            clickshow2(){\n                this.show2 = true;\n            },\n            clickhide2(){\n                this.show2 = false;\n            },\n            clickshow3(){\n                this.show3 = true;\n            },\n            clickhide3(){\n                this.show3 = false;\n            },\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickhide4(){\n                this.show4 = false;\n            },\n            clickshow5(){\n                this.show5 = true;\n            },\n            oncancel(){\n                this.show5 = false;\n                this.tipmessage = \"点击cancel按钮\";\n                this.showtip = true;\n            },\n            onok(){\n                this.tipmessage = \"点击ok按钮\";\n                this.showtip = true;\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n","slug":"modal","published":1,"updated":"2016-11-23T01:57:12.000Z","_id":"ciut8cahg000lv7s6wupx0atp","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Modal-弹出框\"><a href=\"#Modal-弹出框\" class=\"headerlink\" title=\"Modal 弹出框\"></a>Modal 弹出框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>button 可以自定义通用属性class和style，以及show（是否显示），headerHide（隐藏header），footerHide（隐藏footerHide），cancelText（取消按钮文本），okText（确定按钮文本），width（width宽度）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;Modal :show.sync=&quot;show&quot;&gt;\n    &lt;div slot=&quot;header&quot;&gt;Mvui 默认弹框&lt;/div&gt;\n    &lt;div&gt;这是一个弹窗&lt;/div&gt;\n&lt;/Modal&gt;\n&lt;script&gt;\n    import { Modal } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Modal,\n        },\n        data(){\n             return {\n                show: true\n             }\n        },\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Modal props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show</td>\n<td style=\"text-align:left\">必填，是否显示</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">false,ture</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">header-hide</td>\n<td style=\"text-align:left\">选填，是否隐藏header</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false,ture</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">footer-hide</td>\n<td style=\"text-align:left\">选填，是否隐藏footer</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false,ture</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cancel-text</td>\n<td style=\"text-align:left\">选填，取消按钮文本</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">取消</td>\n<td style=\"text-align:left\">任意文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ok-text</td>\n<td style=\"text-align:left\">选填，确定按钮文本</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">确定</td>\n<td style=\"text-align:left\">任意文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">width</td>\n<td style=\"text-align:left\">选填，弹框宽度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">80%</td>\n<td style=\"text-align:left\">任意宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">auto-close</td>\n<td style=\"text-align:left\">选填，点击的时候是否自动关闭</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">默认开启</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认\"><a href=\"#默认\" class=\"headerlink\" title=\"默认\"></a>默认</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Modal&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认模态框&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow1&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show1&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;Mvui 默认弹框&lt;/div&gt;\n                        &lt;div&gt;这是一个弹窗&lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;通过属性隐藏header 和 footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow2&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show2&quot; :footer-hide=&quot;true&quot; :header-hide=&quot;true&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;Mvui 默认弹框&lt;/div&gt;\n                        &lt;div&gt;\n                            这是一个没有header和footer的弹框\n                            &lt;div @click=&quot;clickhide2&quot;&gt;点我关闭&lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;通过slot 隐藏header 和 footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow3&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show3&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;&lt;/div&gt;\n                        &lt;div&gt;\n                            这是一个没有header和footer的弹框\n                            &lt;div @click=&quot;clickhide3&quot;&gt;点我关闭&lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div slot=&quot;footer&quot;&gt;&lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义header footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow4&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show4&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;\n                            自定义模态框\n                        &lt;/div&gt;\n                        &lt;div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂&lt;/div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂框框&lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div slot=&quot;footer&quot;&gt;\n                            &lt;div @click=&quot;clickhide4&quot; style=&quot;padding-bottom: 10px;&quot;&gt;自定义按钮&lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义header footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow5&quot;&gt;事件回调&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show5&quot; @on-cancel=&quot;oncancel&quot; @on-ok=&quot;onok&quot; :auto-close=&quot;false&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;\n                            事件回调\n                        &lt;/div&gt;\n                        &lt;div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂&lt;/div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂框框&lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;Tip :show.sync=&quot;showtip&quot;&gt;{{tipmessage}}&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import Hometitle from &#39;./common/hometitle.vue&#39;;\n    import { Modal, Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Modal,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n                show2: false,\n                show3: false,\n                show4: false,\n                show5: false,\n                showtip: false,\n                tipmessage: &#39;&#39;\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            },\n            clickshow2(){\n                this.show2 = true;\n            },\n            clickhide2(){\n                this.show2 = false;\n            },\n            clickshow3(){\n                this.show3 = true;\n            },\n            clickhide3(){\n                this.show3 = false;\n            },\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickhide4(){\n                this.show4 = false;\n            },\n            clickshow5(){\n                this.show5 = true;\n            },\n            oncancel(){\n                this.show5 = false;\n                this.tipmessage = &quot;点击cancel按钮&quot;;\n                this.showtip = true;\n            },\n            onok(){\n                this.tipmessage = &quot;点击ok按钮&quot;;\n                this.showtip = true;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Modal-弹出框\"><a href=\"#Modal-弹出框\" class=\"headerlink\" title=\"Modal 弹出框\"></a>Modal 弹出框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>button 可以自定义通用属性class和style，以及show（是否显示），headerHide（隐藏header），footerHide（隐藏footerHide），cancelText（取消按钮文本），okText（确定按钮文本），width（width宽度）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;Modal :show.sync=&quot;show&quot;&gt;\n    &lt;div slot=&quot;header&quot;&gt;Mvui 默认弹框&lt;/div&gt;\n    &lt;div&gt;这是一个弹窗&lt;/div&gt;\n&lt;/Modal&gt;\n&lt;script&gt;\n    import { Modal } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Modal,\n        },\n        data(){\n             return {\n                show: true\n             }\n        },\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Modal props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show</td>\n<td style=\"text-align:left\">必填，是否显示</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\"></td>\n<td style=\"text-align:left\">false,ture</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">header-hide</td>\n<td style=\"text-align:left\">选填，是否隐藏header</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false,ture</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">footer-hide</td>\n<td style=\"text-align:left\">选填，是否隐藏footer</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">false,ture</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">cancel-text</td>\n<td style=\"text-align:left\">选填，取消按钮文本</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">取消</td>\n<td style=\"text-align:left\">任意文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">ok-text</td>\n<td style=\"text-align:left\">选填，确定按钮文本</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">确定</td>\n<td style=\"text-align:left\">任意文本</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">width</td>\n<td style=\"text-align:left\">选填，弹框宽度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">80%</td>\n<td style=\"text-align:left\">任意宽度</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">auto-close</td>\n<td style=\"text-align:left\">选填，点击的时候是否自动关闭</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">默认开启</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认\"><a href=\"#默认\" class=\"headerlink\" title=\"默认\"></a>默认</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Modal&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认模态框&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow1&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show1&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;Mvui 默认弹框&lt;/div&gt;\n                        &lt;div&gt;这是一个弹窗&lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;通过属性隐藏header 和 footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow2&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show2&quot; :footer-hide=&quot;true&quot; :header-hide=&quot;true&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;Mvui 默认弹框&lt;/div&gt;\n                        &lt;div&gt;\n                            这是一个没有header和footer的弹框\n                            &lt;div @click=&quot;clickhide2&quot;&gt;点我关闭&lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;通过slot 隐藏header 和 footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow3&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show3&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;&lt;/div&gt;\n                        &lt;div&gt;\n                            这是一个没有header和footer的弹框\n                            &lt;div @click=&quot;clickhide3&quot;&gt;点我关闭&lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div slot=&quot;footer&quot;&gt;&lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义header footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow4&quot;&gt;点击提示弹框&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show4&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;\n                            自定义模态框\n                        &lt;/div&gt;\n                        &lt;div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂&lt;/div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂框框&lt;/div&gt;\n                        &lt;/div&gt;\n                        &lt;div slot=&quot;footer&quot;&gt;\n                            &lt;div @click=&quot;clickhide4&quot; style=&quot;padding-bottom: 10px;&quot;&gt;自定义按钮&lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义header footer&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow5&quot;&gt;事件回调&lt;/div&gt;\n                    &lt;Modal :show.sync=&quot;show5&quot; @on-cancel=&quot;oncancel&quot; @on-ok=&quot;onok&quot; :auto-close=&quot;false&quot;&gt;\n                        &lt;div slot=&quot;header&quot;&gt;\n                            事件回调\n                        &lt;/div&gt;\n                        &lt;div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂&lt;/div&gt;\n                            &lt;div&gt;你好，我是自定义模块狂框框&lt;/div&gt;\n                        &lt;/div&gt;\n                    &lt;/Modal&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;Tip :show.sync=&quot;showtip&quot;&gt;{{tipmessage}}&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import Hometitle from &#39;./common/hometitle.vue&#39;;\n    import { Modal, Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Modal,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n                show2: false,\n                show3: false,\n                show4: false,\n                show5: false,\n                showtip: false,\n                tipmessage: &#39;&#39;\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            },\n            clickshow2(){\n                this.show2 = true;\n            },\n            clickhide2(){\n                this.show2 = false;\n            },\n            clickshow3(){\n                this.show3 = true;\n            },\n            clickhide3(){\n                this.show3 = false;\n            },\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickhide4(){\n                this.show4 = false;\n            },\n            clickshow5(){\n                this.show5 = true;\n            },\n            oncancel(){\n                this.show5 = false;\n                this.tipmessage = &quot;点击cancel按钮&quot;;\n                this.showtip = true;\n            },\n            onok(){\n                this.tipmessage = &quot;点击ok按钮&quot;;\n                this.showtip = true;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Progress 进度条","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Progress 进度环\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nprogress 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）\n\n\n## 如何使用\n\n``` html\n<template>\n    <Progress :percent.sync=\"percent\"></Progress>\n</template>\n<script>\nimport { Progress } from 'mvui';\nexport default {\n    components: {\n        Progress,\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nProgress props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    percent    | 必填，百分比                |    Num            |       0       |       0-100            |\n|    height     | 选填，进度条高度            |    Number          |      0.1（rem）  |  任意                |\n|   stroke-color| 选填，进度环颜色             |    String          |      #007aff   |    任意颜色        |\n|    shape      | 选填，进度条形状             |   String           |      round    |round(圆)，square（方）|\n|    bg-color   | 选填，背景环颜色             |    String          |      #f3f3f3   |    任意颜色        |\n\n\n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Progress</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认进度条</div>\n                <div class=\"wrapper-area-content\">\n                    <Progress :percent.sync=\"percent\"></Progress>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">高度</div>\n                <div class=\"wrapper-area-content\">\n                    <Progress :percent.sync=\"percent\" :height=\"0.05\" class=\"my-progress\"></Progress>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">颜色</div>\n                <div class=\"wrapper-area-content\">\n                    <Progress :percent.sync=\"percent\" stroke-color=\"#23d089\" class=\"my-progress\"></Progress>\n                    <Progress :percent.sync=\"percent\" bg-color=\"#cddc39\" class=\"my-progress\"></Progress>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">更改进度</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Button @click=\"add\" class=\"progress-btn-example\" shape=\"round\">增加</Button>\n                        <Button @click=\"minus\" class=\"progress-btn-example\" shape=\"round\">减少</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Progress,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Progress,\n        Button\n    },\n    data() {\n        return {\n            percent: 10\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent < 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent > 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n.progress-btn-example {\n    padding: 0.03rem 0.5rem;\n}\n</style>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/progress.md","raw":"---\ntitle: Progress 进度条\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/progress?hidetitle=true\ncategories:\n- Chart\n---\n\n\n# Progress 进度环\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nprogress 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）\n\n\n## 如何使用\n\n``` html\n<template>\n    <Progress :percent.sync=\"percent\"></Progress>\n</template>\n<script>\nimport { Progress } from 'mvui';\nexport default {\n    components: {\n        Progress,\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nProgress props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    percent    | 必填，百分比                |    Num            |       0       |       0-100            |\n|    height     | 选填，进度条高度            |    Number          |      0.1（rem）  |  任意                |\n|   stroke-color| 选填，进度环颜色             |    String          |      #007aff   |    任意颜色        |\n|    shape      | 选填，进度条形状             |   String           |      round    |round(圆)，square（方）|\n|    bg-color   | 选填，背景环颜色             |    String          |      #f3f3f3   |    任意颜色        |\n\n\n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Progress</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认进度条</div>\n                <div class=\"wrapper-area-content\">\n                    <Progress :percent.sync=\"percent\"></Progress>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">高度</div>\n                <div class=\"wrapper-area-content\">\n                    <Progress :percent.sync=\"percent\" :height=\"0.05\" class=\"my-progress\"></Progress>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">颜色</div>\n                <div class=\"wrapper-area-content\">\n                    <Progress :percent.sync=\"percent\" stroke-color=\"#23d089\" class=\"my-progress\"></Progress>\n                    <Progress :percent.sync=\"percent\" bg-color=\"#cddc39\" class=\"my-progress\"></Progress>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">更改进度</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Button @click=\"add\" class=\"progress-btn-example\" shape=\"round\">增加</Button>\n                        <Button @click=\"minus\" class=\"progress-btn-example\" shape=\"round\">减少</Button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Progress,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Progress,\n        Button\n    },\n    data() {\n        return {\n            percent: 10\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent < 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent > 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n.progress-btn-example {\n    padding: 0.03rem 0.5rem;\n}\n</style>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"progress","published":1,"updated":"2016-11-23T01:57:54.000Z","_id":"ciut8cahh000ov7s6a6ft5ew9","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Progress-进度环\"><a href=\"#Progress-进度环\" class=\"headerlink\" title=\"Progress 进度环\"></a>Progress 进度环</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>progress 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Progress :percent.sync=&quot;percent&quot;&gt;&lt;/Progress&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Progress } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Progress,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Progress props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">percent</td>\n<td style=\"text-align:left\">必填，百分比</td>\n<td style=\"text-align:left\">Num</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0-100</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:left\">选填，进度条高度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0.1（rem）</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-color</td>\n<td style=\"text-align:left\">选填，进度环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#007aff</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shape</td>\n<td style=\"text-align:left\">选填，进度条形状</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">round</td>\n<td style=\"text-align:left\">round(圆)，square（方）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bg-color</td>\n<td style=\"text-align:left\">选填，背景环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#f3f3f3</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Progress&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认进度条&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot;&gt;&lt;/Progress&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;高度&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot; :height=&quot;0.05&quot; class=&quot;my-progress&quot;&gt;&lt;/Progress&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;颜色&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot; stroke-color=&quot;#23d089&quot; class=&quot;my-progress&quot;&gt;&lt;/Progress&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot; bg-color=&quot;#cddc39&quot; class=&quot;my-progress&quot;&gt;&lt;/Progress&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;更改进度&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Button @click=&quot;add&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;增加&lt;/Button&gt;\n                        &lt;Button @click=&quot;minus&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;减少&lt;/Button&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Progress,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Progress,\n        Button\n    },\n    data() {\n        return {\n            percent: 10\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent &lt; 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent &gt; 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n.progress-btn-example {\n    padding: 0.03rem 0.5rem;\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Progress-进度环\"><a href=\"#Progress-进度环\" class=\"headerlink\" title=\"Progress 进度环\"></a>Progress 进度环</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>progress 可以自定义通用属性class和style，以及percent（百分比），size（进度换大小），strokeWidth（进度环宽度），strokeColor（进度环颜色），bgWidth（背景环宽度），bgColor（背景环颜色）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Progress :percent.sync=&quot;percent&quot;&gt;&lt;/Progress&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Progress } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Progress,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Progress props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">percent</td>\n<td style=\"text-align:left\">必填，百分比</td>\n<td style=\"text-align:left\">Num</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">0-100</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">height</td>\n<td style=\"text-align:left\">选填，进度条高度</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0.1（rem）</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">stroke-color</td>\n<td style=\"text-align:left\">选填，进度环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#007aff</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">shape</td>\n<td style=\"text-align:left\">选填，进度条形状</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">round</td>\n<td style=\"text-align:left\">round(圆)，square（方）</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bg-color</td>\n<td style=\"text-align:left\">选填，背景环颜色</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">#f3f3f3</td>\n<td style=\"text-align:left\">任意颜色</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Progress&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认进度条&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot;&gt;&lt;/Progress&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;高度&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot; :height=&quot;0.05&quot; class=&quot;my-progress&quot;&gt;&lt;/Progress&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;颜色&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot; stroke-color=&quot;#23d089&quot; class=&quot;my-progress&quot;&gt;&lt;/Progress&gt;\n                    &lt;Progress :percent.sync=&quot;percent&quot; bg-color=&quot;#cddc39&quot; class=&quot;my-progress&quot;&gt;&lt;/Progress&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;更改进度&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Button @click=&quot;add&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;增加&lt;/Button&gt;\n                        &lt;Button @click=&quot;minus&quot; class=&quot;progress-btn-example&quot; shape=&quot;round&quot;&gt;减少&lt;/Button&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Progress,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Progress,\n        Button\n    },\n    data() {\n        return {\n            percent: 10\n        }\n    },\n    methods: {\n        add() {\n            if (this.percent &lt; 100) {\n                this.percent = this.percent + 10;\n            }\n        },\n        minus() {\n            if (this.percent &gt; 0) {\n                this.percent = this.percent - 10;\n            }\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n.progress-btn-example {\n    padding: 0.03rem 0.5rem;\n}\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Pullrefresh 下拉刷新","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Pullrefresh 下拉刷新\n\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nPullrefresh 下拉刷新，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。\n\n\n# 1）window默认滚动条 使用方法\n需要将组件放到最外层里面的div就好,status既刷新状态，完成后，需要值为0，例如：\n\n\n``` html\n<template>\n   <div>\n       <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n    <div>内容文章</div>\n   </div>\n</template>\n<script>\nimport {\n    Pullrefresh\n} from 'mvui';\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n\n# 2）某元素的默认滚动条 使用方法\n需要将组件放到设置为滚动条元素的内部,.scroll-elem设置为overflow为auto或者scroll, status既刷新状态，完成后，需要值为0，例如：\n\n``` html\n<template>\n   <div class=\"scroll-elem\">\n       <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n        <div>内容文章</div>\n   </div>\n</template>\n<script>\nimport {\n    Pullrefresh\n} from 'mvui';\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n# 3）scroll滚动条 使用方法\n需要设置scroll滚动条的三个属性，:pull-refresh=\"true\" @on-refresh=\"pullRefresh\" :refresh-status.sync=\"status\"，\n同时可以通过slot更改状态\n\n\n``` html\n<template>\n   <div class=\"wrapper-area-content\" id=\"parent\">\n        <Scroll :size.sync=\"size\" :is-refresh.sync=\"isRefresh\">\n            <div slot=\"down\">我是down按钮</div>\n            <div slot=\"up\">我是up按钮</div>\n            <div slot=\"load\">我是loadding</div>\n            <ul>\n                <li>文章内容</li>\n            </ul>\n        </Scroll>\n    </div>\n</template>\n<script>\nimport {\n    Pullrefresh\n} from 'mvui';\nexport default {\n    components: {\n        Scroll,\n        Pullrefresh,\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n## API\n\nPullrefresh Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    disabled   | 选填，是否禁用               |    Boolean          |      false  |  true , false            |\n| prevent-default| 选填，是否阻止默认行为        |    Boolean          |       false |     true , false        |\n|  scroll       | 选填，滚动条类型             |    String          |      window   |    window,scroll,other |\n|direction      | 选填，滚动防线             |   String           |      y          |    x , y                |\n|status         | 选填，状态             |    String       |   ready      |ready 准备,move下拉中,loading下拉完成|\n\n\n\n## 右侧示例代码\n\n### window 默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n        <Hometitle>PullRefreshWindow</Hometitle>\n        <div class=\"wrapper-example wrapper-example-refresh-window\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <ul>\n                    <li>Pretty row 1</li>\n                    <li>Pretty row 2</li>\n                    <li>Pretty row 3</li>\n                    <li>Pretty row 4</li>\n                    <li>Pretty row 5</li>\n                    <li>Pretty row 6</li>\n                    <li>Pretty row 7</li>\n                    <li>Pretty row 8</li>\n                    <li>Pretty row 9</li>\n                    <li>Pretty row 10</li>\n                    <li>Pretty row 11</li>\n                    <li>Pretty row 12</li>\n                    <li>Pretty row 13</li>\n                    <li>Pretty row 14</li>\n                    <li>Pretty row 15</li>\n                    <li>Pretty row 16</li>\n                    <li>Pretty row 17</li>\n                    <li>Pretty row 18</li>\n                    <li>Pretty row 19</li>\n                    <li>Pretty row 20</li>\n                    <li>Pretty row 21</li>\n                    <li>Pretty row 22</li>\n                    <li>Pretty row 23</li>\n                    <li>Pretty row 24</li>\n                    <li>Pretty row 25</li>\n                    <li>Pretty row 26</li>\n                    <li>Pretty row 27</li>\n                    <li>Pretty row 28</li>\n                    <li>Pretty row 29</li>\n                    <li>Pretty row 30</li>\n                    <li>Pretty row 31</li>\n                    <li>Pretty row 32</li>\n                    <li>Pretty row 33</li>\n                    <li>Pretty row 34</li>\n                    <li>Pretty row 35</li>\n                    <li>Pretty row 36</li>\n                    <li>Pretty row 37</li>\n                    <li>Pretty row 38</li>\n                    <li>Pretty row 39</li>\n                    <li>Pretty row 40</li>\n                    <li>Pretty row 41</li>\n                    <li>Pretty row 42</li>\n                    <li>Pretty row 43</li>\n                    <li>Pretty row 44</li>\n                    <li>Pretty row 45</li>\n                    <li>Pretty row 46</li>\n                    <li>Pretty row 47</li>\n                    <li>Pretty row 48</li>\n                    <li>Pretty row 49</li>\n                    <li>Pretty row 50</li>\n                </ul>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n```\n\n\n\n\n\n### 某元素默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullRefreshElem</Hometitle>\n        <div class=\"wrapper-example wrapper-example-refresh\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n                <ul>\n                    <li>Pretty row 1</li>\n                    <li>Pretty row 2</li>\n                    <li>Pretty row 3</li>\n                    <li>Pretty row 4</li>\n                    <li>Pretty row 5</li>\n                    <li>Pretty row 6</li>\n                    <li>Pretty row 7</li>\n                    <li>Pretty row 8</li>\n                    <li>Pretty row 9</li>\n                    <li>Pretty row 10</li>\n                    <li>Pretty row 11</li>\n                    <li>Pretty row 12</li>\n                    <li>Pretty row 13</li>\n                    <li>Pretty row 14</li>\n                    <li>Pretty row 15</li>\n                    <li>Pretty row 16</li>\n                    <li>Pretty row 17</li>\n                    <li>Pretty row 18</li>\n                    <li>Pretty row 19</li>\n                    <li>Pretty row 20</li>\n                    <li>Pretty row 21</li>\n                    <li>Pretty row 22</li>\n                    <li>Pretty row 23</li>\n                    <li>Pretty row 24</li>\n                    <li>Pretty row 25</li>\n                    <li>Pretty row 26</li>\n                    <li>Pretty row 27</li>\n                    <li>Pretty row 28</li>\n                    <li>Pretty row 29</li>\n                    <li>Pretty row 30</li>\n                    <li>Pretty row 31</li>\n                    <li>Pretty row 32</li>\n                    <li>Pretty row 33</li>\n                    <li>Pretty row 34</li>\n                    <li>Pretty row 35</li>\n                    <li>Pretty row 36</li>\n                    <li>Pretty row 37</li>\n                    <li>Pretty row 38</li>\n                    <li>Pretty row 39</li>\n                    <li>Pretty row 40</li>\n                    <li>Pretty row 41</li>\n                    <li>Pretty row 42</li>\n                    <li>Pretty row 43</li>\n                    <li>Pretty row 44</li>\n                    <li>Pretty row 45</li>\n                    <li>Pretty row 46</li>\n                    <li>Pretty row 47</li>\n                    <li>Pretty row 48</li>\n                    <li>Pretty row 49</li>\n                    <li>Pretty row 50</li>\n                </ul>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-refresh .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```\n\n\n\n### scroll 滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullRefreshScroll</Hometitle>\n        <div class=\"wrapper-example wrapper-example-refresh-scroll\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Scroll :pull-refresh=\"true\" @on-refresh=\"pullRefresh\" :refresh-status.sync=\"status\">\n                    <div slot=\"down\">我是down按钮</div>\n                    <div slot=\"up\">我是up按钮</div>\n                    <div slot=\"load\">我是loadding</div>\n                    <ul>\n                        <li>Pretty row 1</li>\n                        <li>Pretty row 2</li>\n                        <li>Pretty row 3</li>\n                        <li>Pretty row 4</li>\n                        <li>Pretty row 5</li>\n                        <li>Pretty row 6</li>\n                        <li>Pretty row 7</li>\n                        <li>Pretty row 8</li>\n                        <li>Pretty row 9</li>\n                        <li>Pretty row 10</li>\n                        <li>Pretty row 11</li>\n                        <li>Pretty row 12</li>\n                        <li>Pretty row 13</li>\n                        <li>Pretty row 14</li>\n                        <li>Pretty row 15</li>\n                        <li>Pretty row 16</li>\n                        <li>Pretty row 17</li>\n                        <li>Pretty row 18</li>\n                        <li>Pretty row 19</li>\n                        <li>Pretty row 20</li>\n                        <li>Pretty row 21</li>\n                        <li>Pretty row 22</li>\n                        <li>Pretty row 23</li>\n                        <li>Pretty row 24</li>\n                        <li>Pretty row 25</li>\n                        <li>Pretty row 26</li>\n                        <li>Pretty row 27</li>\n                        <li>Pretty row 28</li>\n                        <li>Pretty row 29</li>\n                        <li>Pretty row 30</li>\n                        <li>Pretty row 31</li>\n                        <li>Pretty row 32</li>\n                        <li>Pretty row 33</li>\n                        <li>Pretty row 34</li>\n                        <li>Pretty row 35</li>\n                        <li>Pretty row 36</li>\n                        <li>Pretty row 37</li>\n                        <li>Pretty row 38</li>\n                        <li>Pretty row 39</li>\n                        <li>Pretty row 40</li>\n                        <li>Pretty row 41</li>\n                        <li>Pretty row 42</li>\n                        <li>Pretty row 43</li>\n                        <li>Pretty row 44</li>\n                        <li>Pretty row 45</li>\n                        <li>Pretty row 46</li>\n                        <li>Pretty row 47</li>\n                        <li>Pretty row 48</li>\n                        <li>Pretty row 49</li>\n                        <li>Pretty row 50</li>\n                    </ul>\n                </Scroll>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullrefresh,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```","source":"_posts/pullrefresh.md","raw":"---\ntitle: Pullrefresh 下拉刷新\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/pullRefresh?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Pullrefresh 下拉刷新\n\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nPullrefresh 下拉刷新，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。\n\n\n# 1）window默认滚动条 使用方法\n需要将组件放到最外层里面的div就好,status既刷新状态，完成后，需要值为0，例如：\n\n\n``` html\n<template>\n   <div>\n       <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n    <div>内容文章</div>\n   </div>\n</template>\n<script>\nimport {\n    Pullrefresh\n} from 'mvui';\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n\n# 2）某元素的默认滚动条 使用方法\n需要将组件放到设置为滚动条元素的内部,.scroll-elem设置为overflow为auto或者scroll, status既刷新状态，完成后，需要值为0，例如：\n\n``` html\n<template>\n   <div class=\"scroll-elem\">\n       <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n        <div>内容文章</div>\n   </div>\n</template>\n<script>\nimport {\n    Pullrefresh\n} from 'mvui';\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n# 3）scroll滚动条 使用方法\n需要设置scroll滚动条的三个属性，:pull-refresh=\"true\" @on-refresh=\"pullRefresh\" :refresh-status.sync=\"status\"，\n同时可以通过slot更改状态\n\n\n``` html\n<template>\n   <div class=\"wrapper-area-content\" id=\"parent\">\n        <Scroll :size.sync=\"size\" :is-refresh.sync=\"isRefresh\">\n            <div slot=\"down\">我是down按钮</div>\n            <div slot=\"up\">我是up按钮</div>\n            <div slot=\"load\">我是loadding</div>\n            <ul>\n                <li>文章内容</li>\n            </ul>\n        </Scroll>\n    </div>\n</template>\n<script>\nimport {\n    Pullrefresh\n} from 'mvui';\nexport default {\n    components: {\n        Scroll,\n        Pullrefresh,\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n## API\n\nPullrefresh Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    disabled   | 选填，是否禁用               |    Boolean          |      false  |  true , false            |\n| prevent-default| 选填，是否阻止默认行为        |    Boolean          |       false |     true , false        |\n|  scroll       | 选填，滚动条类型             |    String          |      window   |    window,scroll,other |\n|direction      | 选填，滚动防线             |   String           |      y          |    x , y                |\n|status         | 选填，状态             |    String       |   ready      |ready 准备,move下拉中,loading下拉完成|\n\n\n\n## 右侧示例代码\n\n### window 默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n        <Hometitle>PullRefreshWindow</Hometitle>\n        <div class=\"wrapper-example wrapper-example-refresh-window\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <ul>\n                    <li>Pretty row 1</li>\n                    <li>Pretty row 2</li>\n                    <li>Pretty row 3</li>\n                    <li>Pretty row 4</li>\n                    <li>Pretty row 5</li>\n                    <li>Pretty row 6</li>\n                    <li>Pretty row 7</li>\n                    <li>Pretty row 8</li>\n                    <li>Pretty row 9</li>\n                    <li>Pretty row 10</li>\n                    <li>Pretty row 11</li>\n                    <li>Pretty row 12</li>\n                    <li>Pretty row 13</li>\n                    <li>Pretty row 14</li>\n                    <li>Pretty row 15</li>\n                    <li>Pretty row 16</li>\n                    <li>Pretty row 17</li>\n                    <li>Pretty row 18</li>\n                    <li>Pretty row 19</li>\n                    <li>Pretty row 20</li>\n                    <li>Pretty row 21</li>\n                    <li>Pretty row 22</li>\n                    <li>Pretty row 23</li>\n                    <li>Pretty row 24</li>\n                    <li>Pretty row 25</li>\n                    <li>Pretty row 26</li>\n                    <li>Pretty row 27</li>\n                    <li>Pretty row 28</li>\n                    <li>Pretty row 29</li>\n                    <li>Pretty row 30</li>\n                    <li>Pretty row 31</li>\n                    <li>Pretty row 32</li>\n                    <li>Pretty row 33</li>\n                    <li>Pretty row 34</li>\n                    <li>Pretty row 35</li>\n                    <li>Pretty row 36</li>\n                    <li>Pretty row 37</li>\n                    <li>Pretty row 38</li>\n                    <li>Pretty row 39</li>\n                    <li>Pretty row 40</li>\n                    <li>Pretty row 41</li>\n                    <li>Pretty row 42</li>\n                    <li>Pretty row 43</li>\n                    <li>Pretty row 44</li>\n                    <li>Pretty row 45</li>\n                    <li>Pretty row 46</li>\n                    <li>Pretty row 47</li>\n                    <li>Pretty row 48</li>\n                    <li>Pretty row 49</li>\n                    <li>Pretty row 50</li>\n                </ul>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n```\n\n\n\n\n\n### 某元素默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullRefreshElem</Hometitle>\n        <div class=\"wrapper-example wrapper-example-refresh\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Pullrefresh :status.sync=\"status\" @on-refresh=\"refreshFunc\"></Pullrefresh>\n                <ul>\n                    <li>Pretty row 1</li>\n                    <li>Pretty row 2</li>\n                    <li>Pretty row 3</li>\n                    <li>Pretty row 4</li>\n                    <li>Pretty row 5</li>\n                    <li>Pretty row 6</li>\n                    <li>Pretty row 7</li>\n                    <li>Pretty row 8</li>\n                    <li>Pretty row 9</li>\n                    <li>Pretty row 10</li>\n                    <li>Pretty row 11</li>\n                    <li>Pretty row 12</li>\n                    <li>Pretty row 13</li>\n                    <li>Pretty row 14</li>\n                    <li>Pretty row 15</li>\n                    <li>Pretty row 16</li>\n                    <li>Pretty row 17</li>\n                    <li>Pretty row 18</li>\n                    <li>Pretty row 19</li>\n                    <li>Pretty row 20</li>\n                    <li>Pretty row 21</li>\n                    <li>Pretty row 22</li>\n                    <li>Pretty row 23</li>\n                    <li>Pretty row 24</li>\n                    <li>Pretty row 25</li>\n                    <li>Pretty row 26</li>\n                    <li>Pretty row 27</li>\n                    <li>Pretty row 28</li>\n                    <li>Pretty row 29</li>\n                    <li>Pretty row 30</li>\n                    <li>Pretty row 31</li>\n                    <li>Pretty row 32</li>\n                    <li>Pretty row 33</li>\n                    <li>Pretty row 34</li>\n                    <li>Pretty row 35</li>\n                    <li>Pretty row 36</li>\n                    <li>Pretty row 37</li>\n                    <li>Pretty row 38</li>\n                    <li>Pretty row 39</li>\n                    <li>Pretty row 40</li>\n                    <li>Pretty row 41</li>\n                    <li>Pretty row 42</li>\n                    <li>Pretty row 43</li>\n                    <li>Pretty row 44</li>\n                    <li>Pretty row 45</li>\n                    <li>Pretty row 46</li>\n                    <li>Pretty row 47</li>\n                    <li>Pretty row 48</li>\n                    <li>Pretty row 49</li>\n                    <li>Pretty row 50</li>\n                </ul>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-refresh .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```\n\n\n\n### scroll 滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullRefreshScroll</Hometitle>\n        <div class=\"wrapper-example wrapper-example-refresh-scroll\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Scroll :pull-refresh=\"true\" @on-refresh=\"pullRefresh\" :refresh-status.sync=\"status\">\n                    <div slot=\"down\">我是down按钮</div>\n                    <div slot=\"up\">我是up按钮</div>\n                    <div slot=\"load\">我是loadding</div>\n                    <ul>\n                        <li>Pretty row 1</li>\n                        <li>Pretty row 2</li>\n                        <li>Pretty row 3</li>\n                        <li>Pretty row 4</li>\n                        <li>Pretty row 5</li>\n                        <li>Pretty row 6</li>\n                        <li>Pretty row 7</li>\n                        <li>Pretty row 8</li>\n                        <li>Pretty row 9</li>\n                        <li>Pretty row 10</li>\n                        <li>Pretty row 11</li>\n                        <li>Pretty row 12</li>\n                        <li>Pretty row 13</li>\n                        <li>Pretty row 14</li>\n                        <li>Pretty row 15</li>\n                        <li>Pretty row 16</li>\n                        <li>Pretty row 17</li>\n                        <li>Pretty row 18</li>\n                        <li>Pretty row 19</li>\n                        <li>Pretty row 20</li>\n                        <li>Pretty row 21</li>\n                        <li>Pretty row 22</li>\n                        <li>Pretty row 23</li>\n                        <li>Pretty row 24</li>\n                        <li>Pretty row 25</li>\n                        <li>Pretty row 26</li>\n                        <li>Pretty row 27</li>\n                        <li>Pretty row 28</li>\n                        <li>Pretty row 29</li>\n                        <li>Pretty row 30</li>\n                        <li>Pretty row 31</li>\n                        <li>Pretty row 32</li>\n                        <li>Pretty row 33</li>\n                        <li>Pretty row 34</li>\n                        <li>Pretty row 35</li>\n                        <li>Pretty row 36</li>\n                        <li>Pretty row 37</li>\n                        <li>Pretty row 38</li>\n                        <li>Pretty row 39</li>\n                        <li>Pretty row 40</li>\n                        <li>Pretty row 41</li>\n                        <li>Pretty row 42</li>\n                        <li>Pretty row 43</li>\n                        <li>Pretty row 44</li>\n                        <li>Pretty row 45</li>\n                        <li>Pretty row 46</li>\n                        <li>Pretty row 47</li>\n                        <li>Pretty row 48</li>\n                        <li>Pretty row 49</li>\n                        <li>Pretty row 50</li>\n                    </ul>\n                </Scroll>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullrefresh,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready'\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```","slug":"pullrefresh","published":1,"updated":"2016-11-23T06:24:19.000Z","_id":"ciut8cahk000sv7s6es6pui8y","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Pullrefresh-下拉刷新\"><a href=\"#Pullrefresh-下拉刷新\" class=\"headerlink\" title=\"Pullrefresh 下拉刷新\"></a>Pullrefresh 下拉刷新</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Pullrefresh 下拉刷新，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。</p>\n<h1 id=\"1）window默认滚动条-使用方法\"><a href=\"#1）window默认滚动条-使用方法\" class=\"headerlink\" title=\"1）window默认滚动条 使用方法\"></a>1）window默认滚动条 使用方法</h1><p>需要将组件放到最外层里面的div就好,status既刷新状态，完成后，需要值为0，例如：</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div&gt;\n       &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n    &lt;div&gt;内容文章&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Pullrefresh\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"2）某元素的默认滚动条-使用方法\"><a href=\"#2）某元素的默认滚动条-使用方法\" class=\"headerlink\" title=\"2）某元素的默认滚动条 使用方法\"></a>2）某元素的默认滚动条 使用方法</h1><p>需要将组件放到设置为滚动条元素的内部,.scroll-elem设置为overflow为auto或者scroll, status既刷新状态，完成后，需要值为0，例如：</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;scroll-elem&quot;&gt;\n       &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n        &lt;div&gt;内容文章&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Pullrefresh\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"3）scroll滚动条-使用方法\"><a href=\"#3）scroll滚动条-使用方法\" class=\"headerlink\" title=\"3）scroll滚动条 使用方法\"></a>3）scroll滚动条 使用方法</h1><p>需要设置scroll滚动条的三个属性，:pull-refresh=”true” @on-refresh=”pullRefresh” :refresh-status.sync=”status”，<br>同时可以通过slot更改状态</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n        &lt;Scroll :size.sync=&quot;size&quot; :is-refresh.sync=&quot;isRefresh&quot;&gt;\n            &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n            &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n            &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;文章内容&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/Scroll&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Pullrefresh\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Scroll,\n        Pullrefresh,\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Pullrefresh Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true , false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prevent-default</td>\n<td style=\"text-align:left\">选填，是否阻止默认行为</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true , false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">scroll</td>\n<td style=\"text-align:left\">选填，滚动条类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">window</td>\n<td style=\"text-align:left\">window,scroll,other</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">direction</td>\n<td style=\"text-align:left\">选填，滚动防线</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">y</td>\n<td style=\"text-align:left\">x , y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">status</td>\n<td style=\"text-align:left\">选填，状态</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ready</td>\n<td style=\"text-align:left\">ready 准备,move下拉中,loading下拉完成</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"window-默认滚动条\"><a href=\"#window-默认滚动条\" class=\"headerlink\" title=\"window 默认滚动条\"></a>window 默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n        &lt;Hometitle&gt;PullRefreshWindow&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-refresh-window&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;ul&gt;\n                    &lt;li&gt;Pretty row 1&lt;/li&gt;\n                    &lt;li&gt;Pretty row 2&lt;/li&gt;\n                    &lt;li&gt;Pretty row 3&lt;/li&gt;\n                    &lt;li&gt;Pretty row 4&lt;/li&gt;\n                    &lt;li&gt;Pretty row 5&lt;/li&gt;\n                    &lt;li&gt;Pretty row 6&lt;/li&gt;\n                    &lt;li&gt;Pretty row 7&lt;/li&gt;\n                    &lt;li&gt;Pretty row 8&lt;/li&gt;\n                    &lt;li&gt;Pretty row 9&lt;/li&gt;\n                    &lt;li&gt;Pretty row 10&lt;/li&gt;\n                    &lt;li&gt;Pretty row 11&lt;/li&gt;\n                    &lt;li&gt;Pretty row 12&lt;/li&gt;\n                    &lt;li&gt;Pretty row 13&lt;/li&gt;\n                    &lt;li&gt;Pretty row 14&lt;/li&gt;\n                    &lt;li&gt;Pretty row 15&lt;/li&gt;\n                    &lt;li&gt;Pretty row 16&lt;/li&gt;\n                    &lt;li&gt;Pretty row 17&lt;/li&gt;\n                    &lt;li&gt;Pretty row 18&lt;/li&gt;\n                    &lt;li&gt;Pretty row 19&lt;/li&gt;\n                    &lt;li&gt;Pretty row 20&lt;/li&gt;\n                    &lt;li&gt;Pretty row 21&lt;/li&gt;\n                    &lt;li&gt;Pretty row 22&lt;/li&gt;\n                    &lt;li&gt;Pretty row 23&lt;/li&gt;\n                    &lt;li&gt;Pretty row 24&lt;/li&gt;\n                    &lt;li&gt;Pretty row 25&lt;/li&gt;\n                    &lt;li&gt;Pretty row 26&lt;/li&gt;\n                    &lt;li&gt;Pretty row 27&lt;/li&gt;\n                    &lt;li&gt;Pretty row 28&lt;/li&gt;\n                    &lt;li&gt;Pretty row 29&lt;/li&gt;\n                    &lt;li&gt;Pretty row 30&lt;/li&gt;\n                    &lt;li&gt;Pretty row 31&lt;/li&gt;\n                    &lt;li&gt;Pretty row 32&lt;/li&gt;\n                    &lt;li&gt;Pretty row 33&lt;/li&gt;\n                    &lt;li&gt;Pretty row 34&lt;/li&gt;\n                    &lt;li&gt;Pretty row 35&lt;/li&gt;\n                    &lt;li&gt;Pretty row 36&lt;/li&gt;\n                    &lt;li&gt;Pretty row 37&lt;/li&gt;\n                    &lt;li&gt;Pretty row 38&lt;/li&gt;\n                    &lt;li&gt;Pretty row 39&lt;/li&gt;\n                    &lt;li&gt;Pretty row 40&lt;/li&gt;\n                    &lt;li&gt;Pretty row 41&lt;/li&gt;\n                    &lt;li&gt;Pretty row 42&lt;/li&gt;\n                    &lt;li&gt;Pretty row 43&lt;/li&gt;\n                    &lt;li&gt;Pretty row 44&lt;/li&gt;\n                    &lt;li&gt;Pretty row 45&lt;/li&gt;\n                    &lt;li&gt;Pretty row 46&lt;/li&gt;\n                    &lt;li&gt;Pretty row 47&lt;/li&gt;\n                    &lt;li&gt;Pretty row 48&lt;/li&gt;\n                    &lt;li&gt;Pretty row 49&lt;/li&gt;\n                    &lt;li&gt;Pretty row 50&lt;/li&gt;\n                &lt;/ul&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"某元素默认滚动条\"><a href=\"#某元素默认滚动条\" class=\"headerlink\" title=\"某元素默认滚动条\"></a>某元素默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullRefreshElem&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-refresh&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n                &lt;ul&gt;\n                    &lt;li&gt;Pretty row 1&lt;/li&gt;\n                    &lt;li&gt;Pretty row 2&lt;/li&gt;\n                    &lt;li&gt;Pretty row 3&lt;/li&gt;\n                    &lt;li&gt;Pretty row 4&lt;/li&gt;\n                    &lt;li&gt;Pretty row 5&lt;/li&gt;\n                    &lt;li&gt;Pretty row 6&lt;/li&gt;\n                    &lt;li&gt;Pretty row 7&lt;/li&gt;\n                    &lt;li&gt;Pretty row 8&lt;/li&gt;\n                    &lt;li&gt;Pretty row 9&lt;/li&gt;\n                    &lt;li&gt;Pretty row 10&lt;/li&gt;\n                    &lt;li&gt;Pretty row 11&lt;/li&gt;\n                    &lt;li&gt;Pretty row 12&lt;/li&gt;\n                    &lt;li&gt;Pretty row 13&lt;/li&gt;\n                    &lt;li&gt;Pretty row 14&lt;/li&gt;\n                    &lt;li&gt;Pretty row 15&lt;/li&gt;\n                    &lt;li&gt;Pretty row 16&lt;/li&gt;\n                    &lt;li&gt;Pretty row 17&lt;/li&gt;\n                    &lt;li&gt;Pretty row 18&lt;/li&gt;\n                    &lt;li&gt;Pretty row 19&lt;/li&gt;\n                    &lt;li&gt;Pretty row 20&lt;/li&gt;\n                    &lt;li&gt;Pretty row 21&lt;/li&gt;\n                    &lt;li&gt;Pretty row 22&lt;/li&gt;\n                    &lt;li&gt;Pretty row 23&lt;/li&gt;\n                    &lt;li&gt;Pretty row 24&lt;/li&gt;\n                    &lt;li&gt;Pretty row 25&lt;/li&gt;\n                    &lt;li&gt;Pretty row 26&lt;/li&gt;\n                    &lt;li&gt;Pretty row 27&lt;/li&gt;\n                    &lt;li&gt;Pretty row 28&lt;/li&gt;\n                    &lt;li&gt;Pretty row 29&lt;/li&gt;\n                    &lt;li&gt;Pretty row 30&lt;/li&gt;\n                    &lt;li&gt;Pretty row 31&lt;/li&gt;\n                    &lt;li&gt;Pretty row 32&lt;/li&gt;\n                    &lt;li&gt;Pretty row 33&lt;/li&gt;\n                    &lt;li&gt;Pretty row 34&lt;/li&gt;\n                    &lt;li&gt;Pretty row 35&lt;/li&gt;\n                    &lt;li&gt;Pretty row 36&lt;/li&gt;\n                    &lt;li&gt;Pretty row 37&lt;/li&gt;\n                    &lt;li&gt;Pretty row 38&lt;/li&gt;\n                    &lt;li&gt;Pretty row 39&lt;/li&gt;\n                    &lt;li&gt;Pretty row 40&lt;/li&gt;\n                    &lt;li&gt;Pretty row 41&lt;/li&gt;\n                    &lt;li&gt;Pretty row 42&lt;/li&gt;\n                    &lt;li&gt;Pretty row 43&lt;/li&gt;\n                    &lt;li&gt;Pretty row 44&lt;/li&gt;\n                    &lt;li&gt;Pretty row 45&lt;/li&gt;\n                    &lt;li&gt;Pretty row 46&lt;/li&gt;\n                    &lt;li&gt;Pretty row 47&lt;/li&gt;\n                    &lt;li&gt;Pretty row 48&lt;/li&gt;\n                    &lt;li&gt;Pretty row 49&lt;/li&gt;\n                    &lt;li&gt;Pretty row 50&lt;/li&gt;\n                &lt;/ul&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-refresh .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"scroll-滚动条\"><a href=\"#scroll-滚动条\" class=\"headerlink\" title=\"scroll 滚动条\"></a>scroll 滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullRefreshScroll&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-refresh-scroll&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Scroll :pull-refresh=&quot;true&quot; @on-refresh=&quot;pullRefresh&quot; :refresh-status.sync=&quot;status&quot;&gt;\n                    &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n                    &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n                    &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt;Pretty row 1&lt;/li&gt;\n                        &lt;li&gt;Pretty row 2&lt;/li&gt;\n                        &lt;li&gt;Pretty row 3&lt;/li&gt;\n                        &lt;li&gt;Pretty row 4&lt;/li&gt;\n                        &lt;li&gt;Pretty row 5&lt;/li&gt;\n                        &lt;li&gt;Pretty row 6&lt;/li&gt;\n                        &lt;li&gt;Pretty row 7&lt;/li&gt;\n                        &lt;li&gt;Pretty row 8&lt;/li&gt;\n                        &lt;li&gt;Pretty row 9&lt;/li&gt;\n                        &lt;li&gt;Pretty row 10&lt;/li&gt;\n                        &lt;li&gt;Pretty row 11&lt;/li&gt;\n                        &lt;li&gt;Pretty row 12&lt;/li&gt;\n                        &lt;li&gt;Pretty row 13&lt;/li&gt;\n                        &lt;li&gt;Pretty row 14&lt;/li&gt;\n                        &lt;li&gt;Pretty row 15&lt;/li&gt;\n                        &lt;li&gt;Pretty row 16&lt;/li&gt;\n                        &lt;li&gt;Pretty row 17&lt;/li&gt;\n                        &lt;li&gt;Pretty row 18&lt;/li&gt;\n                        &lt;li&gt;Pretty row 19&lt;/li&gt;\n                        &lt;li&gt;Pretty row 20&lt;/li&gt;\n                        &lt;li&gt;Pretty row 21&lt;/li&gt;\n                        &lt;li&gt;Pretty row 22&lt;/li&gt;\n                        &lt;li&gt;Pretty row 23&lt;/li&gt;\n                        &lt;li&gt;Pretty row 24&lt;/li&gt;\n                        &lt;li&gt;Pretty row 25&lt;/li&gt;\n                        &lt;li&gt;Pretty row 26&lt;/li&gt;\n                        &lt;li&gt;Pretty row 27&lt;/li&gt;\n                        &lt;li&gt;Pretty row 28&lt;/li&gt;\n                        &lt;li&gt;Pretty row 29&lt;/li&gt;\n                        &lt;li&gt;Pretty row 30&lt;/li&gt;\n                        &lt;li&gt;Pretty row 31&lt;/li&gt;\n                        &lt;li&gt;Pretty row 32&lt;/li&gt;\n                        &lt;li&gt;Pretty row 33&lt;/li&gt;\n                        &lt;li&gt;Pretty row 34&lt;/li&gt;\n                        &lt;li&gt;Pretty row 35&lt;/li&gt;\n                        &lt;li&gt;Pretty row 36&lt;/li&gt;\n                        &lt;li&gt;Pretty row 37&lt;/li&gt;\n                        &lt;li&gt;Pretty row 38&lt;/li&gt;\n                        &lt;li&gt;Pretty row 39&lt;/li&gt;\n                        &lt;li&gt;Pretty row 40&lt;/li&gt;\n                        &lt;li&gt;Pretty row 41&lt;/li&gt;\n                        &lt;li&gt;Pretty row 42&lt;/li&gt;\n                        &lt;li&gt;Pretty row 43&lt;/li&gt;\n                        &lt;li&gt;Pretty row 44&lt;/li&gt;\n                        &lt;li&gt;Pretty row 45&lt;/li&gt;\n                        &lt;li&gt;Pretty row 46&lt;/li&gt;\n                        &lt;li&gt;Pretty row 47&lt;/li&gt;\n                        &lt;li&gt;Pretty row 48&lt;/li&gt;\n                        &lt;li&gt;Pretty row 49&lt;/li&gt;\n                        &lt;li&gt;Pretty row 50&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/Scroll&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullrefresh,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Pullrefresh-下拉刷新\"><a href=\"#Pullrefresh-下拉刷新\" class=\"headerlink\" title=\"Pullrefresh 下拉刷新\"></a>Pullrefresh 下拉刷新</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Pullrefresh 下拉刷新，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。</p>\n<h1 id=\"1）window默认滚动条-使用方法\"><a href=\"#1）window默认滚动条-使用方法\" class=\"headerlink\" title=\"1）window默认滚动条 使用方法\"></a>1）window默认滚动条 使用方法</h1><p>需要将组件放到最外层里面的div就好,status既刷新状态，完成后，需要值为0，例如：</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div&gt;\n       &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n    &lt;div&gt;内容文章&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Pullrefresh\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"2）某元素的默认滚动条-使用方法\"><a href=\"#2）某元素的默认滚动条-使用方法\" class=\"headerlink\" title=\"2）某元素的默认滚动条 使用方法\"></a>2）某元素的默认滚动条 使用方法</h1><p>需要将组件放到设置为滚动条元素的内部,.scroll-elem设置为overflow为auto或者scroll, status既刷新状态，完成后，需要值为0，例如：</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;scroll-elem&quot;&gt;\n       &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n        &lt;div&gt;内容文章&lt;/div&gt;\n   &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Pullrefresh\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Pullrefresh\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"3）scroll滚动条-使用方法\"><a href=\"#3）scroll滚动条-使用方法\" class=\"headerlink\" title=\"3）scroll滚动条 使用方法\"></a>3）scroll滚动条 使用方法</h1><p>需要设置scroll滚动条的三个属性，:pull-refresh=”true” @on-refresh=”pullRefresh” :refresh-status.sync=”status”，<br>同时可以通过slot更改状态</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n        &lt;Scroll :size.sync=&quot;size&quot; :is-refresh.sync=&quot;isRefresh&quot;&gt;\n            &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n            &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n            &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n            &lt;ul&gt;\n                &lt;li&gt;文章内容&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/Scroll&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport {\n    Pullrefresh\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Scroll,\n        Pullrefresh,\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Pullrefresh Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true , false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prevent-default</td>\n<td style=\"text-align:left\">选填，是否阻止默认行为</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true , false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">scroll</td>\n<td style=\"text-align:left\">选填，滚动条类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">window</td>\n<td style=\"text-align:left\">window,scroll,other</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">direction</td>\n<td style=\"text-align:left\">选填，滚动防线</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">y</td>\n<td style=\"text-align:left\">x , y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">status</td>\n<td style=\"text-align:left\">选填，状态</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ready</td>\n<td style=\"text-align:left\">ready 准备,move下拉中,loading下拉完成</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"window-默认滚动条\"><a href=\"#window-默认滚动条\" class=\"headerlink\" title=\"window 默认滚动条\"></a>window 默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n        &lt;Hometitle&gt;PullRefreshWindow&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-refresh-window&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;ul&gt;\n                    &lt;li&gt;Pretty row 1&lt;/li&gt;\n                    &lt;li&gt;Pretty row 2&lt;/li&gt;\n                    &lt;li&gt;Pretty row 3&lt;/li&gt;\n                    &lt;li&gt;Pretty row 4&lt;/li&gt;\n                    &lt;li&gt;Pretty row 5&lt;/li&gt;\n                    &lt;li&gt;Pretty row 6&lt;/li&gt;\n                    &lt;li&gt;Pretty row 7&lt;/li&gt;\n                    &lt;li&gt;Pretty row 8&lt;/li&gt;\n                    &lt;li&gt;Pretty row 9&lt;/li&gt;\n                    &lt;li&gt;Pretty row 10&lt;/li&gt;\n                    &lt;li&gt;Pretty row 11&lt;/li&gt;\n                    &lt;li&gt;Pretty row 12&lt;/li&gt;\n                    &lt;li&gt;Pretty row 13&lt;/li&gt;\n                    &lt;li&gt;Pretty row 14&lt;/li&gt;\n                    &lt;li&gt;Pretty row 15&lt;/li&gt;\n                    &lt;li&gt;Pretty row 16&lt;/li&gt;\n                    &lt;li&gt;Pretty row 17&lt;/li&gt;\n                    &lt;li&gt;Pretty row 18&lt;/li&gt;\n                    &lt;li&gt;Pretty row 19&lt;/li&gt;\n                    &lt;li&gt;Pretty row 20&lt;/li&gt;\n                    &lt;li&gt;Pretty row 21&lt;/li&gt;\n                    &lt;li&gt;Pretty row 22&lt;/li&gt;\n                    &lt;li&gt;Pretty row 23&lt;/li&gt;\n                    &lt;li&gt;Pretty row 24&lt;/li&gt;\n                    &lt;li&gt;Pretty row 25&lt;/li&gt;\n                    &lt;li&gt;Pretty row 26&lt;/li&gt;\n                    &lt;li&gt;Pretty row 27&lt;/li&gt;\n                    &lt;li&gt;Pretty row 28&lt;/li&gt;\n                    &lt;li&gt;Pretty row 29&lt;/li&gt;\n                    &lt;li&gt;Pretty row 30&lt;/li&gt;\n                    &lt;li&gt;Pretty row 31&lt;/li&gt;\n                    &lt;li&gt;Pretty row 32&lt;/li&gt;\n                    &lt;li&gt;Pretty row 33&lt;/li&gt;\n                    &lt;li&gt;Pretty row 34&lt;/li&gt;\n                    &lt;li&gt;Pretty row 35&lt;/li&gt;\n                    &lt;li&gt;Pretty row 36&lt;/li&gt;\n                    &lt;li&gt;Pretty row 37&lt;/li&gt;\n                    &lt;li&gt;Pretty row 38&lt;/li&gt;\n                    &lt;li&gt;Pretty row 39&lt;/li&gt;\n                    &lt;li&gt;Pretty row 40&lt;/li&gt;\n                    &lt;li&gt;Pretty row 41&lt;/li&gt;\n                    &lt;li&gt;Pretty row 42&lt;/li&gt;\n                    &lt;li&gt;Pretty row 43&lt;/li&gt;\n                    &lt;li&gt;Pretty row 44&lt;/li&gt;\n                    &lt;li&gt;Pretty row 45&lt;/li&gt;\n                    &lt;li&gt;Pretty row 46&lt;/li&gt;\n                    &lt;li&gt;Pretty row 47&lt;/li&gt;\n                    &lt;li&gt;Pretty row 48&lt;/li&gt;\n                    &lt;li&gt;Pretty row 49&lt;/li&gt;\n                    &lt;li&gt;Pretty row 50&lt;/li&gt;\n                &lt;/ul&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"某元素默认滚动条\"><a href=\"#某元素默认滚动条\" class=\"headerlink\" title=\"某元素默认滚动条\"></a>某元素默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullRefreshElem&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-refresh&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Pullrefresh :status.sync=&quot;status&quot; @on-refresh=&quot;refreshFunc&quot;&gt;&lt;/Pullrefresh&gt;\n                &lt;ul&gt;\n                    &lt;li&gt;Pretty row 1&lt;/li&gt;\n                    &lt;li&gt;Pretty row 2&lt;/li&gt;\n                    &lt;li&gt;Pretty row 3&lt;/li&gt;\n                    &lt;li&gt;Pretty row 4&lt;/li&gt;\n                    &lt;li&gt;Pretty row 5&lt;/li&gt;\n                    &lt;li&gt;Pretty row 6&lt;/li&gt;\n                    &lt;li&gt;Pretty row 7&lt;/li&gt;\n                    &lt;li&gt;Pretty row 8&lt;/li&gt;\n                    &lt;li&gt;Pretty row 9&lt;/li&gt;\n                    &lt;li&gt;Pretty row 10&lt;/li&gt;\n                    &lt;li&gt;Pretty row 11&lt;/li&gt;\n                    &lt;li&gt;Pretty row 12&lt;/li&gt;\n                    &lt;li&gt;Pretty row 13&lt;/li&gt;\n                    &lt;li&gt;Pretty row 14&lt;/li&gt;\n                    &lt;li&gt;Pretty row 15&lt;/li&gt;\n                    &lt;li&gt;Pretty row 16&lt;/li&gt;\n                    &lt;li&gt;Pretty row 17&lt;/li&gt;\n                    &lt;li&gt;Pretty row 18&lt;/li&gt;\n                    &lt;li&gt;Pretty row 19&lt;/li&gt;\n                    &lt;li&gt;Pretty row 20&lt;/li&gt;\n                    &lt;li&gt;Pretty row 21&lt;/li&gt;\n                    &lt;li&gt;Pretty row 22&lt;/li&gt;\n                    &lt;li&gt;Pretty row 23&lt;/li&gt;\n                    &lt;li&gt;Pretty row 24&lt;/li&gt;\n                    &lt;li&gt;Pretty row 25&lt;/li&gt;\n                    &lt;li&gt;Pretty row 26&lt;/li&gt;\n                    &lt;li&gt;Pretty row 27&lt;/li&gt;\n                    &lt;li&gt;Pretty row 28&lt;/li&gt;\n                    &lt;li&gt;Pretty row 29&lt;/li&gt;\n                    &lt;li&gt;Pretty row 30&lt;/li&gt;\n                    &lt;li&gt;Pretty row 31&lt;/li&gt;\n                    &lt;li&gt;Pretty row 32&lt;/li&gt;\n                    &lt;li&gt;Pretty row 33&lt;/li&gt;\n                    &lt;li&gt;Pretty row 34&lt;/li&gt;\n                    &lt;li&gt;Pretty row 35&lt;/li&gt;\n                    &lt;li&gt;Pretty row 36&lt;/li&gt;\n                    &lt;li&gt;Pretty row 37&lt;/li&gt;\n                    &lt;li&gt;Pretty row 38&lt;/li&gt;\n                    &lt;li&gt;Pretty row 39&lt;/li&gt;\n                    &lt;li&gt;Pretty row 40&lt;/li&gt;\n                    &lt;li&gt;Pretty row 41&lt;/li&gt;\n                    &lt;li&gt;Pretty row 42&lt;/li&gt;\n                    &lt;li&gt;Pretty row 43&lt;/li&gt;\n                    &lt;li&gt;Pretty row 44&lt;/li&gt;\n                    &lt;li&gt;Pretty row 45&lt;/li&gt;\n                    &lt;li&gt;Pretty row 46&lt;/li&gt;\n                    &lt;li&gt;Pretty row 47&lt;/li&gt;\n                    &lt;li&gt;Pretty row 48&lt;/li&gt;\n                    &lt;li&gt;Pretty row 49&lt;/li&gt;\n                    &lt;li&gt;Pretty row 50&lt;/li&gt;\n                &lt;/ul&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullrefresh,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        refreshFunc (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-refresh .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"scroll-滚动条\"><a href=\"#scroll-滚动条\" class=\"headerlink\" title=\"scroll 滚动条\"></a>scroll 滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullRefreshScroll&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-refresh-scroll&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Scroll :pull-refresh=&quot;true&quot; @on-refresh=&quot;pullRefresh&quot; :refresh-status.sync=&quot;status&quot;&gt;\n                    &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n                    &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n                    &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt;Pretty row 1&lt;/li&gt;\n                        &lt;li&gt;Pretty row 2&lt;/li&gt;\n                        &lt;li&gt;Pretty row 3&lt;/li&gt;\n                        &lt;li&gt;Pretty row 4&lt;/li&gt;\n                        &lt;li&gt;Pretty row 5&lt;/li&gt;\n                        &lt;li&gt;Pretty row 6&lt;/li&gt;\n                        &lt;li&gt;Pretty row 7&lt;/li&gt;\n                        &lt;li&gt;Pretty row 8&lt;/li&gt;\n                        &lt;li&gt;Pretty row 9&lt;/li&gt;\n                        &lt;li&gt;Pretty row 10&lt;/li&gt;\n                        &lt;li&gt;Pretty row 11&lt;/li&gt;\n                        &lt;li&gt;Pretty row 12&lt;/li&gt;\n                        &lt;li&gt;Pretty row 13&lt;/li&gt;\n                        &lt;li&gt;Pretty row 14&lt;/li&gt;\n                        &lt;li&gt;Pretty row 15&lt;/li&gt;\n                        &lt;li&gt;Pretty row 16&lt;/li&gt;\n                        &lt;li&gt;Pretty row 17&lt;/li&gt;\n                        &lt;li&gt;Pretty row 18&lt;/li&gt;\n                        &lt;li&gt;Pretty row 19&lt;/li&gt;\n                        &lt;li&gt;Pretty row 20&lt;/li&gt;\n                        &lt;li&gt;Pretty row 21&lt;/li&gt;\n                        &lt;li&gt;Pretty row 22&lt;/li&gt;\n                        &lt;li&gt;Pretty row 23&lt;/li&gt;\n                        &lt;li&gt;Pretty row 24&lt;/li&gt;\n                        &lt;li&gt;Pretty row 25&lt;/li&gt;\n                        &lt;li&gt;Pretty row 26&lt;/li&gt;\n                        &lt;li&gt;Pretty row 27&lt;/li&gt;\n                        &lt;li&gt;Pretty row 28&lt;/li&gt;\n                        &lt;li&gt;Pretty row 29&lt;/li&gt;\n                        &lt;li&gt;Pretty row 30&lt;/li&gt;\n                        &lt;li&gt;Pretty row 31&lt;/li&gt;\n                        &lt;li&gt;Pretty row 32&lt;/li&gt;\n                        &lt;li&gt;Pretty row 33&lt;/li&gt;\n                        &lt;li&gt;Pretty row 34&lt;/li&gt;\n                        &lt;li&gt;Pretty row 35&lt;/li&gt;\n                        &lt;li&gt;Pretty row 36&lt;/li&gt;\n                        &lt;li&gt;Pretty row 37&lt;/li&gt;\n                        &lt;li&gt;Pretty row 38&lt;/li&gt;\n                        &lt;li&gt;Pretty row 39&lt;/li&gt;\n                        &lt;li&gt;Pretty row 40&lt;/li&gt;\n                        &lt;li&gt;Pretty row 41&lt;/li&gt;\n                        &lt;li&gt;Pretty row 42&lt;/li&gt;\n                        &lt;li&gt;Pretty row 43&lt;/li&gt;\n                        &lt;li&gt;Pretty row 44&lt;/li&gt;\n                        &lt;li&gt;Pretty row 45&lt;/li&gt;\n                        &lt;li&gt;Pretty row 46&lt;/li&gt;\n                        &lt;li&gt;Pretty row 47&lt;/li&gt;\n                        &lt;li&gt;Pretty row 48&lt;/li&gt;\n                        &lt;li&gt;Pretty row 49&lt;/li&gt;\n                        &lt;li&gt;Pretty row 50&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/Scroll&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullrefresh,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullrefresh,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;\n        }\n    },\n    methods: {\n        pullRefresh (e) {\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\nheader {\n    position: relative;\n    z-index: 100;\n}\n.wrapper-example-refresh-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-refresh-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Pullload 下拉加载","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Pullload 下拉加载\n\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nPullload 下拉加载，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。\n\n\n# 1）window默认滚动条 使用方法\n需要将组件放到最外层里面的div的底部，status默认为ready，准备就绪，end为结束\n\n\n``` html\n<template>\n   <div class=\"wrapper-example wrapper-example-load-window\">\n        <div class=\"wrapper-area-content\" id=\"parent\">\n            <ul>\n                <li v-for=\"(key, value) in data\">\n                    {{ value.message }} {{ key }}\n                </li>\n            </ul>\n            <Pullload scroll=\"window\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n# 2）某元素的默认滚动条 使用方法\n用法跟window很像，需要放到滚动元素#parent内的底部\n\n``` html\n<template>\n   <div class=\"wrapper-example wrapper-example-load-window\">\n        <div class=\"wrapper-area-content\" id=\"parent\">\n            <ul>\n                <li v-for=\"(key, value) in data\">\n                    {{ value.message }} {{ key }}\n                </li>\n            </ul>\n            <Pullload scroll=\"window\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n# 3）scroll滚动条 使用方法\n跟window类似，需要放到scroll底部\n\n``` html\n<template>\n   <div class=\"wrapper-example wrapper-example-load-scroll\">\n        <div class=\"wrapper-area-content\" id=\"parent\">\n            <Scroll :size.sync=\"size\" :is-refresh.sync=\"isRefresh\">\n                <div slot=\"down\">我是down按钮</div>\n                <div slot=\"up\">我是up按钮</div>\n                <div slot=\"load\">我是loadding</div>\n                <ul>\n                    <li v-for=\"(key, value) in data\">\n                        {{ value.message }} {{ key }}\n                    </li>\n                </ul>\n                <Pullload scroll=\"scroll\" :size.sync=\"size\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n            </Scroll>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            size: 0,\n            isRefresh: false,\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n## API\n\nPullrefresh Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|  scroll       | 选填，滚动条类型             |    String          |      window   |    window,scroll,other |\n|size           | 选填，滚动条的距离，scroll为scroll的时候起作用 | Number|      0       |    任意   |\n\n\n\n\n## 右侧示例代码\n\n### window 默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullLoadWindow</Hometitle>\n        <div class=\"wrapper-example wrapper-example-load-window\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <ul>\n                    <li v-for=\"(key, value) in data\">\n                        {{ value.message }} {{ key }}\n                    </li>\n                </ul>\n                <Pullload scroll=\"window\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\n\n.wrapper-example-load-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```\n\n\n\n\n\n### 某元素默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullLoadElem</Hometitle>\n        <div class=\"wrapper-example wrapper-example-load-elem\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                    <ul>\n                        <li v-for=\"(key, value) in data\">\n                            {{ value.message }} {{ key }}\n                        </li>\n                    </ul>\n                    <Pullload scroll=\"other\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\n.wrapper-example-load-elem {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    border-top: solid 1px #ccc;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-elem .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-elem .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n\n```\n\n\n\n### scroll 滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullLoadScroll</Hometitle>\n        <div class=\"wrapper-example wrapper-example-load-scroll\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Scroll :size.sync=\"size\" :is-refresh.sync=\"isRefresh\">\n                    <div slot=\"down\">我是down按钮</div>\n                    <div slot=\"up\">我是up按钮</div>\n                    <div slot=\"load\">我是loadding</div>\n                    <ul>\n                        <li v-for=\"(key, value) in data\">\n                            {{ value.message }} {{ key }}\n                        </li>\n                    </ul>\n                    <Pullload scroll=\"scroll\" :size.sync=\"size\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n                </Scroll>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            size: 0,\n            isRefresh: false,\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                debugger;\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```\n\n","source":"_posts/pullload.md","raw":"---\ntitle: Pullload 下拉加载\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/pullLoad?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Pullload 下拉加载\n\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nPullload 下拉加载，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。\n\n\n# 1）window默认滚动条 使用方法\n需要将组件放到最外层里面的div的底部，status默认为ready，准备就绪，end为结束\n\n\n``` html\n<template>\n   <div class=\"wrapper-example wrapper-example-load-window\">\n        <div class=\"wrapper-area-content\" id=\"parent\">\n            <ul>\n                <li v-for=\"(key, value) in data\">\n                    {{ value.message }} {{ key }}\n                </li>\n            </ul>\n            <Pullload scroll=\"window\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n# 2）某元素的默认滚动条 使用方法\n用法跟window很像，需要放到滚动元素#parent内的底部\n\n``` html\n<template>\n   <div class=\"wrapper-example wrapper-example-load-window\">\n        <div class=\"wrapper-area-content\" id=\"parent\">\n            <ul>\n                <li v-for=\"(key, value) in data\">\n                    {{ value.message }} {{ key }}\n                </li>\n            </ul>\n            <Pullload scroll=\"window\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n# 3）scroll滚动条 使用方法\n跟window类似，需要放到scroll底部\n\n``` html\n<template>\n   <div class=\"wrapper-example wrapper-example-load-scroll\">\n        <div class=\"wrapper-area-content\" id=\"parent\">\n            <Scroll :size.sync=\"size\" :is-refresh.sync=\"isRefresh\">\n                <div slot=\"down\">我是down按钮</div>\n                <div slot=\"up\">我是up按钮</div>\n                <div slot=\"load\">我是loadding</div>\n                <ul>\n                    <li v-for=\"(key, value) in data\">\n                        {{ value.message }} {{ key }}\n                    </li>\n                </ul>\n                <Pullload scroll=\"scroll\" :size.sync=\"size\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n            </Scroll>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            size: 0,\n            isRefresh: false,\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n</script>\n```\n\n\n\n## API\n\nPullrefresh Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|  scroll       | 选填，滚动条类型             |    String          |      window   |    window,scroll,other |\n|size           | 选填，滚动条的距离，scroll为scroll的时候起作用 | Number|      0       |    任意   |\n\n\n\n\n## 右侧示例代码\n\n### window 默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullLoadWindow</Hometitle>\n        <div class=\"wrapper-example wrapper-example-load-window\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <ul>\n                    <li v-for=\"(key, value) in data\">\n                        {{ value.message }} {{ key }}\n                    </li>\n                </ul>\n                <Pullload scroll=\"window\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\n\n.wrapper-example-load-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```\n\n\n\n\n\n### 某元素默认滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullLoadElem</Hometitle>\n        <div class=\"wrapper-example wrapper-example-load-elem\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                    <ul>\n                        <li v-for=\"(key, value) in data\">\n                            {{ value.message }} {{ key }}\n                        </li>\n                    </ul>\n                    <Pullload scroll=\"other\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'ready';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\n.wrapper-example-load-elem {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    border-top: solid 1px #ccc;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-elem .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-elem .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n\n```\n\n\n\n### scroll 滚动条\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>PullLoadScroll</Hometitle>\n        <div class=\"wrapper-example wrapper-example-load-scroll\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Scroll :size.sync=\"size\" :is-refresh.sync=\"isRefresh\">\n                    <div slot=\"down\">我是down按钮</div>\n                    <div slot=\"up\">我是up按钮</div>\n                    <div slot=\"load\">我是loadding</div>\n                    <ul>\n                        <li v-for=\"(key, value) in data\">\n                            {{ value.message }} {{ key }}\n                        </li>\n                    </ul>\n                    <Pullload scroll=\"scroll\" :size.sync=\"size\" :status.sync=\"status\" @on-load=\"loaded\"></Pullload>\n                </Scroll>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: 'ready',\n            size: 0,\n            isRefresh: false,\n            data: [\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'},\n                {'message': '我是消息'}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = 'end';\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                self.data.push({'message': '我是消息'});\n                debugger;\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n</script>\n<style>\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```\n\n","slug":"pullload","published":1,"updated":"2016-11-23T06:24:36.000Z","_id":"ciut8cahl000vv7s6x0lov7p9","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Pullload-下拉加载\"><a href=\"#Pullload-下拉加载\" class=\"headerlink\" title=\"Pullload 下拉加载\"></a>Pullload 下拉加载</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Pullload 下拉加载，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。</p>\n<h1 id=\"1）window默认滚动条-使用方法\"><a href=\"#1）window默认滚动条-使用方法\" class=\"headerlink\" title=\"1）window默认滚动条 使用方法\"></a>1）window默认滚动条 使用方法</h1><p>需要将组件放到最外层里面的div的底部，status默认为ready，准备就绪，end为结束</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-example wrapper-example-load-window&quot;&gt;\n        &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n            &lt;ul&gt;\n                &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                    {{ value.message }} {{ key }}\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;Pullload scroll=&quot;window&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"2）某元素的默认滚动条-使用方法\"><a href=\"#2）某元素的默认滚动条-使用方法\" class=\"headerlink\" title=\"2）某元素的默认滚动条 使用方法\"></a>2）某元素的默认滚动条 使用方法</h1><p>用法跟window很像，需要放到滚动元素#parent内的底部</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-example wrapper-example-load-window&quot;&gt;\n        &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n            &lt;ul&gt;\n                &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                    {{ value.message }} {{ key }}\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;Pullload scroll=&quot;window&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"3）scroll滚动条-使用方法\"><a href=\"#3）scroll滚动条-使用方法\" class=\"headerlink\" title=\"3）scroll滚动条 使用方法\"></a>3）scroll滚动条 使用方法</h1><p>跟window类似，需要放到scroll底部</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-example wrapper-example-load-scroll&quot;&gt;\n        &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n            &lt;Scroll :size.sync=&quot;size&quot; :is-refresh.sync=&quot;isRefresh&quot;&gt;\n                &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n                &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n                &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n                &lt;ul&gt;\n                    &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                        {{ value.message }} {{ key }}\n                    &lt;/li&gt;\n                &lt;/ul&gt;\n                &lt;Pullload scroll=&quot;scroll&quot; :size.sync=&quot;size&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n            &lt;/Scroll&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            size: 0,\n            isRefresh: false,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Pullrefresh Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">scroll</td>\n<td style=\"text-align:left\">选填，滚动条类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">window</td>\n<td style=\"text-align:left\">window,scroll,other</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">size</td>\n<td style=\"text-align:left\">选填，滚动条的距离，scroll为scroll的时候起作用</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"window-默认滚动条\"><a href=\"#window-默认滚动条\" class=\"headerlink\" title=\"window 默认滚动条\"></a>window 默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullLoadWindow&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-load-window&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;ul&gt;\n                    &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                        {{ value.message }} {{ key }}\n                    &lt;/li&gt;\n                &lt;/ul&gt;\n                &lt;Pullload scroll=&quot;window&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n\n.wrapper-example-load-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"某元素默认滚动条\"><a href=\"#某元素默认滚动条\" class=\"headerlink\" title=\"某元素默认滚动条\"></a>某元素默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullLoadElem&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-load-elem&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                    &lt;ul&gt;\n                        &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                            {{ value.message }} {{ key }}\n                        &lt;/li&gt;\n                    &lt;/ul&gt;\n                    &lt;Pullload scroll=&quot;other&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-load-elem {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    border-top: solid 1px #ccc;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-elem .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-elem .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"scroll-滚动条\"><a href=\"#scroll-滚动条\" class=\"headerlink\" title=\"scroll 滚动条\"></a>scroll 滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullLoadScroll&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-load-scroll&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Scroll :size.sync=&quot;size&quot; :is-refresh.sync=&quot;isRefresh&quot;&gt;\n                    &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n                    &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n                    &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n                    &lt;ul&gt;\n                        &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                            {{ value.message }} {{ key }}\n                        &lt;/li&gt;\n                    &lt;/ul&gt;\n                    &lt;Pullload scroll=&quot;scroll&quot; :size.sync=&quot;size&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n                &lt;/Scroll&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            size: 0,\n            isRefresh: false,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                debugger;\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Pullload-下拉加载\"><a href=\"#Pullload-下拉加载\" class=\"headerlink\" title=\"Pullload 下拉加载\"></a>Pullload 下拉加载</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Pullload 下拉加载，支持三种情况，一种是默认window的滚动条、某元素的滚动条、以及scroll滚动条。</p>\n<h1 id=\"1）window默认滚动条-使用方法\"><a href=\"#1）window默认滚动条-使用方法\" class=\"headerlink\" title=\"1）window默认滚动条 使用方法\"></a>1）window默认滚动条 使用方法</h1><p>需要将组件放到最外层里面的div的底部，status默认为ready，准备就绪，end为结束</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-example wrapper-example-load-window&quot;&gt;\n        &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n            &lt;ul&gt;\n                &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                    {{ value.message }} {{ key }}\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;Pullload scroll=&quot;window&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"2）某元素的默认滚动条-使用方法\"><a href=\"#2）某元素的默认滚动条-使用方法\" class=\"headerlink\" title=\"2）某元素的默认滚动条 使用方法\"></a>2）某元素的默认滚动条 使用方法</h1><p>用法跟window很像，需要放到滚动元素#parent内的底部</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-example wrapper-example-load-window&quot;&gt;\n        &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n            &lt;ul&gt;\n                &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                    {{ value.message }} {{ key }}\n                &lt;/li&gt;\n            &lt;/ul&gt;\n            &lt;Pullload scroll=&quot;window&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h1 id=\"3）scroll滚动条-使用方法\"><a href=\"#3）scroll滚动条-使用方法\" class=\"headerlink\" title=\"3）scroll滚动条 使用方法\"></a>3）scroll滚动条 使用方法</h1><p>跟window类似，需要放到scroll底部</p>\n<pre><code class=\"html\">&lt;template&gt;\n   &lt;div class=&quot;wrapper-example wrapper-example-load-scroll&quot;&gt;\n        &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n            &lt;Scroll :size.sync=&quot;size&quot; :is-refresh.sync=&quot;isRefresh&quot;&gt;\n                &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n                &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n                &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n                &lt;ul&gt;\n                    &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                        {{ value.message }} {{ key }}\n                    &lt;/li&gt;\n                &lt;/ul&gt;\n                &lt;Pullload scroll=&quot;scroll&quot; :size.sync=&quot;size&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n            &lt;/Scroll&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            size: 0,\n            isRefresh: false,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Pullrefresh Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">scroll</td>\n<td style=\"text-align:left\">选填，滚动条类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">window</td>\n<td style=\"text-align:left\">window,scroll,other</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">size</td>\n<td style=\"text-align:left\">选填，滚动条的距离，scroll为scroll的时候起作用</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"window-默认滚动条\"><a href=\"#window-默认滚动条\" class=\"headerlink\" title=\"window 默认滚动条\"></a>window 默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullLoadWindow&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-load-window&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;ul&gt;\n                    &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                        {{ value.message }} {{ key }}\n                    &lt;/li&gt;\n                &lt;/ul&gt;\n                &lt;Pullload scroll=&quot;window&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n\n.wrapper-example-load-window .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-window .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-window .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"某元素默认滚动条\"><a href=\"#某元素默认滚动条\" class=\"headerlink\" title=\"某元素默认滚动条\"></a>某元素默认滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullLoadElem&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-load-elem&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                    &lt;ul&gt;\n                        &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                            {{ value.message }} {{ key }}\n                        &lt;/li&gt;\n                    &lt;/ul&gt;\n                    &lt;Pullload scroll=&quot;other&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;ready&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-load-elem {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    border-top: solid 1px #ccc;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-elem .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: auto;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-elem .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-elem .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"scroll-滚动条\"><a href=\"#scroll-滚动条\" class=\"headerlink\" title=\"scroll 滚动条\"></a>scroll 滚动条</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;PullLoadScroll&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-load-scroll&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Scroll :size.sync=&quot;size&quot; :is-refresh.sync=&quot;isRefresh&quot;&gt;\n                    &lt;div slot=&quot;down&quot;&gt;我是down按钮&lt;/div&gt;\n                    &lt;div slot=&quot;up&quot;&gt;我是up按钮&lt;/div&gt;\n                    &lt;div slot=&quot;load&quot;&gt;我是loadding&lt;/div&gt;\n                    &lt;ul&gt;\n                        &lt;li v-for=&quot;(key, value) in data&quot;&gt;\n                            {{ value.message }} {{ key }}\n                        &lt;/li&gt;\n                    &lt;/ul&gt;\n                    &lt;Pullload scroll=&quot;scroll&quot; :size.sync=&quot;size&quot; :status.sync=&quot;status&quot; @on-load=&quot;loaded&quot;&gt;&lt;/Pullload&gt;\n                &lt;/Scroll&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Pullload,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Pullload,\n        Button\n    },\n    data() {\n        return {\n            status: &#39;ready&#39;,\n            size: 0,\n            isRefresh: false,\n            data: [\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;},\n                {&#39;message&#39;: &#39;我是消息&#39;}\n            ]\n        }\n    },\n    methods: {\n        loaded: function(){\n            let self = this;\n            setTimeout(function(){\n                self.status = &#39;end&#39;;\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                self.data.push({&#39;message&#39;: &#39;我是消息&#39;});\n                debugger;\n                self.isRefresh = true;\n            }, 1000);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n"},{"title":"规范","date":"2016-10-19T07:23:55.000Z","_content":"\n\n\n# 规范\n## 使用规范 \n\n使用者需要注意的规范。\n\n## 组件 \n\n使用:prop传递数据格式为 数字 或 布尔值 时，必须带:(兼容String除外，具体看组件文档)，比如：\n\n\n正确的使用方法：\n```\n<Tip :show=\"true\" ></Tip>\n```\n\n错误的使用方法：\n```\n<Tip show=\"true\"></Tip>\n```\n\n\n有些组件需要使用.sync传递变量，主要原因在于当组件变化时候需要使父组件的样式也发生变化。\n\n\n正确的使用方法：\n```\n<Tip :show.sync = \"true\" ></Tip>\n```\n\n错误的使用方法：\n```\n<Tip show.sync = \"true\"></Tip>\n```\n\n\n## 开发规范 \n\n### 命名\n    尽量简单、表意、风格统一。\n### 目录\n    组件在目录src/components/下，每个组件单独一个目录，目录命名使用小写\n### 属性\n    必须规定type或者使用validator进行验证\n    如果validator验证为几个值中的一个，则使用src/utils/utils内的validate函数验证\n### 事件 #\n命名\n    使用on-为前缀，比如on-change\n规范\n    使用$emit来对外触发事件\n    嵌套组件之间通信，使用$parent和$children，而不用$emit，避免使用者错误使用自定义事件\n### 其它 #\n    css前缀使用mv-\n贡献代码需要遵循的规范。","source":"_posts/standard.md","raw":"---\ntitle: 规范\ndate: 2016-10-19 15:23:55\ntags:\ncategories:\n- Summary\n---\n\n\n\n# 规范\n## 使用规范 \n\n使用者需要注意的规范。\n\n## 组件 \n\n使用:prop传递数据格式为 数字 或 布尔值 时，必须带:(兼容String除外，具体看组件文档)，比如：\n\n\n正确的使用方法：\n```\n<Tip :show=\"true\" ></Tip>\n```\n\n错误的使用方法：\n```\n<Tip show=\"true\"></Tip>\n```\n\n\n有些组件需要使用.sync传递变量，主要原因在于当组件变化时候需要使父组件的样式也发生变化。\n\n\n正确的使用方法：\n```\n<Tip :show.sync = \"true\" ></Tip>\n```\n\n错误的使用方法：\n```\n<Tip show.sync = \"true\"></Tip>\n```\n\n\n## 开发规范 \n\n### 命名\n    尽量简单、表意、风格统一。\n### 目录\n    组件在目录src/components/下，每个组件单独一个目录，目录命名使用小写\n### 属性\n    必须规定type或者使用validator进行验证\n    如果validator验证为几个值中的一个，则使用src/utils/utils内的validate函数验证\n### 事件 #\n命名\n    使用on-为前缀，比如on-change\n规范\n    使用$emit来对外触发事件\n    嵌套组件之间通信，使用$parent和$children，而不用$emit，避免使用者错误使用自定义事件\n### 其它 #\n    css前缀使用mv-\n贡献代码需要遵循的规范。","slug":"standard","published":1,"updated":"2016-11-24T02:09:27.000Z","_id":"ciut8cahn000yv7s6w3mxgh2p","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h1><h2 id=\"使用规范\"><a href=\"#使用规范\" class=\"headerlink\" title=\"使用规范\"></a>使用规范</h2><p>使用者需要注意的规范。</p>\n<h2 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h2><p>使用:prop传递数据格式为 数字 或 布尔值 时，必须带:(兼容String除外，具体看组件文档)，比如：</p>\n<p>正确的使用方法：</p>\n<pre><code>&lt;Tip :show=&quot;true&quot; &gt;&lt;/Tip&gt;\n</code></pre><p>错误的使用方法：</p>\n<pre><code>&lt;Tip show=&quot;true&quot;&gt;&lt;/Tip&gt;\n</code></pre><p>有些组件需要使用.sync传递变量，主要原因在于当组件变化时候需要使父组件的样式也发生变化。</p>\n<p>正确的使用方法：</p>\n<pre><code>&lt;Tip :show.sync = &quot;true&quot; &gt;&lt;/Tip&gt;\n</code></pre><p>错误的使用方法：</p>\n<pre><code>&lt;Tip show.sync = &quot;true&quot;&gt;&lt;/Tip&gt;\n</code></pre><h2 id=\"开发规范\"><a href=\"#开发规范\" class=\"headerlink\" title=\"开发规范\"></a>开发规范</h2><h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><pre><code>尽量简单、表意、风格统一。\n</code></pre><h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><pre><code>组件在目录src/components/下，每个组件单独一个目录，目录命名使用小写\n</code></pre><h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><pre><code>必须规定type或者使用validator进行验证\n如果validator验证为几个值中的一个，则使用src/utils/utils内的validate函数验证\n</code></pre><h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>命名<br>    使用on-为前缀，比如on-change<br>规范<br>    使用$emit来对外触发事件<br>    嵌套组件之间通信，使用$parent和$children，而不用$emit，避免使用者错误使用自定义事件</p>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><pre><code>css前缀使用mv-\n</code></pre><p>贡献代码需要遵循的规范。</p>\n","excerpt":"","more":"<h1 id=\"规范\"><a href=\"#规范\" class=\"headerlink\" title=\"规范\"></a>规范</h1><h2 id=\"使用规范\"><a href=\"#使用规范\" class=\"headerlink\" title=\"使用规范\"></a>使用规范</h2><p>使用者需要注意的规范。</p>\n<h2 id=\"组件\"><a href=\"#组件\" class=\"headerlink\" title=\"组件\"></a>组件</h2><p>使用:prop传递数据格式为 数字 或 布尔值 时，必须带:(兼容String除外，具体看组件文档)，比如：</p>\n<p>正确的使用方法：</p>\n<pre><code>&lt;Tip :show=&quot;true&quot; &gt;&lt;/Tip&gt;\n</code></pre><p>错误的使用方法：</p>\n<pre><code>&lt;Tip show=&quot;true&quot;&gt;&lt;/Tip&gt;\n</code></pre><p>有些组件需要使用.sync传递变量，主要原因在于当组件变化时候需要使父组件的样式也发生变化。</p>\n<p>正确的使用方法：</p>\n<pre><code>&lt;Tip :show.sync = &quot;true&quot; &gt;&lt;/Tip&gt;\n</code></pre><p>错误的使用方法：</p>\n<pre><code>&lt;Tip show.sync = &quot;true&quot;&gt;&lt;/Tip&gt;\n</code></pre><h2 id=\"开发规范\"><a href=\"#开发规范\" class=\"headerlink\" title=\"开发规范\"></a>开发规范</h2><h3 id=\"命名\"><a href=\"#命名\" class=\"headerlink\" title=\"命名\"></a>命名</h3><pre><code>尽量简单、表意、风格统一。\n</code></pre><h3 id=\"目录\"><a href=\"#目录\" class=\"headerlink\" title=\"目录\"></a>目录</h3><pre><code>组件在目录src/components/下，每个组件单独一个目录，目录命名使用小写\n</code></pre><h3 id=\"属性\"><a href=\"#属性\" class=\"headerlink\" title=\"属性\"></a>属性</h3><pre><code>必须规定type或者使用validator进行验证\n如果validator验证为几个值中的一个，则使用src/utils/utils内的validate函数验证\n</code></pre><h3 id=\"事件\"><a href=\"#事件\" class=\"headerlink\" title=\"事件\"></a>事件</h3><p>命名<br>    使用on-为前缀，比如on-change<br>规范<br>    使用$emit来对外触发事件<br>    嵌套组件之间通信，使用$parent和$children，而不用$emit，避免使用者错误使用自定义事件</p>\n<h3 id=\"其它\"><a href=\"#其它\" class=\"headerlink\" title=\"其它\"></a>其它</h3><pre><code>css前缀使用mv-\n</code></pre><p>贡献代码需要遵循的规范。</p>\n"},{"title":"起步","date":"2016-10-19T07:23:10.000Z","_content":"\n\n# 起步\n\n## 使用之前\n\n使用mvui之前，您应该了解vue.js的一些知识，其次需要了解rem布局，mvui基于rem布局\n\n\n## Vue组件\n基于Vue构建大型应用\n以下概念贯穿iView前后，建议开发者花点时间来了解。\nprops 传递数据，以及:prop :prop.sync :prop.once的区别\nslot 内容分发\nevents $emit @click 事件\n\n\n## 安装 \n$ npm install mvui --save\n\n\n## 示例 \n``` html\n<template>  \n    <div class=\"body-wrapper\">\n        <Icon class=\"ion-ionic\" style=\"font-size: 0.18rem;color: blue;\"></Icon>\n    </div>\n</template> \n<script>\n    import { Icon } from 'mvui';\n    export default{   \n        components: { \n            Icon,\n        }\n    }\n</script>\n```\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串\n###### 注意：变量需要在class前面加冒号（：）， 示例子\n``` html\n<Icon class=\"ion-ionic\" style=\"font-size: 12px;\"></Icon>\n```\n\n\n## rem布局\n\n目前所有组件是基于rem布局，以320为基准，计算不同手机的font-size值进行缩放，适配不同的手机。这期间，您需要切不同的图片，可以切2倍图或者三倍图。建议所有页面的图片要切到3倍以上。\n\n## rem布局原理\n\n默认浏览器1rem=16px,也就相当于根元素html的字体大小为16px,当我们更改html font-size的时候，这时候rem也在跟着变化。\n因此我们可以想象到当基础布局为320px的时候，1rem=16px的时候，320px=20rem，所以我们可以动态的计算获取到的可视区域宽度为windowWidth，windowWidth 与320 的比例值即为缩放比X。\n公式为 windowWidth / 320 = X / 16,会有这样的一个公式。\n当我们每次动态计算出X的值，把html font-size设置为x就可以满足需求。这个时候如果我们以320px布局的话，那么得做一次中间转换，当时我用fis写了一个插件，做中间转换。\n\n\n后来去某一个公司面试，那公司老大给我提了个醒，他说为啥不可以直接以320px 直接等于3.2rem这种形式开发呢，就不存在了中间转化，他们只是差距 100倍，因此只需要在原来的公式计算出的x在乘以 100，既可以得出我们想要的结果。代码如下：\n``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" id=\"viewport\" content=\"width=320,user-scalable=no,initial-scale=1,minimum-scale=1,maximum-scale=1\">\n    <title></title>\n    <link rel=\"shortcut icon\" href=\"static/favicon.ico\" type=\"image/x-icon\">\n    <style>\n    * {\n        padding: 0px;\n        margin: 0px;\n    }\n    li,\n    a {\n        list-style: none;\n        text-decoration: none;\n        color: inherit;\n    }\n    body {\n        padding: 0px;\n        box-sizing: border-box;\n    }\n    .ui-tab {\n        height: 10px;\n    }\n    </style>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/weui.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/index.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/example.css\"/>\n    <script>\n    (function(win) {\n        var doc = win.document,\n            html = doc.documentElement,\n            scale = 16,\n            resizeEvent = 'orientationchange' in window ? 'orientationchange' : 'resize';\n        function calculate(){\n            windowWidth = html && html.clientWidth || win.innerWidth;\n            windowHeight = html && html.clientHeight || win.innerHeight;\n            deviceAgent = navigator.userAgent.toLowerCase();\n            scale = parseFloat(windowWidth / 3.2);\n            // 修复微信2.3系统bug\n            if (deviceAgent.match(/android\\s*2.3/) && deviceAgent.match(/micromessenger/)) {\n                scale = 16;\n            }\n            if( scale > 150 ){\n                scale = 150;\n            }\n            html.style.fontSize = scale + 'px';\n        }\n        html.style.opacity = 0;   // 未渲染出来先把页面隐藏 \n        win.addEventListener(resizeEvent, function() {\n            calculate();\n        }, false);\n        doc.addEventListener('DOMContentLoaded', function() {\n            calculate();\n            body = doc.body;\n            body.style.width = '3.2rem';\n            body.style.fontSize = '0.13rem';\n            body.style.margin = '0px auto';\n            html.style.opacity = 1;\n        }, false);\n    })(window);\n    </script>\n</head>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"dist/common.js\"></script>\n    <script src=\"dist/build.bundle.js\"></script>\n</body>\n</html>\n\n```\n\n## rem布局步骤\n\n###### 1) 把html js放到页面中\n###### 2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\n###### 3）切图为320px基准的2倍数或者3倍图。\n###### 4） 写代码了，也即是当我们测量为 100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\n\n\n\n\n\n\n\n\n\n","source":"_posts/start.md","raw":"---\ntitle: 起步\ndate: 2016-10-19 15:23:10\ntags:\ncategories:\n- Summary\n---\n\n\n# 起步\n\n## 使用之前\n\n使用mvui之前，您应该了解vue.js的一些知识，其次需要了解rem布局，mvui基于rem布局\n\n\n## Vue组件\n基于Vue构建大型应用\n以下概念贯穿iView前后，建议开发者花点时间来了解。\nprops 传递数据，以及:prop :prop.sync :prop.once的区别\nslot 内容分发\nevents $emit @click 事件\n\n\n## 安装 \n$ npm install mvui --save\n\n\n## 示例 \n``` html\n<template>  \n    <div class=\"body-wrapper\">\n        <Icon class=\"ion-ionic\" style=\"font-size: 0.18rem;color: blue;\"></Icon>\n    </div>\n</template> \n<script>\n    import { Icon } from 'mvui';\n    export default{   \n        components: { \n            Icon,\n        }\n    }\n</script>\n```\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串\n###### 注意：变量需要在class前面加冒号（：）， 示例子\n``` html\n<Icon class=\"ion-ionic\" style=\"font-size: 12px;\"></Icon>\n```\n\n\n## rem布局\n\n目前所有组件是基于rem布局，以320为基准，计算不同手机的font-size值进行缩放，适配不同的手机。这期间，您需要切不同的图片，可以切2倍图或者三倍图。建议所有页面的图片要切到3倍以上。\n\n## rem布局原理\n\n默认浏览器1rem=16px,也就相当于根元素html的字体大小为16px,当我们更改html font-size的时候，这时候rem也在跟着变化。\n因此我们可以想象到当基础布局为320px的时候，1rem=16px的时候，320px=20rem，所以我们可以动态的计算获取到的可视区域宽度为windowWidth，windowWidth 与320 的比例值即为缩放比X。\n公式为 windowWidth / 320 = X / 16,会有这样的一个公式。\n当我们每次动态计算出X的值，把html font-size设置为x就可以满足需求。这个时候如果我们以320px布局的话，那么得做一次中间转换，当时我用fis写了一个插件，做中间转换。\n\n\n后来去某一个公司面试，那公司老大给我提了个醒，他说为啥不可以直接以320px 直接等于3.2rem这种形式开发呢，就不存在了中间转化，他们只是差距 100倍，因此只需要在原来的公式计算出的x在乘以 100，既可以得出我们想要的结果。代码如下：\n``` html\n<!DOCTYPE html>\n<html lang=\"en\">\n<head>\n    <meta charset=\"UTF-8\">\n    <meta name=\"viewport\" id=\"viewport\" content=\"width=320,user-scalable=no,initial-scale=1,minimum-scale=1,maximum-scale=1\">\n    <title></title>\n    <link rel=\"shortcut icon\" href=\"static/favicon.ico\" type=\"image/x-icon\">\n    <style>\n    * {\n        padding: 0px;\n        margin: 0px;\n    }\n    li,\n    a {\n        list-style: none;\n        text-decoration: none;\n        color: inherit;\n    }\n    body {\n        padding: 0px;\n        box-sizing: border-box;\n    }\n    .ui-tab {\n        height: 10px;\n    }\n    </style>\n\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/weui.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/index.css\"/>\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"static/example.css\"/>\n    <script>\n    (function(win) {\n        var doc = win.document,\n            html = doc.documentElement,\n            scale = 16,\n            resizeEvent = 'orientationchange' in window ? 'orientationchange' : 'resize';\n        function calculate(){\n            windowWidth = html && html.clientWidth || win.innerWidth;\n            windowHeight = html && html.clientHeight || win.innerHeight;\n            deviceAgent = navigator.userAgent.toLowerCase();\n            scale = parseFloat(windowWidth / 3.2);\n            // 修复微信2.3系统bug\n            if (deviceAgent.match(/android\\s*2.3/) && deviceAgent.match(/micromessenger/)) {\n                scale = 16;\n            }\n            if( scale > 150 ){\n                scale = 150;\n            }\n            html.style.fontSize = scale + 'px';\n        }\n        html.style.opacity = 0;   // 未渲染出来先把页面隐藏 \n        win.addEventListener(resizeEvent, function() {\n            calculate();\n        }, false);\n        doc.addEventListener('DOMContentLoaded', function() {\n            calculate();\n            body = doc.body;\n            body.style.width = '3.2rem';\n            body.style.fontSize = '0.13rem';\n            body.style.margin = '0px auto';\n            html.style.opacity = 1;\n        }, false);\n    })(window);\n    </script>\n</head>\n<body>\n    <div id=\"app\"></div>\n    <script src=\"dist/common.js\"></script>\n    <script src=\"dist/build.bundle.js\"></script>\n</body>\n</html>\n\n```\n\n## rem布局步骤\n\n###### 1) 把html js放到页面中\n###### 2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\n###### 3）切图为320px基准的2倍数或者3倍图。\n###### 4） 写代码了，也即是当我们测量为 100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\n\n\n\n\n\n\n\n\n\n","slug":"start","published":1,"updated":"2016-11-29T08:00:07.000Z","_id":"ciut8cahq0012v7s63qtai43j","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"起步\"><a href=\"#起步\" class=\"headerlink\" title=\"起步\"></a>起步</h1><h2 id=\"使用之前\"><a href=\"#使用之前\" class=\"headerlink\" title=\"使用之前\"></a>使用之前</h2><p>使用mvui之前，您应该了解vue.js的一些知识，其次需要了解rem布局，mvui基于rem布局</p>\n<h2 id=\"Vue组件\"><a href=\"#Vue组件\" class=\"headerlink\" title=\"Vue组件\"></a>Vue组件</h2><p>基于Vue构建大型应用<br>以下概念贯穿iView前后，建议开发者花点时间来了解。<br>props 传递数据，以及:prop :prop.sync :prop.once的区别<br>slot 内容分发<br>events $emit @click 事件</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>$ npm install mvui –save</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Icon class=&quot;ion-ionic&quot; style=&quot;font-size: 0.18rem;color: blue;&quot;&gt;&lt;/Icon&gt;\n    &lt;/div&gt;\n&lt;/template&gt; \n&lt;script&gt;\n    import { Icon } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Icon,\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串</h6><h6 id=\"注意：变量需要在class前面加冒号（：），-示例子\"><a href=\"#注意：变量需要在class前面加冒号（：），-示例子\" class=\"headerlink\" title=\"注意：变量需要在class前面加冒号（：）， 示例子\"></a>注意：变量需要在class前面加冒号（：）， 示例子</h6><pre><code class=\"html\">&lt;Icon class=&quot;ion-ionic&quot; style=&quot;font-size: 12px;&quot;&gt;&lt;/Icon&gt;\n</code></pre>\n<h2 id=\"rem布局\"><a href=\"#rem布局\" class=\"headerlink\" title=\"rem布局\"></a>rem布局</h2><p>目前所有组件是基于rem布局，以320为基准，计算不同手机的font-size值进行缩放，适配不同的手机。这期间，您需要切不同的图片，可以切2倍图或者三倍图。建议所有页面的图片要切到3倍以上。</p>\n<h2 id=\"rem布局原理\"><a href=\"#rem布局原理\" class=\"headerlink\" title=\"rem布局原理\"></a>rem布局原理</h2><p>默认浏览器1rem=16px,也就相当于根元素html的字体大小为16px,当我们更改html font-size的时候，这时候rem也在跟着变化。<br>因此我们可以想象到当基础布局为320px的时候，1rem=16px的时候，320px=20rem，所以我们可以动态的计算获取到的可视区域宽度为windowWidth，windowWidth 与320 的比例值即为缩放比X。<br>公式为 windowWidth / 320 = X / 16,会有这样的一个公式。<br>当我们每次动态计算出X的值，把html font-size设置为x就可以满足需求。这个时候如果我们以320px布局的话，那么得做一次中间转换，当时我用fis写了一个插件，做中间转换。</p>\n<p>后来去某一个公司面试，那公司老大给我提了个醒，他说为啥不可以直接以320px 直接等于3.2rem这种形式开发呢，就不存在了中间转化，他们只是差距 100倍，因此只需要在原来的公式计算出的x在乘以 100，既可以得出我们想要的结果。代码如下：</p>\n<pre><code class=\"html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; id=&quot;viewport&quot; content=&quot;width=320,user-scalable=no,initial-scale=1,minimum-scale=1,maximum-scale=1&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;link rel=&quot;shortcut icon&quot; href=&quot;static/favicon.ico&quot; type=&quot;image/x-icon&quot;&gt;\n    &lt;style&gt;\n    * {\n        padding: 0px;\n        margin: 0px;\n    }\n    li,\n    a {\n        list-style: none;\n        text-decoration: none;\n        color: inherit;\n    }\n    body {\n        padding: 0px;\n        box-sizing: border-box;\n    }\n    .ui-tab {\n        height: 10px;\n    }\n    &lt;/style&gt;\n\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;static/weui.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;static/index.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;static/example.css&quot;/&gt;\n    &lt;script&gt;\n    (function(win) {\n        var doc = win.document,\n            html = doc.documentElement,\n            scale = 16,\n            resizeEvent = &#39;orientationchange&#39; in window ? &#39;orientationchange&#39; : &#39;resize&#39;;\n        function calculate(){\n            windowWidth = html &amp;&amp; html.clientWidth || win.innerWidth;\n            windowHeight = html &amp;&amp; html.clientHeight || win.innerHeight;\n            deviceAgent = navigator.userAgent.toLowerCase();\n            scale = parseFloat(windowWidth / 3.2);\n            // 修复微信2.3系统bug\n            if (deviceAgent.match(/android\\s*2.3/) &amp;&amp; deviceAgent.match(/micromessenger/)) {\n                scale = 16;\n            }\n            if( scale &gt; 150 ){\n                scale = 150;\n            }\n            html.style.fontSize = scale + &#39;px&#39;;\n        }\n        html.style.opacity = 0;   // 未渲染出来先把页面隐藏 \n        win.addEventListener(resizeEvent, function() {\n            calculate();\n        }, false);\n        doc.addEventListener(&#39;DOMContentLoaded&#39;, function() {\n            calculate();\n            body = doc.body;\n            body.style.width = &#39;3.2rem&#39;;\n            body.style.fontSize = &#39;0.13rem&#39;;\n            body.style.margin = &#39;0px auto&#39;;\n            html.style.opacity = 1;\n        }, false);\n    })(window);\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;\n    &lt;script src=&quot;dist/common.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;dist/build.bundle.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"rem布局步骤\"><a href=\"#rem布局步骤\" class=\"headerlink\" title=\"rem布局步骤\"></a>rem布局步骤</h2><h6 id=\"1-把html-js放到页面中\"><a href=\"#1-把html-js放到页面中\" class=\"headerlink\" title=\"1) 把html js放到页面中\"></a>1) 把html js放到页面中</h6><h6 id=\"2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\"><a href=\"#2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\" class=\"headerlink\" title=\"2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\"></a>2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。</h6><h6 id=\"3）切图为320px基准的2倍数或者3倍图。\"><a href=\"#3）切图为320px基准的2倍数或者3倍图。\" class=\"headerlink\" title=\"3）切图为320px基准的2倍数或者3倍图。\"></a>3）切图为320px基准的2倍数或者3倍图。</h6><h6 id=\"4）-写代码了，也即是当我们测量为-100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\"><a href=\"#4）-写代码了，也即是当我们测量为-100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\" class=\"headerlink\" title=\"4） 写代码了，也即是当我们测量为 100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\"></a>4） 写代码了，也即是当我们测量为 100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了</h6>","excerpt":"","more":"<h1 id=\"起步\"><a href=\"#起步\" class=\"headerlink\" title=\"起步\"></a>起步</h1><h2 id=\"使用之前\"><a href=\"#使用之前\" class=\"headerlink\" title=\"使用之前\"></a>使用之前</h2><p>使用mvui之前，您应该了解vue.js的一些知识，其次需要了解rem布局，mvui基于rem布局</p>\n<h2 id=\"Vue组件\"><a href=\"#Vue组件\" class=\"headerlink\" title=\"Vue组件\"></a>Vue组件</h2><p>基于Vue构建大型应用<br>以下概念贯穿iView前后，建议开发者花点时间来了解。<br>props 传递数据，以及:prop :prop.sync :prop.once的区别<br>slot 内容分发<br>events $emit @click 事件</p>\n<h2 id=\"安装\"><a href=\"#安装\" class=\"headerlink\" title=\"安装\"></a>安装</h2><p>$ npm install mvui –save</p>\n<h2 id=\"示例\"><a href=\"#示例\" class=\"headerlink\" title=\"示例\"></a>示例</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Icon class=&quot;ion-ionic&quot; style=&quot;font-size: 0.18rem;color: blue;&quot;&gt;&lt;/Icon&gt;\n    &lt;/div&gt;\n&lt;/template&gt; \n&lt;script&gt;\n    import { Icon } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Icon,\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串</h6><h6 id=\"注意：变量需要在class前面加冒号（：），-示例子\"><a href=\"#注意：变量需要在class前面加冒号（：），-示例子\" class=\"headerlink\" title=\"注意：变量需要在class前面加冒号（：）， 示例子\"></a>注意：变量需要在class前面加冒号（：）， 示例子</h6><pre><code class=\"html\">&lt;Icon class=&quot;ion-ionic&quot; style=&quot;font-size: 12px;&quot;&gt;&lt;/Icon&gt;\n</code></pre>\n<h2 id=\"rem布局\"><a href=\"#rem布局\" class=\"headerlink\" title=\"rem布局\"></a>rem布局</h2><p>目前所有组件是基于rem布局，以320为基准，计算不同手机的font-size值进行缩放，适配不同的手机。这期间，您需要切不同的图片，可以切2倍图或者三倍图。建议所有页面的图片要切到3倍以上。</p>\n<h2 id=\"rem布局原理\"><a href=\"#rem布局原理\" class=\"headerlink\" title=\"rem布局原理\"></a>rem布局原理</h2><p>默认浏览器1rem=16px,也就相当于根元素html的字体大小为16px,当我们更改html font-size的时候，这时候rem也在跟着变化。<br>因此我们可以想象到当基础布局为320px的时候，1rem=16px的时候，320px=20rem，所以我们可以动态的计算获取到的可视区域宽度为windowWidth，windowWidth 与320 的比例值即为缩放比X。<br>公式为 windowWidth / 320 = X / 16,会有这样的一个公式。<br>当我们每次动态计算出X的值，把html font-size设置为x就可以满足需求。这个时候如果我们以320px布局的话，那么得做一次中间转换，当时我用fis写了一个插件，做中间转换。</p>\n<p>后来去某一个公司面试，那公司老大给我提了个醒，他说为啥不可以直接以320px 直接等于3.2rem这种形式开发呢，就不存在了中间转化，他们只是差距 100倍，因此只需要在原来的公式计算出的x在乘以 100，既可以得出我们想要的结果。代码如下：</p>\n<pre><code class=\"html\">&lt;!DOCTYPE html&gt;\n&lt;html lang=&quot;en&quot;&gt;\n&lt;head&gt;\n    &lt;meta charset=&quot;UTF-8&quot;&gt;\n    &lt;meta name=&quot;viewport&quot; id=&quot;viewport&quot; content=&quot;width=320,user-scalable=no,initial-scale=1,minimum-scale=1,maximum-scale=1&quot;&gt;\n    &lt;title&gt;&lt;/title&gt;\n    &lt;link rel=&quot;shortcut icon&quot; href=&quot;static/favicon.ico&quot; type=&quot;image/x-icon&quot;&gt;\n    &lt;style&gt;\n    * {\n        padding: 0px;\n        margin: 0px;\n    }\n    li,\n    a {\n        list-style: none;\n        text-decoration: none;\n        color: inherit;\n    }\n    body {\n        padding: 0px;\n        box-sizing: border-box;\n    }\n    .ui-tab {\n        height: 10px;\n    }\n    &lt;/style&gt;\n\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;static/weui.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;static/index.css&quot;/&gt;\n    &lt;link rel=&quot;stylesheet&quot; type=&quot;text/css&quot; href=&quot;static/example.css&quot;/&gt;\n    &lt;script&gt;\n    (function(win) {\n        var doc = win.document,\n            html = doc.documentElement,\n            scale = 16,\n            resizeEvent = &#39;orientationchange&#39; in window ? &#39;orientationchange&#39; : &#39;resize&#39;;\n        function calculate(){\n            windowWidth = html &amp;&amp; html.clientWidth || win.innerWidth;\n            windowHeight = html &amp;&amp; html.clientHeight || win.innerHeight;\n            deviceAgent = navigator.userAgent.toLowerCase();\n            scale = parseFloat(windowWidth / 3.2);\n            // 修复微信2.3系统bug\n            if (deviceAgent.match(/android\\s*2.3/) &amp;&amp; deviceAgent.match(/micromessenger/)) {\n                scale = 16;\n            }\n            if( scale &gt; 150 ){\n                scale = 150;\n            }\n            html.style.fontSize = scale + &#39;px&#39;;\n        }\n        html.style.opacity = 0;   // 未渲染出来先把页面隐藏 \n        win.addEventListener(resizeEvent, function() {\n            calculate();\n        }, false);\n        doc.addEventListener(&#39;DOMContentLoaded&#39;, function() {\n            calculate();\n            body = doc.body;\n            body.style.width = &#39;3.2rem&#39;;\n            body.style.fontSize = &#39;0.13rem&#39;;\n            body.style.margin = &#39;0px auto&#39;;\n            html.style.opacity = 1;\n        }, false);\n    })(window);\n    &lt;/script&gt;\n&lt;/head&gt;\n&lt;body&gt;\n    &lt;div id=&quot;app&quot;&gt;&lt;/div&gt;\n    &lt;script src=&quot;dist/common.js&quot;&gt;&lt;/script&gt;\n    &lt;script src=&quot;dist/build.bundle.js&quot;&gt;&lt;/script&gt;\n&lt;/body&gt;\n&lt;/html&gt;\n</code></pre>\n<h2 id=\"rem布局步骤\"><a href=\"#rem布局步骤\" class=\"headerlink\" title=\"rem布局步骤\"></a>rem布局步骤</h2><h6 id=\"1-把html-js放到页面中\"><a href=\"#1-把html-js放到页面中\" class=\"headerlink\" title=\"1) 把html js放到页面中\"></a>1) 把html js放到页面中</h6><h6 id=\"2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\"><a href=\"#2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\" class=\"headerlink\" title=\"2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。\"></a>2）把拿来的设计图改成320px宽度的像素，然后基于这个宽度进行测量大小。</h6><h6 id=\"3）切图为320px基准的2倍数或者3倍图。\"><a href=\"#3）切图为320px基准的2倍数或者3倍图。\" class=\"headerlink\" title=\"3）切图为320px基准的2倍数或者3倍图。\"></a>3）切图为320px基准的2倍数或者3倍图。</h6><h6 id=\"4）-写代码了，也即是当我们测量为-100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\"><a href=\"#4）-写代码了，也即是当我们测量为-100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\" class=\"headerlink\" title=\"4） 写代码了，也即是当我们测量为 100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了\"></a>4） 写代码了，也即是当我们测量为 100px的时候，我么只需要写1rem就可以。不做中间转换处理的好处是调试的时候可以直接在页面里调试。直接写rem就OK了</h6>"},{"title":"Tip 提示","date":"2016-10-19T07:25:46.000Z","_content":"\n# Tip 提示\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n``` html\n<Tip class=\"mv-btn-primary\" style=\"font-size: 0.14rem;\"></Tip>\n```\n\n\n## 概述\nTip 提示框，可以自定义通用属性class和style，以及position（tip位置），show（是否显示），auto（是否自动关闭）\n\n\n## 如何使用\n\n直接在页面使用\n``` html\n<Tip :show.sync=\"true\">我是提示内容</Tip>\n```\n动态的开启关闭,需要动态更改show变量（注意：需要加.sync，子组件变量的改变同步到父组件）\n``` html\n<Tip :show.sync=\"show\">我是提示内容</Tip>\n```\n\n\n## API\n\nTip props\n\n|     属性       | 说明                       |        类型       |    默认值          |    可选值              |\n| :------------- |:-------------------------- | :----------------  | :------------   |    :--------------    |\n|    class      | 选填，类名（可以设置icon）    |    String          |      -           |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -           |     任意               |\n|    position   | 选填，显示位置               |    String          |       top        |      top,center,bottom|\n|    show       | 选填，是否显示组件           |    Boolean          |      false      |   true,false          |\n|    auto       | 选填，是否自动关闭           |    Boolean          |      true       |   true,false          |\n\n\n\n## 右侧示例代码\n\n\n### 顶部位置\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">顶部位置</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow1\">点击</div>\n            <Tip :show.sync=\"show1\" position=\"top\">tip提示框 top 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n\n\n### 中间位置\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">中间位置</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow2\">点击</div>\n            <Tip :show.sync=\"show2\" position=\"center\">tip提示框 center 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show2: false,\n             }\n        },\n        methods: {\n            clickshow2(){\n                this.show2 = true;\n            },\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n\n\n### 底部位置\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">底部位置</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow3\">点击</div>\n            <Tip :show.sync=\"show3\" position=\"bottom\">tip提示框 bottom 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show3: false,\n             }\n        },\n        methods: {\n            clickshow3(){\n                this.show3 = true;\n            },\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n\n\n\n### 手动关闭\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">手动关闭</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow4\">显示tip</div>\n            <div class=\"click-btn\" @click=\"clickclose4\">关闭tip</div>\n            <Tip :show.sync=\"show4\" position=\"center\" :auto=\"false\">tip提示框 center 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show4: false,\n             }\n        },\n        methods: {\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickclose4(){\n                this.show4 = false;\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n        \n","source":"_posts/tip.md","raw":"---\ntitle: Tip 提示\ndate: 2016-10-19 15:25:46\ntags: http://localhost:8080/#!/tip?hidetitle=true\ncategories:\n- View\n---\n\n# Tip 提示\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n``` html\n<Tip class=\"mv-btn-primary\" style=\"font-size: 0.14rem;\"></Tip>\n```\n\n\n## 概述\nTip 提示框，可以自定义通用属性class和style，以及position（tip位置），show（是否显示），auto（是否自动关闭）\n\n\n## 如何使用\n\n直接在页面使用\n``` html\n<Tip :show.sync=\"true\">我是提示内容</Tip>\n```\n动态的开启关闭,需要动态更改show变量（注意：需要加.sync，子组件变量的改变同步到父组件）\n``` html\n<Tip :show.sync=\"show\">我是提示内容</Tip>\n```\n\n\n## API\n\nTip props\n\n|     属性       | 说明                       |        类型       |    默认值          |    可选值              |\n| :------------- |:-------------------------- | :----------------  | :------------   |    :--------------    |\n|    class      | 选填，类名（可以设置icon）    |    String          |      -           |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -           |     任意               |\n|    position   | 选填，显示位置               |    String          |       top        |      top,center,bottom|\n|    show       | 选填，是否显示组件           |    Boolean          |      false      |   true,false          |\n|    auto       | 选填，是否自动关闭           |    Boolean          |      true       |   true,false          |\n\n\n\n## 右侧示例代码\n\n\n### 顶部位置\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">顶部位置</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow1\">点击</div>\n            <Tip :show.sync=\"show1\" position=\"top\">tip提示框 top 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n\n\n### 中间位置\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">中间位置</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow2\">点击</div>\n            <Tip :show.sync=\"show2\" position=\"center\">tip提示框 center 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show2: false,\n             }\n        },\n        methods: {\n            clickshow2(){\n                this.show2 = true;\n            },\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n\n\n### 底部位置\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">底部位置</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow3\">点击</div>\n            <Tip :show.sync=\"show3\" position=\"bottom\">tip提示框 bottom 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show3: false,\n             }\n        },\n        methods: {\n            clickshow3(){\n                this.show3 = true;\n            },\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n\n\n\n### 手动关闭\n``` html\n<template>  \n    <div class=\"wrapper-area\">\n        <div class=\"wrapper-area-title\">手动关闭</div>\n        <div class=\"wrapper-area-content\">\n            <div class=\"click-btn\" @click=\"clickshow4\">显示tip</div>\n            <div class=\"click-btn\" @click=\"clickclose4\">关闭tip</div>\n            <Tip :show.sync=\"show4\" position=\"center\" :auto=\"false\">tip提示框 center 位置</Tip>\n        </div>\n    </div>\n</template>\n<script>\n    import { Tip } from 'mvui';\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show4: false,\n             }\n        },\n        methods: {\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickclose4(){\n                this.show4 = false;\n            }\n        }\n    }\n</script>\n<style lang=\"less\">\n    .click-btn{\n        cursor: pointer;\n    }\n</style>\n```\n\n\n        \n","slug":"tip","published":1,"updated":"2016-11-23T01:58:20.000Z","_id":"ciut8caht0014v7s6rtqvf9co","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Tip-提示\"><a href=\"#Tip-提示\" class=\"headerlink\" title=\"Tip 提示\"></a>Tip 提示</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><pre><code class=\"html\">&lt;Tip class=&quot;mv-btn-primary&quot; style=&quot;font-size: 0.14rem;&quot;&gt;&lt;/Tip&gt;\n</code></pre>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Tip 提示框，可以自定义通用属性class和style，以及position（tip位置），show（是否显示），auto（是否自动关闭）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>直接在页面使用</p>\n<pre><code class=\"html\">&lt;Tip :show.sync=&quot;true&quot;&gt;我是提示内容&lt;/Tip&gt;\n</code></pre>\n<p>动态的开启关闭,需要动态更改show变量（注意：需要加.sync，子组件变量的改变同步到父组件）</p>\n<pre><code class=\"html\">&lt;Tip :show.sync=&quot;show&quot;&gt;我是提示内容&lt;/Tip&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Tip props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">position</td>\n<td style=\"text-align:left\">选填，显示位置</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">top</td>\n<td style=\"text-align:left\">top,center,bottom</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show</td>\n<td style=\"text-align:left\">选填，是否显示组件</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">auto</td>\n<td style=\"text-align:left\">选填，是否自动关闭</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"顶部位置\"><a href=\"#顶部位置\" class=\"headerlink\" title=\"顶部位置\"></a>顶部位置</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;顶部位置&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow1&quot;&gt;点击&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show1&quot; position=&quot;top&quot;&gt;tip提示框 top 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"中间位置\"><a href=\"#中间位置\" class=\"headerlink\" title=\"中间位置\"></a>中间位置</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;中间位置&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow2&quot;&gt;点击&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show2&quot; position=&quot;center&quot;&gt;tip提示框 center 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show2: false,\n             }\n        },\n        methods: {\n            clickshow2(){\n                this.show2 = true;\n            },\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"底部位置\"><a href=\"#底部位置\" class=\"headerlink\" title=\"底部位置\"></a>底部位置</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;底部位置&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow3&quot;&gt;点击&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show3&quot; position=&quot;bottom&quot;&gt;tip提示框 bottom 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show3: false,\n             }\n        },\n        methods: {\n            clickshow3(){\n                this.show3 = true;\n            },\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"手动关闭\"><a href=\"#手动关闭\" class=\"headerlink\" title=\"手动关闭\"></a>手动关闭</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;手动关闭&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow4&quot;&gt;显示tip&lt;/div&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickclose4&quot;&gt;关闭tip&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show4&quot; position=&quot;center&quot; :auto=&quot;false&quot;&gt;tip提示框 center 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show4: false,\n             }\n        },\n        methods: {\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickclose4(){\n                this.show4 = false;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Tip-提示\"><a href=\"#Tip-提示\" class=\"headerlink\" title=\"Tip 提示\"></a>Tip 提示</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><pre><code class=\"html\">&lt;Tip class=&quot;mv-btn-primary&quot; style=&quot;font-size: 0.14rem;&quot;&gt;&lt;/Tip&gt;\n</code></pre>\n<h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Tip 提示框，可以自定义通用属性class和style，以及position（tip位置），show（是否显示），auto（是否自动关闭）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><p>直接在页面使用</p>\n<pre><code class=\"html\">&lt;Tip :show.sync=&quot;true&quot;&gt;我是提示内容&lt;/Tip&gt;\n</code></pre>\n<p>动态的开启关闭,需要动态更改show变量（注意：需要加.sync，子组件变量的改变同步到父组件）</p>\n<pre><code class=\"html\">&lt;Tip :show.sync=&quot;show&quot;&gt;我是提示内容&lt;/Tip&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Tip props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">position</td>\n<td style=\"text-align:left\">选填，显示位置</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">top</td>\n<td style=\"text-align:left\">top,center,bottom</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">show</td>\n<td style=\"text-align:left\">选填，是否显示组件</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">auto</td>\n<td style=\"text-align:left\">选填，是否自动关闭</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"顶部位置\"><a href=\"#顶部位置\" class=\"headerlink\" title=\"顶部位置\"></a>顶部位置</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;顶部位置&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow1&quot;&gt;点击&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show1&quot; position=&quot;top&quot;&gt;tip提示框 top 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show1: false,\n             }\n        },\n        methods: {\n            clickshow1(){\n                this.show1 = true;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"中间位置\"><a href=\"#中间位置\" class=\"headerlink\" title=\"中间位置\"></a>中间位置</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;中间位置&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow2&quot;&gt;点击&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show2&quot; position=&quot;center&quot;&gt;tip提示框 center 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show2: false,\n             }\n        },\n        methods: {\n            clickshow2(){\n                this.show2 = true;\n            },\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"底部位置\"><a href=\"#底部位置\" class=\"headerlink\" title=\"底部位置\"></a>底部位置</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;底部位置&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow3&quot;&gt;点击&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show3&quot; position=&quot;bottom&quot;&gt;tip提示框 bottom 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show3: false,\n             }\n        },\n        methods: {\n            clickshow3(){\n                this.show3 = true;\n            },\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n<h3 id=\"手动关闭\"><a href=\"#手动关闭\" class=\"headerlink\" title=\"手动关闭\"></a>手动关闭</h3><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div class=&quot;wrapper-area&quot;&gt;\n        &lt;div class=&quot;wrapper-area-title&quot;&gt;手动关闭&lt;/div&gt;\n        &lt;div class=&quot;wrapper-area-content&quot;&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickshow4&quot;&gt;显示tip&lt;/div&gt;\n            &lt;div class=&quot;click-btn&quot; @click=&quot;clickclose4&quot;&gt;关闭tip&lt;/div&gt;\n            &lt;Tip :show.sync=&quot;show4&quot; position=&quot;center&quot; :auto=&quot;false&quot;&gt;tip提示框 center 位置&lt;/Tip&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Tip } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Hometitle,\n            Tip\n        },\n        data(){\n             return {\n                show4: false,\n             }\n        },\n        methods: {\n            clickshow4(){\n                this.show4 = true;\n            },\n            clickclose4(){\n                this.show4 = false;\n            }\n        }\n    }\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .click-btn{\n        cursor: pointer;\n    }\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Inputbox 输入框","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Inputbox 输入框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\ninpubox 输入框，目前不支持验证，可以自定义通用属性class和style，以及value（value值，需要加sync），type（输入框type类型），placeholder（placeholder），closeIcon（是否显示清楚icon）\n\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <Inputbox :value.sync=\"name\"></Inputbox>\n</template>\n<script>\nimport { Inputbox } from 'mvui';\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n</script>\n```\n\n\n\n## API\n\nInputbox Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    value      | 必填，value值               |    String          |       -       |       任意           |\n|    type       | 选填，input type类型        |    String          |      text         |  任意                |\n|   placeholder | 选填，placeholder          |    String          |      -          |    任意        |\n|    closeIcon  | 选填，是否显示清除icon       |   Boolean           |     true     |true，false|\n\n \n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Inputbox</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <div>姓名：</div>\n                    <Inputbox :value.sync=\"name\"></Inputbox>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">修改样式</div>\n                <div class=\"wrapper-area-content\">\n                    <div>姓名：</div>\n                    <Inputbox :value.sync=\"name\" style=\"border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;text-indent: 0.1rem;\"></Inputbox>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">动态数据</div>\n                <div class=\"wrapper-area-content\">\n                    <div>消息：</div>\n                    <Inputbox :value.sync=\"message\" style=\"border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;\"></Inputbox>\n                </div>\n                <div>消息：{{ message }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">placeHolder</div>\n                <div class=\"wrapper-area-content\">\n                    <div>爱好：</div>\n                    <Inputbox :value.sync=\"like\" placeholder=\"请输入爱好\" :close-icon=\"false\" style=\"border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;\"></Inputbox>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Inputbox,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Inputbox,\n        Button\n    },\n    data() {\n        return {\n            name: ' ',\n            message: '',\n            like: ''\n        }\n    }\n}\n</script>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/inputbox.md","raw":"---\ntitle: Inputbox 输入框\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/inputbox?hidetitle=true\ncategories:\n- Form\n---\n\n\n# Inputbox 输入框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\ninpubox 输入框，目前不支持验证，可以自定义通用属性class和style，以及value（value值，需要加sync），type（输入框type类型），placeholder（placeholder），closeIcon（是否显示清楚icon）\n\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <Inputbox :value.sync=\"name\"></Inputbox>\n</template>\n<script>\nimport { Inputbox } from 'mvui';\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n</script>\n```\n\n\n\n## API\n\nInputbox Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    value      | 必填，value值               |    String          |       -       |       任意           |\n|    type       | 选填，input type类型        |    String          |      text         |  任意                |\n|   placeholder | 选填，placeholder          |    String          |      -          |    任意        |\n|    closeIcon  | 选填，是否显示清除icon       |   Boolean           |     true     |true，false|\n\n \n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Inputbox</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <div>姓名：</div>\n                    <Inputbox :value.sync=\"name\"></Inputbox>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">修改样式</div>\n                <div class=\"wrapper-area-content\">\n                    <div>姓名：</div>\n                    <Inputbox :value.sync=\"name\" style=\"border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;text-indent: 0.1rem;\"></Inputbox>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">动态数据</div>\n                <div class=\"wrapper-area-content\">\n                    <div>消息：</div>\n                    <Inputbox :value.sync=\"message\" style=\"border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;\"></Inputbox>\n                </div>\n                <div>消息：{{ message }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">placeHolder</div>\n                <div class=\"wrapper-area-content\">\n                    <div>爱好：</div>\n                    <Inputbox :value.sync=\"like\" placeholder=\"请输入爱好\" :close-icon=\"false\" style=\"border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;\"></Inputbox>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Inputbox,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Inputbox,\n        Button\n    },\n    data() {\n        return {\n            name: ' ',\n            message: '',\n            like: ''\n        }\n    }\n}\n</script>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"inputbox","published":1,"updated":"2016-11-22T06:06:40.000Z","_id":"ciuxtuudd0000vos6d4cxf4bp","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Inputbox-输入框\"><a href=\"#Inputbox-输入框\" class=\"headerlink\" title=\"Inputbox 输入框\"></a>Inputbox 输入框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>inpubox 输入框，目前不支持验证，可以自定义通用属性class和style，以及value（value值，需要加sync），type（输入框type类型），placeholder（placeholder），closeIcon（是否显示清楚icon）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Inputbox :value.sync=&quot;name&quot;&gt;&lt;/Inputbox&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Inputbox } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Inputbox Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">value</td>\n<td style=\"text-align:left\">必填，value值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，input type类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">text</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">placeholder</td>\n<td style=\"text-align:left\">选填，placeholder</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">closeIcon</td>\n<td style=\"text-align:left\">选填，是否显示清除icon</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Inputbox&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;姓名：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;name&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;修改样式&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;姓名：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;name&quot; style=&quot;border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;text-indent: 0.1rem;&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;动态数据&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;消息：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;message&quot; style=&quot;border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;消息：{{ message }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;placeHolder&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;爱好：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;like&quot; placeholder=&quot;请输入爱好&quot; :close-icon=&quot;false&quot; style=&quot;border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Inputbox,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Inputbox,\n        Button\n    },\n    data() {\n        return {\n            name: &#39; &#39;,\n            message: &#39;&#39;,\n            like: &#39;&#39;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Inputbox-输入框\"><a href=\"#Inputbox-输入框\" class=\"headerlink\" title=\"Inputbox 输入框\"></a>Inputbox 输入框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>inpubox 输入框，目前不支持验证，可以自定义通用属性class和style，以及value（value值，需要加sync），type（输入框type类型），placeholder（placeholder），closeIcon（是否显示清楚icon）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Inputbox :value.sync=&quot;name&quot;&gt;&lt;/Inputbox&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Inputbox } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Inputbox Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">value</td>\n<td style=\"text-align:left\">必填，value值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，input type类型</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">text</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">placeholder</td>\n<td style=\"text-align:left\">选填，placeholder</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">closeIcon</td>\n<td style=\"text-align:left\">选填，是否显示清除icon</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Inputbox&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;姓名：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;name&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;修改样式&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;姓名：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;name&quot; style=&quot;border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;text-indent: 0.1rem;&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;动态数据&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;消息：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;message&quot; style=&quot;border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;消息：{{ message }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;placeHolder&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;爱好：&lt;/div&gt;\n                    &lt;Inputbox :value.sync=&quot;like&quot; placeholder=&quot;请输入爱好&quot; :close-icon=&quot;false&quot; style=&quot;border: solid 1px #ccc;border-radius: 0.03rem;width: 100%;&quot;&gt;&lt;/Inputbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Inputbox,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Inputbox,\n        Button\n    },\n    data() {\n        return {\n            name: &#39; &#39;,\n            message: &#39;&#39;,\n            like: &#39;&#39;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Radio 单选框","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Radio 单选框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nRadio 单选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（radio的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名），noSelectIcon（未选中icon类名），iconStyles（icon样式），id（设置id的值）\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <div>\n        <div>尺寸</div>\n        <Radio :picked.sync=\"message\" value=\"L\"></Radio>\n        <Radio :picked.sync=\"message\" value=\"XXL\"></Radio>\n    </div>\n</template>\n<script>\nimport { Radio } from 'mvui';\nexport default {\n    components: {\n        Radio,\n    },\n    data(){\n        return {\n            message: ''\n        }\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nRadio Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    picked      | 必填，选中的值               |    String          |       -       |       任意           |\n|    value       | 必填，value的值            |    String          |      -         |  任意                |\n|   checked      | 选填，选中的值             |    Boolean          |      false    |    true，false        |\n|    disabled    | 选填，是否可用             |   Boolean           |     false      |true，false|\n|    selectIcon  | 选填，选中icon 类名        |   String            |  mv-icon-round-radio |   所有icon类名   |\n|    noSelectIcon| 选填， 未选中icon类名      |   String            | mv-icon-round |  所有icon类名  |\n|    iconStyles  | 选填，icon样式            |   [String,Object]    |     -        |   任意         |\n|    id          | 选填，id值                |   String           |     -     |   任意         |\n\n\nRadio Events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    属性发生变化时候触发     |        String (选中的值)         |\n\n\n\n## 右侧示例代码\n\n\n``` html\n\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Radio</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <div><Radio :picked.sync=\"message\" value=\"测试2\"></Radio></div>\n                    <div><Radio :picked.sync=\"message\" value=\"测试3\"></Radio></div>\n                </div>\n                <div>{{ message }}</div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">不可用</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Radio :picked.sync=\"message\" disabled :checked=\"true\" value=\"测试1\"></Radio>\n                    </div>\n                    <div>\n                        <Radio :picked.sync=\"message\" disabled value=\"测试1\"></Radio>\n                    </div>\n                </div>\n            </div>\n\n            \n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义icon</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Radio :picked.sync=\"name\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\"  :checked=\"true\" value=\"测试2\"></Radio>\n                    </div>\n                    <div>\n                        <Radio :picked.sync=\"name\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"测试4\"></Radio>\n                    </div>\n                </div>\n                <div>{{ name }}</div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">change事件</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Radio :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\"  :checked=\"true\" value=\"测试8\" @on-change=\"change\"></Radio>\n                    </div>\n                    <div>\n                        <Radio :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"测试6\" @on-change=\"change\"></Radio>\n                    </div>\n                </div>\n                <div>{{ test }}</div>\n            </div>\n    \n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Radio,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Radio,\n        Button\n    },\n    data() {\n        return {\n            message: '',\n            name: '',\n            test: ''\n        }\n    },\n    methods: {\n        change(test){\n            console.log(test);\n        }\n    }\n}\n</script>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/radio.md","raw":"---\ntitle: Radio 单选框\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/radio?hidetitle=true\ncategories:\n- Form\n---\n\n\n# Radio 单选框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nRadio 单选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（radio的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名），noSelectIcon（未选中icon类名），iconStyles（icon样式），id（设置id的值）\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <div>\n        <div>尺寸</div>\n        <Radio :picked.sync=\"message\" value=\"L\"></Radio>\n        <Radio :picked.sync=\"message\" value=\"XXL\"></Radio>\n    </div>\n</template>\n<script>\nimport { Radio } from 'mvui';\nexport default {\n    components: {\n        Radio,\n    },\n    data(){\n        return {\n            message: ''\n        }\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nRadio Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    picked      | 必填，选中的值               |    String          |       -       |       任意           |\n|    value       | 必填，value的值            |    String          |      -         |  任意                |\n|   checked      | 选填，选中的值             |    Boolean          |      false    |    true，false        |\n|    disabled    | 选填，是否可用             |   Boolean           |     false      |true，false|\n|    selectIcon  | 选填，选中icon 类名        |   String            |  mv-icon-round-radio |   所有icon类名   |\n|    noSelectIcon| 选填， 未选中icon类名      |   String            | mv-icon-round |  所有icon类名  |\n|    iconStyles  | 选填，icon样式            |   [String,Object]    |     -        |   任意         |\n|    id          | 选填，id值                |   String           |     -     |   任意         |\n\n\nRadio Events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    属性发生变化时候触发     |        String (选中的值)         |\n\n\n\n## 右侧示例代码\n\n\n``` html\n\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Radio</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <div><Radio :picked.sync=\"message\" value=\"测试2\"></Radio></div>\n                    <div><Radio :picked.sync=\"message\" value=\"测试3\"></Radio></div>\n                </div>\n                <div>{{ message }}</div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">不可用</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Radio :picked.sync=\"message\" disabled :checked=\"true\" value=\"测试1\"></Radio>\n                    </div>\n                    <div>\n                        <Radio :picked.sync=\"message\" disabled value=\"测试1\"></Radio>\n                    </div>\n                </div>\n            </div>\n\n            \n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义icon</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Radio :picked.sync=\"name\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\"  :checked=\"true\" value=\"测试2\"></Radio>\n                    </div>\n                    <div>\n                        <Radio :picked.sync=\"name\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"测试4\"></Radio>\n                    </div>\n                </div>\n                <div>{{ name }}</div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">change事件</div>\n                <div class=\"wrapper-area-content\">\n                    <div>\n                        <Radio :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\"  :checked=\"true\" value=\"测试8\" @on-change=\"change\"></Radio>\n                    </div>\n                    <div>\n                        <Radio :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"测试6\" @on-change=\"change\"></Radio>\n                    </div>\n                </div>\n                <div>{{ test }}</div>\n            </div>\n    \n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Radio,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Radio,\n        Button\n    },\n    data() {\n        return {\n            message: '',\n            name: '',\n            test: ''\n        }\n    },\n    methods: {\n        change(test){\n            console.log(test);\n        }\n    }\n}\n</script>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"radio","published":1,"updated":"2016-11-22T09:23:07.000Z","_id":"ciuxtv30i0001vos6rfpa4gu8","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Radio-单选框\"><a href=\"#Radio-单选框\" class=\"headerlink\" title=\"Radio 单选框\"></a>Radio 单选框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Radio 单选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（radio的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名），noSelectIcon（未选中icon类名），iconStyles（icon样式），id（设置id的值）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;div&gt;尺寸&lt;/div&gt;\n        &lt;Radio :picked.sync=&quot;message&quot; value=&quot;L&quot;&gt;&lt;/Radio&gt;\n        &lt;Radio :picked.sync=&quot;message&quot; value=&quot;XXL&quot;&gt;&lt;/Radio&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Radio } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Radio,\n    },\n    data(){\n        return {\n            message: &#39;&#39;\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Radio Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">picked</td>\n<td style=\"text-align:left\">必填，选中的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">value</td>\n<td style=\"text-align:left\">必填，value的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked</td>\n<td style=\"text-align:left\">选填，选中的值</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否可用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">selectIcon</td>\n<td style=\"text-align:left\">选填，选中icon 类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-round-radio</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">noSelectIcon</td>\n<td style=\"text-align:left\">选填， 未选中icon类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-round</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyles</td>\n<td style=\"text-align:left\">选填，icon样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">id</td>\n<td style=\"text-align:left\">选填，id值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Radio Events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">属性发生变化时候触发</td>\n<td style=\"text-align:left\">String (选中的值)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">\n&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Radio&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;&lt;Radio :picked.sync=&quot;message&quot; value=&quot;测试2&quot;&gt;&lt;/Radio&gt;&lt;/div&gt;\n                    &lt;div&gt;&lt;Radio :picked.sync=&quot;message&quot; value=&quot;测试3&quot;&gt;&lt;/Radio&gt;&lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ message }}&lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;不可用&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;message&quot; disabled :checked=&quot;true&quot; value=&quot;测试1&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;message&quot; disabled value=&quot;测试1&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义icon&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;name&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot;  :checked=&quot;true&quot; value=&quot;测试2&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;name&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;测试4&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ name }}&lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;change事件&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot;  :checked=&quot;true&quot; value=&quot;测试8&quot; @on-change=&quot;change&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;测试6&quot; @on-change=&quot;change&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ test }}&lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Radio,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Radio,\n        Button\n    },\n    data() {\n        return {\n            message: &#39;&#39;,\n            name: &#39;&#39;,\n            test: &#39;&#39;\n        }\n    },\n    methods: {\n        change(test){\n            console.log(test);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Radio-单选框\"><a href=\"#Radio-单选框\" class=\"headerlink\" title=\"Radio 单选框\"></a>Radio 单选框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Radio 单选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（radio的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名），noSelectIcon（未选中icon类名），iconStyles（icon样式），id（设置id的值）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;div&gt;尺寸&lt;/div&gt;\n        &lt;Radio :picked.sync=&quot;message&quot; value=&quot;L&quot;&gt;&lt;/Radio&gt;\n        &lt;Radio :picked.sync=&quot;message&quot; value=&quot;XXL&quot;&gt;&lt;/Radio&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Radio } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Radio,\n    },\n    data(){\n        return {\n            message: &#39;&#39;\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Radio Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">picked</td>\n<td style=\"text-align:left\">必填，选中的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">value</td>\n<td style=\"text-align:left\">必填，value的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked</td>\n<td style=\"text-align:left\">选填，选中的值</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否可用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">selectIcon</td>\n<td style=\"text-align:left\">选填，选中icon 类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-round-radio</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">noSelectIcon</td>\n<td style=\"text-align:left\">选填， 未选中icon类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-round</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyles</td>\n<td style=\"text-align:left\">选填，icon样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">id</td>\n<td style=\"text-align:left\">选填，id值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Radio Events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">属性发生变化时候触发</td>\n<td style=\"text-align:left\">String (选中的值)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">\n&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Radio&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;&lt;Radio :picked.sync=&quot;message&quot; value=&quot;测试2&quot;&gt;&lt;/Radio&gt;&lt;/div&gt;\n                    &lt;div&gt;&lt;Radio :picked.sync=&quot;message&quot; value=&quot;测试3&quot;&gt;&lt;/Radio&gt;&lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ message }}&lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;不可用&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;message&quot; disabled :checked=&quot;true&quot; value=&quot;测试1&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;message&quot; disabled value=&quot;测试1&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义icon&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;name&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot;  :checked=&quot;true&quot; value=&quot;测试2&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;name&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;测试4&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ name }}&lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;change事件&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot;  :checked=&quot;true&quot; value=&quot;测试8&quot; @on-change=&quot;change&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                    &lt;div&gt;\n                        &lt;Radio :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;测试6&quot; @on-change=&quot;change&quot;&gt;&lt;/Radio&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ test }}&lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Radio,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Radio,\n        Button\n    },\n    data() {\n        return {\n            message: &#39;&#39;,\n            name: &#39;&#39;,\n            test: &#39;&#39;\n        }\n    },\n    methods: {\n        change(test){\n            console.log(test);\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Checkbox 多选框","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Checkbox 多选框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nCheckbox 多选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（checkbox value的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名，默认ion-ios-checkmark），noSelectIcon（未选中icon类名，默认ion-ios-circle-outline），iconStyles（icon样式），id（设置id的值）\n\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <Inputbox :value.sync=\"name\"></Inputbox>\n</template>\n<script>\nimport { Inputbox } from 'mvui';\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nCheckbox Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    picked      | 必填，选中的值               |    String          |       -       |       任意           |\n|    value       | 必填，value的值            |    String          |      -         |  任意                |\n|   checked      | 选填，选中的值             |    Boolean          |      false    |    true，false        |\n|    disabled    | 选填，是否可用             |   Boolean           |     false      |true，false|\n|    selectIcon  | 选填，选中icon 类名        |   String            |  ion-ios-checkmark |   所有icon类名   |\n|    noSelectIcon| 选填， 未选中icon类名      |   String            | ion-ios-circle-outline |  所有icon类名  |\n|    iconStyles  | 选填，icon样式            |   [String,Object]         |     -        |   任意         |\n|    id          | 选填，id值                |   String           |     -     |   任意         |\n\n\nCheckbox Events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    属性发生变化时候触发     |        Array (选中的值)         |\n\n\n\n## 右侧示例代码\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Checkbox</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择姓名</span>\n                    <Checkbox :picked.sync=\"message\" value=\"张三\"></Checkbox>\n                    <Checkbox :picked.sync=\"message\" value=\"李四\"></Checkbox>\n                    <Checkbox :picked.sync=\"message\" value=\"王五\"></Checkbox>\n                </div>\n                <div>{{ message }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">失效</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择男女</span>\n                    <Checkbox :picked.sync=\"sex\" disabled :checked=\"true\" value=\"男\"></Checkbox>\n                    <Checkbox :picked.sync=\"sex\" disabled value=\"女\"></Checkbox>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">change事件</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择基友</span>\n                    <Checkbox :picked.sync=\"hobby\" value=\"妹子\" ></Checkbox>\n                    <Checkbox :picked.sync=\"hobby\" value=\"哥哥\" ></Checkbox>\n                    <Checkbox :picked.sync=\"hobby\" value=\"小三\" ></Checkbox>\n                </div>\n                <div>{{ hobby }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义icon</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择</span>\n                    <Checkbox :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"test1\" ></Checkbox>\n                    <Checkbox :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"test2\" ></Checkbox>\n                    <Checkbox :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"test3\" ></Checkbox>\n                </div>\n                <div>{{ hobby }}</div>\n            </div>\n\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Checkbox,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Checkbox,\n        Button\n    },\n    data() {\n        return {\n            message: [],\n            hobby: [],\n            sex: [],\n            test: []\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n</script>\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/checkbox.md","raw":"---\ntitle: Checkbox 多选框\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/inputbox?hidetitle=true\ncategories:\n- Form\n---\n\n\n# Checkbox 多选框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nCheckbox 多选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（checkbox value的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名，默认ion-ios-checkmark），noSelectIcon（未选中icon类名，默认ion-ios-circle-outline），iconStyles（icon样式），id（设置id的值）\n\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <Inputbox :value.sync=\"name\"></Inputbox>\n</template>\n<script>\nimport { Inputbox } from 'mvui';\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nCheckbox Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    picked      | 必填，选中的值               |    String          |       -       |       任意           |\n|    value       | 必填，value的值            |    String          |      -         |  任意                |\n|   checked      | 选填，选中的值             |    Boolean          |      false    |    true，false        |\n|    disabled    | 选填，是否可用             |   Boolean           |     false      |true，false|\n|    selectIcon  | 选填，选中icon 类名        |   String            |  ion-ios-checkmark |   所有icon类名   |\n|    noSelectIcon| 选填， 未选中icon类名      |   String            | ion-ios-circle-outline |  所有icon类名  |\n|    iconStyles  | 选填，icon样式            |   [String,Object]         |     -        |   任意         |\n|    id          | 选填，id值                |   String           |     -     |   任意         |\n\n\nCheckbox Events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    属性发生变化时候触发     |        Array (选中的值)         |\n\n\n\n## 右侧示例代码\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Checkbox</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择姓名</span>\n                    <Checkbox :picked.sync=\"message\" value=\"张三\"></Checkbox>\n                    <Checkbox :picked.sync=\"message\" value=\"李四\"></Checkbox>\n                    <Checkbox :picked.sync=\"message\" value=\"王五\"></Checkbox>\n                </div>\n                <div>{{ message }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">失效</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择男女</span>\n                    <Checkbox :picked.sync=\"sex\" disabled :checked=\"true\" value=\"男\"></Checkbox>\n                    <Checkbox :picked.sync=\"sex\" disabled value=\"女\"></Checkbox>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">change事件</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择基友</span>\n                    <Checkbox :picked.sync=\"hobby\" value=\"妹子\" ></Checkbox>\n                    <Checkbox :picked.sync=\"hobby\" value=\"哥哥\" ></Checkbox>\n                    <Checkbox :picked.sync=\"hobby\" value=\"小三\" ></Checkbox>\n                </div>\n                <div>{{ hobby }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">自定义icon</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择</span>\n                    <Checkbox :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"test1\" ></Checkbox>\n                    <Checkbox :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"test2\" ></Checkbox>\n                    <Checkbox :picked.sync=\"test\" no-select-icon=\"mv-icon-round-add\" select-icon=\"mv-icon-round-add-fill\" value=\"test3\" ></Checkbox>\n                </div>\n                <div>{{ hobby }}</div>\n            </div>\n\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Checkbox,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Checkbox,\n        Button\n    },\n    data() {\n        return {\n            message: [],\n            hobby: [],\n            sex: [],\n            test: []\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n</script>\n\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"checkbox","published":1,"updated":"2016-11-22T07:08:41.000Z","_id":"ciuxtv9fn0002vos6c0xf20x7","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Checkbox-多选框\"><a href=\"#Checkbox-多选框\" class=\"headerlink\" title=\"Checkbox 多选框\"></a>Checkbox 多选框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Checkbox 多选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（checkbox value的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名，默认ion-ios-checkmark），noSelectIcon（未选中icon类名，默认ion-ios-circle-outline），iconStyles（icon样式），id（设置id的值）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Inputbox :value.sync=&quot;name&quot;&gt;&lt;/Inputbox&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Inputbox } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Checkbox Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">picked</td>\n<td style=\"text-align:left\">必填，选中的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">value</td>\n<td style=\"text-align:left\">必填，value的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked</td>\n<td style=\"text-align:left\">选填，选中的值</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否可用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">selectIcon</td>\n<td style=\"text-align:left\">选填，选中icon 类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ion-ios-checkmark</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">noSelectIcon</td>\n<td style=\"text-align:left\">选填， 未选中icon类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ion-ios-circle-outline</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyles</td>\n<td style=\"text-align:left\">选填，icon样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">id</td>\n<td style=\"text-align:left\">选填，id值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Checkbox Events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">属性发生变化时候触发</td>\n<td style=\"text-align:left\">Array (选中的值)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Checkbox&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择姓名&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;message&quot; value=&quot;张三&quot;&gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;message&quot; value=&quot;李四&quot;&gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;message&quot; value=&quot;王五&quot;&gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ message }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;失效&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择男女&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;sex&quot; disabled :checked=&quot;true&quot; value=&quot;男&quot;&gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;sex&quot; disabled value=&quot;女&quot;&gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;change事件&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择基友&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;hobby&quot; value=&quot;妹子&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;hobby&quot; value=&quot;哥哥&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;hobby&quot; value=&quot;小三&quot; &gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ hobby }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义icon&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;test1&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;test2&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;test3&quot; &gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ hobby }}&lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Checkbox,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Checkbox,\n        Button\n    },\n    data() {\n        return {\n            message: [],\n            hobby: [],\n            sex: [],\n            test: []\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Checkbox-多选框\"><a href=\"#Checkbox-多选框\" class=\"headerlink\" title=\"Checkbox 多选框\"></a>Checkbox 多选框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Checkbox 多选框，目前不支持验证，可以自定义通用属性class和style，以及picked（选中的值，需要加sync），value（checkbox value的值），checked（是否选中），disabled（是否可以用），selectIcon（选中icon类名，默认ion-ios-checkmark），noSelectIcon（未选中icon类名，默认ion-ios-circle-outline），iconStyles（icon样式），id（设置id的值）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Inputbox :value.sync=&quot;name&quot;&gt;&lt;/Inputbox&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Inputbox } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Inputbox,\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Checkbox Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">picked</td>\n<td style=\"text-align:left\">必填，选中的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">value</td>\n<td style=\"text-align:left\">必填，value的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked</td>\n<td style=\"text-align:left\">选填，选中的值</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否可用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">selectIcon</td>\n<td style=\"text-align:left\">选填，选中icon 类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ion-ios-checkmark</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">noSelectIcon</td>\n<td style=\"text-align:left\">选填， 未选中icon类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ion-ios-circle-outline</td>\n<td style=\"text-align:left\">所有icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">iconStyles</td>\n<td style=\"text-align:left\">选填，icon样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">id</td>\n<td style=\"text-align:left\">选填，id值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Checkbox Events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">属性发生变化时候触发</td>\n<td style=\"text-align:left\">Array (选中的值)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Checkbox&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择姓名&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;message&quot; value=&quot;张三&quot;&gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;message&quot; value=&quot;李四&quot;&gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;message&quot; value=&quot;王五&quot;&gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ message }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;失效&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择男女&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;sex&quot; disabled :checked=&quot;true&quot; value=&quot;男&quot;&gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;sex&quot; disabled value=&quot;女&quot;&gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;change事件&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择基友&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;hobby&quot; value=&quot;妹子&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;hobby&quot; value=&quot;哥哥&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;hobby&quot; value=&quot;小三&quot; &gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ hobby }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;自定义icon&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择&lt;/span&gt;\n                    &lt;Checkbox :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;test1&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;test2&quot; &gt;&lt;/Checkbox&gt;\n                    &lt;Checkbox :picked.sync=&quot;test&quot; no-select-icon=&quot;mv-icon-round-add&quot; select-icon=&quot;mv-icon-round-add-fill&quot; value=&quot;test3&quot; &gt;&lt;/Checkbox&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ hobby }}&lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Checkbox,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Checkbox,\n        Button\n    },\n    data() {\n        return {\n            message: [],\n            hobby: [],\n            sex: [],\n            test: []\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Selector 选择框","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Selector 选择框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nSelector 输入框，目前不支持验证，可以自定义通用属性class和style，以及selected（selected选中的值，需要加sync），placeholder（placeholder），options（option的值），disabled（disabled是否可用），arrowIcon（选择箭头icon），iconStyle（icon样式）\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <Selector :selected.sync=\"selected\" :options=\"option\"></Selector>\n</template>\n<script>\nimport { Selector } from 'mvui';\nexport default {\n    components: {\n        Selector,\n    },\n    data(){\n        return {\n            selected: \"2\",\n            option: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ]\n        }\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nSelector props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    selected   | 必填，选中的值               |    String          |       -       |     任意             |\n|   placeholder | 选填，placeholder          |    String          |      -          |    任意        |\n|    options    | 必填，结构[{label:'',value:''}]|    Array          |      -         |  任意                |\n|    disabled   | 选填，是否失效              |   Boolean           |     false     |      true，false|\n|    arrow-icon   | 选填，图标class          |   String           | mv-icon-arrow-bottom|     任何icon类名   |\n|    icon-style   | 选填，icon样式          |   [String, Object]   |        -        |     任何icon样式   |\n\n\n\n\nSelector Events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    属性发生变化时候触发     |     String(选中的值)|\n\n\n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Selector</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"selected\" :options=\"option\"></Selector>\n                </div>\n                <div>{{ selected }}</div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">失效</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"testSelected\" :disabled=\"true\" placeholder=\"选择省\" :options=\"testOption\"></Selector>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">更改Icon</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"testSelected\" placeholder=\"选择省\" arrow-icon=\"mv-icon-caret-bottom\" :options=\"testOption\"></Selector>\n                </div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">change事件</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"changeSelect\" @on-change=\"change\" placeholder=\"选择省\" arrow-icon=\"mv-icon-caret-bottom\" :options=\"changeOption\"></Selector>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Selector,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Selector,\n        Button\n    },\n    data() {\n        return {\n            selected: \"2\",\n            option: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ],\n            testSelected: '',\n            testOption: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ],\n            changeSelect: '',\n            changeOption: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ]\n\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n</script>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","source":"_posts/selector.md","raw":"---\ntitle: Selector 选择框\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/selector?hidetitle=true\ncategories:\n- Form\n---\n\n\n# Selector 选择框\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nSelector 输入框，目前不支持验证，可以自定义通用属性class和style，以及selected（selected选中的值，需要加sync），placeholder（placeholder），options（option的值），disabled（disabled是否可用），arrowIcon（选择箭头icon），iconStyle（icon样式）\n\n            \n\n## 如何使用\n\n``` html\n<template>\n    <Selector :selected.sync=\"selected\" :options=\"option\"></Selector>\n</template>\n<script>\nimport { Selector } from 'mvui';\nexport default {\n    components: {\n        Selector,\n    },\n    data(){\n        return {\n            selected: \"2\",\n            option: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ]\n        }\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nSelector props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    selected   | 必填，选中的值               |    String          |       -       |     任意             |\n|   placeholder | 选填，placeholder          |    String          |      -          |    任意        |\n|    options    | 必填，结构[{label:'',value:''}]|    Array          |      -         |  任意                |\n|    disabled   | 选填，是否失效              |   Boolean           |     false     |      true，false|\n|    arrow-icon   | 选填，图标class          |   String           | mv-icon-arrow-bottom|     任何icon类名   |\n|    icon-style   | 选填，icon样式          |   [String, Object]   |        -        |     任何icon样式   |\n\n\n\n\nSelector Events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    属性发生变化时候触发     |     String(选中的值)|\n\n\n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Selector</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"selected\" :options=\"option\"></Selector>\n                </div>\n                <div>{{ selected }}</div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">失效</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"testSelected\" :disabled=\"true\" placeholder=\"选择省\" :options=\"testOption\"></Selector>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">更改Icon</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"testSelected\" placeholder=\"选择省\" arrow-icon=\"mv-icon-caret-bottom\" :options=\"testOption\"></Selector>\n                </div>\n            </div>\n\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">change事件</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择省</span>\n                    <Selector :selected.sync=\"changeSelect\" @on-change=\"change\" placeholder=\"选择省\" arrow-icon=\"mv-icon-caret-bottom\" :options=\"changeOption\"></Selector>\n                </div>\n            </div>\n\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Selector,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Selector,\n        Button\n    },\n    data() {\n        return {\n            selected: \"2\",\n            option: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ],\n            testSelected: '',\n            testOption: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ],\n            changeSelect: '',\n            changeOption: [\n                {\n                    label: '北京',\n                    value: '1'\n                },\n                {\n                    label: '南京',\n                    value: '2',\n                }\n            ]\n\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n</script>\n\n```\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n","slug":"selector","published":1,"updated":"2016-11-22T07:08:51.000Z","_id":"ciuxtvjie0003vos6mey4cgcl","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Selector-选择框\"><a href=\"#Selector-选择框\" class=\"headerlink\" title=\"Selector 选择框\"></a>Selector 选择框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Selector 输入框，目前不支持验证，可以自定义通用属性class和style，以及selected（selected选中的值，需要加sync），placeholder（placeholder），options（option的值），disabled（disabled是否可用），arrowIcon（选择箭头icon），iconStyle（icon样式）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Selector :selected.sync=&quot;selected&quot; :options=&quot;option&quot;&gt;&lt;/Selector&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Selector } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Selector,\n    },\n    data(){\n        return {\n            selected: &quot;2&quot;,\n            option: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ]\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Selector props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">selected</td>\n<td style=\"text-align:left\">必填，选中的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">placeholder</td>\n<td style=\"text-align:left\">选填，placeholder</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">options</td>\n<td style=\"text-align:left\">必填，结构[{label:’’,value:’’}]</td>\n<td style=\"text-align:left\">Array</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否失效</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">arrow-icon</td>\n<td style=\"text-align:left\">选填，图标class</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-arrow-bottom</td>\n<td style=\"text-align:left\">任何icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">icon-style</td>\n<td style=\"text-align:left\">选填，icon样式</td>\n<td style=\"text-align:left\">[String, Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任何icon样式</td>\n</tr>\n</tbody>\n</table>\n<p>Selector Events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">属性发生变化时候触发</td>\n<td style=\"text-align:left\">String(选中的值)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Selector&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;selected&quot; :options=&quot;option&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected }}&lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;失效&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;testSelected&quot; :disabled=&quot;true&quot; placeholder=&quot;选择省&quot; :options=&quot;testOption&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;更改Icon&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;testSelected&quot; placeholder=&quot;选择省&quot; arrow-icon=&quot;mv-icon-caret-bottom&quot; :options=&quot;testOption&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;change事件&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;changeSelect&quot; @on-change=&quot;change&quot; placeholder=&quot;选择省&quot; arrow-icon=&quot;mv-icon-caret-bottom&quot; :options=&quot;changeOption&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Selector,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Selector,\n        Button\n    },\n    data() {\n        return {\n            selected: &quot;2&quot;,\n            option: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ],\n            testSelected: &#39;&#39;,\n            testOption: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ],\n            changeSelect: &#39;&#39;,\n            changeOption: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ]\n\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Selector-选择框\"><a href=\"#Selector-选择框\" class=\"headerlink\" title=\"Selector 选择框\"></a>Selector 选择框</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Selector 输入框，目前不支持验证，可以自定义通用属性class和style，以及selected（selected选中的值，需要加sync），placeholder（placeholder），options（option的值），disabled（disabled是否可用），arrowIcon（选择箭头icon），iconStyle（icon样式）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Selector :selected.sync=&quot;selected&quot; :options=&quot;option&quot;&gt;&lt;/Selector&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Selector } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Selector,\n    },\n    data(){\n        return {\n            selected: &quot;2&quot;,\n            option: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ]\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Selector props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">selected</td>\n<td style=\"text-align:left\">必填，选中的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">placeholder</td>\n<td style=\"text-align:left\">选填，placeholder</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">options</td>\n<td style=\"text-align:left\">必填，结构[{label:’’,value:’’}]</td>\n<td style=\"text-align:left\">Array</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否失效</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true，false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">arrow-icon</td>\n<td style=\"text-align:left\">选填，图标class</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">mv-icon-arrow-bottom</td>\n<td style=\"text-align:left\">任何icon类名</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">icon-style</td>\n<td style=\"text-align:left\">选填，icon样式</td>\n<td style=\"text-align:left\">[String, Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任何icon样式</td>\n</tr>\n</tbody>\n</table>\n<p>Selector Events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">属性发生变化时候触发</td>\n<td style=\"text-align:left\">String(选中的值)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Selector&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;selected&quot; :options=&quot;option&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected }}&lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;失效&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;testSelected&quot; :disabled=&quot;true&quot; placeholder=&quot;选择省&quot; :options=&quot;testOption&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;更改Icon&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;testSelected&quot; placeholder=&quot;选择省&quot; arrow-icon=&quot;mv-icon-caret-bottom&quot; :options=&quot;testOption&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;change事件&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择省&lt;/span&gt;\n                    &lt;Selector :selected.sync=&quot;changeSelect&quot; @on-change=&quot;change&quot; placeholder=&quot;选择省&quot; arrow-icon=&quot;mv-icon-caret-bottom&quot; :options=&quot;changeOption&quot;&gt;&lt;/Selector&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Selector,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Selector,\n        Button\n    },\n    data() {\n        return {\n            selected: &quot;2&quot;,\n            option: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ],\n            testSelected: &#39;&#39;,\n            testOption: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ],\n            changeSelect: &#39;&#39;,\n            changeOption: [\n                {\n                    label: &#39;北京&#39;,\n                    value: &#39;1&#39;\n                },\n                {\n                    label: &#39;南京&#39;,\n                    value: &#39;2&#39;,\n                }\n            ]\n\n        }\n    },\n    methods: {\n        change(val){\n            console.dir(val);\n            debugger;\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Switch 开关","date":"2016-10-19T07:25:24.000Z","_content":"\n\n# Switch 开关\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nSwitch 开关，目前不支持验证，可以自定义通用属性class和style，以及checked（开关，是否开关），disabled（是否可用）\n\n\n            \n## 如何使用\n\n``` html\n<template>\n    <Switch :checked.sync=\"selected\"></Switch>\n</template>\n<script>\nimport { Switch } from 'mvui';\nexport default {\n    components: {\n        Switch,\n    },\n    data(){\n        return {\n            selected: false\n        }\n    }\n} \n</script>\n```\n\n\n## API\n\nSwitch Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    checked      | 必填，设置开关              |    Boolean       |       false       |       true | false    |\n|    disabled     | 选填，是否可用             |    Boolean          |      false        |  true | false     |\n\n\nSwitch Slot\n\n|     name名称       | 说明                       \n| :------------- |:-------------------------- \n|    open      | 选填，开\n|    close      | 选填，关\n\n\n\n \n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Switch</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">slot显示</div>\n                <div class=\"wrapper-area-content\">\n                    <span>开关</span>\n                    <Switch :checked.sync=\"selected1\">\n                        <span slot=\"open\">开</span>\n                        <span slot=\"close\">关</span>\n                    </Switch>\n                </div>\n                <div>{{ selected1 }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择姓名</span>\n                    <Switch :checked.sync=\"selected2\"></Switch>\n                </div>\n                <div>{{ selected2 }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">是否可用</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择姓名</span>\n                    <Switch :checked.sync=\"selected3\" :disabled=\"true\"></Switch>\n                </div>\n                <div>{{ selected3 }}</div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Switch,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Switch,\n        Button\n    },\n    data() {\n        return {\n            selected1: true,\n            selected2: true,\n            selected3: true\n        }\n    }\n}\n</script>\n```\n\n\n","source":"_posts/switch.md","raw":"---\ntitle: Switch 开关\ndate: 2016-10-19 15:25:24\ntags: http://localhost:8080/#!/switch?hidetitle=true\ncategories:\n- Form\n---\n\n\n# Switch 开关\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nSwitch 开关，目前不支持验证，可以自定义通用属性class和style，以及checked（开关，是否开关），disabled（是否可用）\n\n\n            \n## 如何使用\n\n``` html\n<template>\n    <Switch :checked.sync=\"selected\"></Switch>\n</template>\n<script>\nimport { Switch } from 'mvui';\nexport default {\n    components: {\n        Switch,\n    },\n    data(){\n        return {\n            selected: false\n        }\n    }\n} \n</script>\n```\n\n\n## API\n\nSwitch Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    checked      | 必填，设置开关              |    Boolean       |       false       |       true | false    |\n|    disabled     | 选填，是否可用             |    Boolean          |      false        |  true | false     |\n\n\nSwitch Slot\n\n|     name名称       | 说明                       \n| :------------- |:-------------------------- \n|    open      | 选填，开\n|    close      | 选填，关\n\n\n\n \n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Switch</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">slot显示</div>\n                <div class=\"wrapper-area-content\">\n                    <span>开关</span>\n                    <Switch :checked.sync=\"selected1\">\n                        <span slot=\"open\">开</span>\n                        <span slot=\"close\">关</span>\n                    </Switch>\n                </div>\n                <div>{{ selected1 }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择姓名</span>\n                    <Switch :checked.sync=\"selected2\"></Switch>\n                </div>\n                <div>{{ selected2 }}</div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">是否可用</div>\n                <div class=\"wrapper-area-content\">\n                    <span>选择姓名</span>\n                    <Switch :checked.sync=\"selected3\" :disabled=\"true\"></Switch>\n                </div>\n                <div>{{ selected3 }}</div>\n            </div>\n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Switch,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Switch,\n        Button\n    },\n    data() {\n        return {\n            selected1: true,\n            selected2: true,\n            selected3: true\n        }\n    }\n}\n</script>\n```\n\n\n","slug":"switch","published":1,"updated":"2016-11-23T01:58:12.000Z","_id":"ciuxtvmsi0004vos63w133jti","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Switch-开关\"><a href=\"#Switch-开关\" class=\"headerlink\" title=\"Switch 开关\"></a>Switch 开关</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Switch 开关，目前不支持验证，可以自定义通用属性class和style，以及checked（开关，是否开关），disabled（是否可用）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Switch :checked.sync=&quot;selected&quot;&gt;&lt;/Switch&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Switch } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Switch,\n    },\n    data(){\n        return {\n            selected: false\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Switch Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked</td>\n<td style=\"text-align:left\">必填，设置开关</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否可用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>Switch Slot</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name名称</th>\n<th style=\"text-align:left\">说明                       </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">open</td>\n<td style=\"text-align:left\">选填，开</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">close</td>\n<td style=\"text-align:left\">选填，关</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Switch&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;slot显示&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;开关&lt;/span&gt;\n                    &lt;Switch :checked.sync=&quot;selected1&quot;&gt;\n                        &lt;span slot=&quot;open&quot;&gt;开&lt;/span&gt;\n                        &lt;span slot=&quot;close&quot;&gt;关&lt;/span&gt;\n                    &lt;/Switch&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected1 }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择姓名&lt;/span&gt;\n                    &lt;Switch :checked.sync=&quot;selected2&quot;&gt;&lt;/Switch&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected2 }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;是否可用&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择姓名&lt;/span&gt;\n                    &lt;Switch :checked.sync=&quot;selected3&quot; :disabled=&quot;true&quot;&gt;&lt;/Switch&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected3 }}&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Switch,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Switch,\n        Button\n    },\n    data() {\n        return {\n            selected1: true,\n            selected2: true,\n            selected3: true\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Switch-开关\"><a href=\"#Switch-开关\" class=\"headerlink\" title=\"Switch 开关\"></a>Switch 开关</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Switch 开关，目前不支持验证，可以自定义通用属性class和style，以及checked（开关，是否开关），disabled（是否可用）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;Switch :checked.sync=&quot;selected&quot;&gt;&lt;/Switch&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Switch } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Switch,\n    },\n    data(){\n        return {\n            selected: false\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Switch Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">checked</td>\n<td style=\"text-align:left\">必填，设置开关</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否可用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td>false</td>\n</tr>\n</tbody>\n</table>\n<p>Switch Slot</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name名称</th>\n<th style=\"text-align:left\">说明                       </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">open</td>\n<td style=\"text-align:left\">选填，开</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">close</td>\n<td style=\"text-align:left\">选填，关</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Switch&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;slot显示&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;开关&lt;/span&gt;\n                    &lt;Switch :checked.sync=&quot;selected1&quot;&gt;\n                        &lt;span slot=&quot;open&quot;&gt;开&lt;/span&gt;\n                        &lt;span slot=&quot;close&quot;&gt;关&lt;/span&gt;\n                    &lt;/Switch&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected1 }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择姓名&lt;/span&gt;\n                    &lt;Switch :checked.sync=&quot;selected2&quot;&gt;&lt;/Switch&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected2 }}&lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;是否可用&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;span&gt;选择姓名&lt;/span&gt;\n                    &lt;Switch :checked.sync=&quot;selected3&quot; :disabled=&quot;true&quot;&gt;&lt;/Switch&gt;\n                &lt;/div&gt;\n                &lt;div&gt;{{ selected3 }}&lt;/div&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Switch,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Switch,\n        Button\n    },\n    data() {\n        return {\n            selected1: true,\n            selected2: true,\n            selected3: true\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n"},{"title":"Accordion 折叠面板","date":"2016-10-19T07:25:42.000Z","_content":"\n\n# Accordion 折叠面板\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nAccordion 折叠面板，需要有 Panel共同完成\nAccordion 支持 class 、style 、accordion等三个属性\nPanel 支持 class 、 style 、 open 、 key等属性\n            \n\n## 如何使用\n\n``` html\n<template>\n    <div>\n        <Accordion>\n            <Panel>\n                <div slot=\"title\">测试啦啦啦</div>\n              她坦白了我们所虚伪的 她单纯了我们所复杂的\n              五年以来…\n              5年的等待，是个漫长也是耗损的过程。\n              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n              是我们唯一相信且期待杨乃文的理由。\n            </Panel>\n            <Panel>\n                <div slot=\"title\">测试啦啦啦</div>\n                  她坦白了我们所虚伪的 她单纯了我们所复杂的\n                  五年以来…\n                  5年的等待，是个漫长也是耗损的过程。\n                  看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                  她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                  这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                  是我们唯一相信且期待杨乃文的理由。\n            </Panel>\n        </Accordion>\n    </div>\n</template>\n<script>\nimport { Accordion,Panel } from 'mvui';\nexport default {\n    components: {\n        Accordion,\n        Panel\n    },\n    data(){\n        return {\n            message: ''\n        }\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nAccordion Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    accordion      | 选填，是否显示手风琴效果   |    Boolean          |       false |       任意           |\n\n\nAccordion Slot\n\n|     name 名称      | 说明                     \n| :------------- |:-------------------------- \n|     Panel           |    需要panel\n\n\n\n\nPanel Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    open      | 必填，是否展开               |    Boolean          |       false   | true | false           |\n|    key       | 必填，key标示的值            |    String          |      -         |  任意                |\n\n\nPanel Slot\n\n|     name 名称      | 说明                     \n| :------------- |:-------------------------- \n|     title           |    title\n|     默认           |    内容\n\n\n\n\n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Accordion</Hometitle>\n        <div class=\"wrapper-example wrapper-example-accordion\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <Accordion>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                    </Accordion>\n                </div>\n            </div>\n             <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">accordion</div>\n                <div class=\"wrapper-area-content\">\n                    <Accordion accordion>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                    </Accordion>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认打开</div>\n                <div class=\"wrapper-area-content\">\n                    <Accordion accordion>\n                        <Panel :open=\"true\">\n                            <div slot=\"title\">测试啦啦啦</div>\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                    </Accordion>\n                </div>\n            </div>\n            \n            \n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Accordion,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Panel,\n        Accordion,\n        Button\n    },\n    data() {\n        return {\n            selected: true,\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n    .wrapper-example-accordion .wrapper-area-content,.wrapper-example-accordion .wrapper-area{\n        background: transparent;\n    }\n</style>\n\n```\n","source":"_posts/accordion.md","raw":"---\ntitle: Accordion 折叠面板\ndate: 2016-10-19 15:25:42\ntags: http://localhost:8080/#!/accordion?hidetitle=true\ncategories:\n- View\n---\n\n\n# Accordion 折叠面板\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nAccordion 折叠面板，需要有 Panel共同完成\nAccordion 支持 class 、style 、accordion等三个属性\nPanel 支持 class 、 style 、 open 、 key等属性\n            \n\n## 如何使用\n\n``` html\n<template>\n    <div>\n        <Accordion>\n            <Panel>\n                <div slot=\"title\">测试啦啦啦</div>\n              她坦白了我们所虚伪的 她单纯了我们所复杂的\n              五年以来…\n              5年的等待，是个漫长也是耗损的过程。\n              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n              是我们唯一相信且期待杨乃文的理由。\n            </Panel>\n            <Panel>\n                <div slot=\"title\">测试啦啦啦</div>\n                  她坦白了我们所虚伪的 她单纯了我们所复杂的\n                  五年以来…\n                  5年的等待，是个漫长也是耗损的过程。\n                  看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                  她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                  这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                  是我们唯一相信且期待杨乃文的理由。\n            </Panel>\n        </Accordion>\n    </div>\n</template>\n<script>\nimport { Accordion,Panel } from 'mvui';\nexport default {\n    components: {\n        Accordion,\n        Panel\n    },\n    data(){\n        return {\n            message: ''\n        }\n    }\n} \n</script>\n```\n\n\n\n\n## API\n\nAccordion Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    accordion      | 选填，是否显示手风琴效果   |    Boolean          |       false |       任意           |\n\n\nAccordion Slot\n\n|     name 名称      | 说明                     \n| :------------- |:-------------------------- \n|     Panel           |    需要panel\n\n\n\n\nPanel Props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    open      | 必填，是否展开               |    Boolean          |       false   | true | false           |\n|    key       | 必填，key标示的值            |    String          |      -         |  任意                |\n\n\nPanel Slot\n\n|     name 名称      | 说明                     \n| :------------- |:-------------------------- \n|     title           |    title\n|     默认           |    内容\n\n\n\n\n\n## 右侧示例代码\n\n\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Accordion</Hometitle>\n        <div class=\"wrapper-example wrapper-example-accordion\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认</div>\n                <div class=\"wrapper-area-content\">\n                    <Accordion>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                    </Accordion>\n                </div>\n            </div>\n             <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">accordion</div>\n                <div class=\"wrapper-area-content\">\n                    <Accordion accordion>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                    </Accordion>\n                </div>\n            </div>\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">默认打开</div>\n                <div class=\"wrapper-area-content\">\n                    <Accordion accordion>\n                        <Panel :open=\"true\">\n                            <div slot=\"title\">测试啦啦啦</div>\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                        <Panel>\n                            <div slot=\"title\">测试啦啦啦</div>\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        </Panel>\n                    </Accordion>\n                </div>\n            </div>\n            \n            \n        </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Accordion,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Panel,\n        Accordion,\n        Button\n    },\n    data() {\n        return {\n            selected: true,\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n    .wrapper-example-accordion .wrapper-area-content,.wrapper-example-accordion .wrapper-area{\n        background: transparent;\n    }\n</style>\n\n```\n","slug":"accordion","published":1,"updated":"2016-11-23T00:53:41.000Z","_id":"civ32u5j50000brs68tgimcil","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Accordion-折叠面板\"><a href=\"#Accordion-折叠面板\" class=\"headerlink\" title=\"Accordion 折叠面板\"></a>Accordion 折叠面板</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Accordion 折叠面板，需要有 Panel共同完成<br>Accordion 支持 class 、style 、accordion等三个属性<br>Panel 支持 class 、 style 、 open 、 key等属性</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;Accordion&gt;\n            &lt;Panel&gt;\n                &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n              她坦白了我们所虚伪的 她单纯了我们所复杂的\n              五年以来…\n              5年的等待，是个漫长也是耗损的过程。\n              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n              是我们唯一相信且期待杨乃文的理由。\n            &lt;/Panel&gt;\n            &lt;Panel&gt;\n                &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                  她坦白了我们所虚伪的 她单纯了我们所复杂的\n                  五年以来…\n                  5年的等待，是个漫长也是耗损的过程。\n                  看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                  她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                  这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                  是我们唯一相信且期待杨乃文的理由。\n            &lt;/Panel&gt;\n        &lt;/Accordion&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Accordion,Panel } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Accordion,\n        Panel\n    },\n    data(){\n        return {\n            message: &#39;&#39;\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Accordion Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">accordion</td>\n<td style=\"text-align:left\">选填，是否显示手风琴效果</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Accordion Slot</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name 名称</th>\n<th style=\"text-align:left\">说明                     </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Panel</td>\n<td style=\"text-align:left\">需要panel</td>\n</tr>\n</tbody>\n</table>\n<p>Panel Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">open</td>\n<td style=\"text-align:left\">必填，是否展开</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">key</td>\n<td style=\"text-align:left\">必填，key标示的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Panel Slot</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name 名称</th>\n<th style=\"text-align:left\">说明                     </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">title</td>\n<td style=\"text-align:left\">title</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">默认</td>\n<td style=\"text-align:left\">内容</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Accordion&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-accordion&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Accordion&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                    &lt;/Accordion&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n             &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;accordion&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Accordion accordion&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                    &lt;/Accordion&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认打开&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Accordion accordion&gt;\n                        &lt;Panel :open=&quot;true&quot;&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                    &lt;/Accordion&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Accordion,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Panel,\n        Accordion,\n        Button\n    },\n    data() {\n        return {\n            selected: true,\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .wrapper-example-accordion .wrapper-area-content,.wrapper-example-accordion .wrapper-area{\n        background: transparent;\n    }\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Accordion-折叠面板\"><a href=\"#Accordion-折叠面板\" class=\"headerlink\" title=\"Accordion 折叠面板\"></a>Accordion 折叠面板</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Accordion 折叠面板，需要有 Panel共同完成<br>Accordion 支持 class 、style 、accordion等三个属性<br>Panel 支持 class 、 style 、 open 、 key等属性</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div&gt;\n        &lt;Accordion&gt;\n            &lt;Panel&gt;\n                &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n              她坦白了我们所虚伪的 她单纯了我们所复杂的\n              五年以来…\n              5年的等待，是个漫长也是耗损的过程。\n              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n              是我们唯一相信且期待杨乃文的理由。\n            &lt;/Panel&gt;\n            &lt;Panel&gt;\n                &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                  她坦白了我们所虚伪的 她单纯了我们所复杂的\n                  五年以来…\n                  5年的等待，是个漫长也是耗损的过程。\n                  看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                  她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                  这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                  是我们唯一相信且期待杨乃文的理由。\n            &lt;/Panel&gt;\n        &lt;/Accordion&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport { Accordion,Panel } from &#39;mvui&#39;;\nexport default {\n    components: {\n        Accordion,\n        Panel\n    },\n    data(){\n        return {\n            message: &#39;&#39;\n        }\n    }\n} \n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Accordion Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">accordion</td>\n<td style=\"text-align:left\">选填，是否显示手风琴效果</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Accordion Slot</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name 名称</th>\n<th style=\"text-align:left\">说明                     </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">Panel</td>\n<td style=\"text-align:left\">需要panel</td>\n</tr>\n</tbody>\n</table>\n<p>Panel Props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">open</td>\n<td style=\"text-align:left\">必填，是否展开</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true</td>\n<td>false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">key</td>\n<td style=\"text-align:left\">必填，key标示的值</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n</tbody>\n</table>\n<p>Panel Slot</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">name 名称</th>\n<th style=\"text-align:left\">说明                     </th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">title</td>\n<td style=\"text-align:left\">title</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">默认</td>\n<td style=\"text-align:left\">内容</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Accordion&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-accordion&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Accordion&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                    &lt;/Accordion&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n             &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;accordion&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Accordion accordion&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                    &lt;/Accordion&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;默认打开&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Accordion accordion&gt;\n                        &lt;Panel :open=&quot;true&quot;&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                          她坦白了我们所虚伪的 她单纯了我们所复杂的\n                          五年以来…\n                          5年的等待，是个漫长也是耗损的过程。\n                          看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                          她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                          这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                          是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                        &lt;Panel&gt;\n                            &lt;div slot=&quot;title&quot;&gt;测试啦啦啦&lt;/div&gt;\n                              她坦白了我们所虚伪的 她单纯了我们所复杂的\n                              五年以来…\n                              5年的等待，是个漫长也是耗损的过程。\n                              看尽乐坛芭比娃娃的甜美面具，「性格」这两个字，似乎快要消失！\n                              她的声音，她的个性，象徵著无可取代的高傲、独特的姿态，\n                              这样一股充满灵魂的音乐、沉寂而刚苏醒的真声音，\n                              是我们唯一相信且期待杨乃文的理由。\n                        &lt;/Panel&gt;\n                    &lt;/Accordion&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n\n        &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Accordion,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Panel,\n        Accordion,\n        Button\n    },\n    data() {\n        return {\n            selected: true,\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n    .wrapper-example-accordion .wrapper-area-content,.wrapper-example-accordion .wrapper-area{\n        background: transparent;\n    }\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Scroll 滚动条","date":"2016-10-19T07:25:57.000Z","_content":"\n\n# Scroll 滚动条\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nScroll 可以自定义通用属性class和style，以及size（滚动距离），direction（滚动方式y轴|x轴），isMomentum（惯性）\n，isBounce（超出边界是否可拖动），bounceTime（回弹时间），preventDefault（是否阻止默认行为），disabled（是否禁用），\npullRefresh（下拉刷新），refreshStatus（刷新状态），isRefresh（是否从新计算）\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <div>\n        <Scroll>\n            <ul>\n                <li>滚动测试</li>\n                <li>滚动测试</li>\n                <li>滚动测试</li>\n                <li>滚动测试</li>\n            </ul>\n        </Scroll>\n    </div>\n</template>\n<script>\n    import { Scroll } from 'mvui';\n    export default{   \n        components: { \n            Scroll,\n        }\n    }\n</script>\n```\n\n\n## API\n\n\nScroll props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    size       | 选填，滚动的距离              |    Number         |     0         |    任意整数           |\n|    direction  | 选填，滚动方式               |    String          |     y         |    x,y               |\n|    is-momentum| 选填，是否支持惯性           |    Boolean          |     true     |    true,false        |\n|    is-bounce  | 选填，超出边界是否还能拖动    |    Boolean          |     true     |    true,false        |\n|    bounce-time | 选填，回弹时间              |    Number          |     350         |    任意整数        |\n|    prevent-default| 选填，是否阻止默认滚动事件 |    Boolean         |     true     |    true,false        |\n|    disabled    | 选填，是否禁用              |    Boolean         |     false    |    true,false        |\n|    pull-refresh | 选填，是使用下拉刷新         |    Boolean         |     false    |    true,false        |\n|    refresh-status | 选填，刷新状态         |    String         |     ready     | ready,move,loading       |\n|    is-refresh | 选填，刷新状态         |    Boolean         |     false            |    true,false        |\n    \n\n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Scroll</Hometitle>\n        <div class=\"wrapper-example wrapper-example-scroll\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Scroll>\n                    <ul>\n                        <li>Pretty row 1</li>\n                        <li>Pretty row 2</li>\n                        <li>Pretty row 3</li>\n                        <li>Pretty row 4</li>\n                        <li>Pretty row 5</li>\n                        <li>Pretty row 6</li>\n                        <li>Pretty row 7</li>\n                        <li>Pretty row 8</li>\n                        <li>Pretty row 9</li>\n                        <li>Pretty row 10</li>\n                        <li>Pretty row 11</li>\n                        <li>Pretty row 12</li>\n                        <li>Pretty row 13</li>\n                        <li>Pretty row 14</li>\n                        <li>Pretty row 15</li>\n                        <li>Pretty row 16</li>\n                        <li>Pretty row 17</li>\n                        <li>Pretty row 18</li>\n                        <li>Pretty row 19</li>\n                        <li>Pretty row 20</li>\n                        <li>Pretty row 21</li>\n                        <li>Pretty row 22</li>\n                        <li>Pretty row 23</li>\n                        <li>Pretty row 24</li>\n                        <li>Pretty row 25</li>\n                        <li>Pretty row 26</li>\n                        <li>Pretty row 27</li>\n                        <li>Pretty row 28</li>\n                        <li>Pretty row 29</li>\n                        <li>Pretty row 30</li>\n                        <li>Pretty row 31</li>\n                        <li>Pretty row 32</li>\n                        <li>Pretty row 33</li>\n                        <li>Pretty row 34</li>\n                        <li>Pretty row 35</li>\n                        <li>Pretty row 36</li>\n                        <li>Pretty row 37</li>\n                        <li>Pretty row 38</li>\n                        <li>Pretty row 39</li>\n                        <li>Pretty row 40</li>\n                        <li>Pretty row 41</li>\n                        <li>Pretty row 42</li>\n                        <li>Pretty row 43</li>\n                        <li>Pretty row 44</li>\n                        <li>Pretty row 45</li>\n                        <li>Pretty row 46</li>\n                        <li>Pretty row 47</li>\n                        <li>Pretty row 48</li>\n                        <li>Pretty row 49</li>\n                        <li>Pretty row 50</li>\n                    </ul>\n                </Scroll>\n            </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Button\n    }\n}\n</script>\n<style>\n    .wrapper-example-scroll{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        padding-top: 0.45rem;\n        top: 0px;\n        left: 0px;\n        border-top: solid 1px #ccc;\n        box-sizing: border-box;\n    }\n    .wrapper-example-scroll .wrapper-area-content{\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n    .wrapper-example-scroll .wrapper-area-content li{\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-example-scroll .wrapper-area-content li: last-child {\n        border-bottom-width: 0px;\n    }\n    .wrapper-example-scroll .wrapper-area-content .wrapper-area{\n        padding: 0px;\n        margin: 0px;\n    }\n</style>\n\n```\n\n\n","source":"_posts/scroll.md","raw":"---\ntitle: Scroll 滚动条\ndate: 2016-10-19 15:25:57\ntags: http://localhost:8080/#!/scroll?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Scroll 滚动条\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nScroll 可以自定义通用属性class和style，以及size（滚动距离），direction（滚动方式y轴|x轴），isMomentum（惯性）\n，isBounce（超出边界是否可拖动），bounceTime（回弹时间），preventDefault（是否阻止默认行为），disabled（是否禁用），\npullRefresh（下拉刷新），refreshStatus（刷新状态），isRefresh（是否从新计算）\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <div>\n        <Scroll>\n            <ul>\n                <li>滚动测试</li>\n                <li>滚动测试</li>\n                <li>滚动测试</li>\n                <li>滚动测试</li>\n            </ul>\n        </Scroll>\n    </div>\n</template>\n<script>\n    import { Scroll } from 'mvui';\n    export default{   \n        components: { \n            Scroll,\n        }\n    }\n</script>\n```\n\n\n## API\n\n\nScroll props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    size       | 选填，滚动的距离              |    Number         |     0         |    任意整数           |\n|    direction  | 选填，滚动方式               |    String          |     y         |    x,y               |\n|    is-momentum| 选填，是否支持惯性           |    Boolean          |     true     |    true,false        |\n|    is-bounce  | 选填，超出边界是否还能拖动    |    Boolean          |     true     |    true,false        |\n|    bounce-time | 选填，回弹时间              |    Number          |     350         |    任意整数        |\n|    prevent-default| 选填，是否阻止默认滚动事件 |    Boolean         |     true     |    true,false        |\n|    disabled    | 选填，是否禁用              |    Boolean         |     false    |    true,false        |\n|    pull-refresh | 选填，是使用下拉刷新         |    Boolean         |     false    |    true,false        |\n|    refresh-status | 选填，刷新状态         |    String         |     ready     | ready,move,loading       |\n|    is-refresh | 选填，刷新状态         |    Boolean         |     false            |    true,false        |\n    \n\n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Scroll</Hometitle>\n        <div class=\"wrapper-example wrapper-example-scroll\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Scroll>\n                    <ul>\n                        <li>Pretty row 1</li>\n                        <li>Pretty row 2</li>\n                        <li>Pretty row 3</li>\n                        <li>Pretty row 4</li>\n                        <li>Pretty row 5</li>\n                        <li>Pretty row 6</li>\n                        <li>Pretty row 7</li>\n                        <li>Pretty row 8</li>\n                        <li>Pretty row 9</li>\n                        <li>Pretty row 10</li>\n                        <li>Pretty row 11</li>\n                        <li>Pretty row 12</li>\n                        <li>Pretty row 13</li>\n                        <li>Pretty row 14</li>\n                        <li>Pretty row 15</li>\n                        <li>Pretty row 16</li>\n                        <li>Pretty row 17</li>\n                        <li>Pretty row 18</li>\n                        <li>Pretty row 19</li>\n                        <li>Pretty row 20</li>\n                        <li>Pretty row 21</li>\n                        <li>Pretty row 22</li>\n                        <li>Pretty row 23</li>\n                        <li>Pretty row 24</li>\n                        <li>Pretty row 25</li>\n                        <li>Pretty row 26</li>\n                        <li>Pretty row 27</li>\n                        <li>Pretty row 28</li>\n                        <li>Pretty row 29</li>\n                        <li>Pretty row 30</li>\n                        <li>Pretty row 31</li>\n                        <li>Pretty row 32</li>\n                        <li>Pretty row 33</li>\n                        <li>Pretty row 34</li>\n                        <li>Pretty row 35</li>\n                        <li>Pretty row 36</li>\n                        <li>Pretty row 37</li>\n                        <li>Pretty row 38</li>\n                        <li>Pretty row 39</li>\n                        <li>Pretty row 40</li>\n                        <li>Pretty row 41</li>\n                        <li>Pretty row 42</li>\n                        <li>Pretty row 43</li>\n                        <li>Pretty row 44</li>\n                        <li>Pretty row 45</li>\n                        <li>Pretty row 46</li>\n                        <li>Pretty row 47</li>\n                        <li>Pretty row 48</li>\n                        <li>Pretty row 49</li>\n                        <li>Pretty row 50</li>\n                    </ul>\n                </Scroll>\n            </div>\n    </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Scroll,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Button\n    }\n}\n</script>\n<style>\n    .wrapper-example-scroll{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        padding-top: 0.45rem;\n        top: 0px;\n        left: 0px;\n        border-top: solid 1px #ccc;\n        box-sizing: border-box;\n    }\n    .wrapper-example-scroll .wrapper-area-content{\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n    .wrapper-example-scroll .wrapper-area-content li{\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-example-scroll .wrapper-area-content li: last-child {\n        border-bottom-width: 0px;\n    }\n    .wrapper-example-scroll .wrapper-area-content .wrapper-area{\n        padding: 0px;\n        margin: 0px;\n    }\n</style>\n\n```\n\n\n","slug":"scroll","published":1,"updated":"2016-11-24T08:26:38.000Z","_id":"civu9jw6h0006y2s6ywylqozu","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Scroll-滚动条\"><a href=\"#Scroll-滚动条\" class=\"headerlink\" title=\"Scroll 滚动条\"></a>Scroll 滚动条</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Scroll 可以自定义通用属性class和style，以及size（滚动距离），direction（滚动方式y轴|x轴），isMomentum（惯性）<br>，isBounce（超出边界是否可拖动），bounceTime（回弹时间），preventDefault（是否阻止默认行为），disabled（是否禁用），<br>pullRefresh（下拉刷新），refreshStatus（刷新状态），isRefresh（是否从新计算）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div&gt;\n        &lt;Scroll&gt;\n            &lt;ul&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/Scroll&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Scroll } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Scroll,\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Scroll props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">size</td>\n<td style=\"text-align:left\">选填，滚动的距离</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">任意整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">direction</td>\n<td style=\"text-align:left\">选填，滚动方式</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">y</td>\n<td style=\"text-align:left\">x,y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is-momentum</td>\n<td style=\"text-align:left\">选填，是否支持惯性</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is-bounce</td>\n<td style=\"text-align:left\">选填，超出边界是否还能拖动</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bounce-time</td>\n<td style=\"text-align:left\">选填，回弹时间</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">350</td>\n<td style=\"text-align:left\">任意整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prevent-default</td>\n<td style=\"text-align:left\">选填，是否阻止默认滚动事件</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pull-refresh</td>\n<td style=\"text-align:left\">选填，是使用下拉刷新</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh-status</td>\n<td style=\"text-align:left\">选填，刷新状态</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ready</td>\n<td style=\"text-align:left\">ready,move,loading</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is-refresh</td>\n<td style=\"text-align:left\">选填，刷新状态</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Scroll&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-scroll&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Scroll&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt;Pretty row 1&lt;/li&gt;\n                        &lt;li&gt;Pretty row 2&lt;/li&gt;\n                        &lt;li&gt;Pretty row 3&lt;/li&gt;\n                        &lt;li&gt;Pretty row 4&lt;/li&gt;\n                        &lt;li&gt;Pretty row 5&lt;/li&gt;\n                        &lt;li&gt;Pretty row 6&lt;/li&gt;\n                        &lt;li&gt;Pretty row 7&lt;/li&gt;\n                        &lt;li&gt;Pretty row 8&lt;/li&gt;\n                        &lt;li&gt;Pretty row 9&lt;/li&gt;\n                        &lt;li&gt;Pretty row 10&lt;/li&gt;\n                        &lt;li&gt;Pretty row 11&lt;/li&gt;\n                        &lt;li&gt;Pretty row 12&lt;/li&gt;\n                        &lt;li&gt;Pretty row 13&lt;/li&gt;\n                        &lt;li&gt;Pretty row 14&lt;/li&gt;\n                        &lt;li&gt;Pretty row 15&lt;/li&gt;\n                        &lt;li&gt;Pretty row 16&lt;/li&gt;\n                        &lt;li&gt;Pretty row 17&lt;/li&gt;\n                        &lt;li&gt;Pretty row 18&lt;/li&gt;\n                        &lt;li&gt;Pretty row 19&lt;/li&gt;\n                        &lt;li&gt;Pretty row 20&lt;/li&gt;\n                        &lt;li&gt;Pretty row 21&lt;/li&gt;\n                        &lt;li&gt;Pretty row 22&lt;/li&gt;\n                        &lt;li&gt;Pretty row 23&lt;/li&gt;\n                        &lt;li&gt;Pretty row 24&lt;/li&gt;\n                        &lt;li&gt;Pretty row 25&lt;/li&gt;\n                        &lt;li&gt;Pretty row 26&lt;/li&gt;\n                        &lt;li&gt;Pretty row 27&lt;/li&gt;\n                        &lt;li&gt;Pretty row 28&lt;/li&gt;\n                        &lt;li&gt;Pretty row 29&lt;/li&gt;\n                        &lt;li&gt;Pretty row 30&lt;/li&gt;\n                        &lt;li&gt;Pretty row 31&lt;/li&gt;\n                        &lt;li&gt;Pretty row 32&lt;/li&gt;\n                        &lt;li&gt;Pretty row 33&lt;/li&gt;\n                        &lt;li&gt;Pretty row 34&lt;/li&gt;\n                        &lt;li&gt;Pretty row 35&lt;/li&gt;\n                        &lt;li&gt;Pretty row 36&lt;/li&gt;\n                        &lt;li&gt;Pretty row 37&lt;/li&gt;\n                        &lt;li&gt;Pretty row 38&lt;/li&gt;\n                        &lt;li&gt;Pretty row 39&lt;/li&gt;\n                        &lt;li&gt;Pretty row 40&lt;/li&gt;\n                        &lt;li&gt;Pretty row 41&lt;/li&gt;\n                        &lt;li&gt;Pretty row 42&lt;/li&gt;\n                        &lt;li&gt;Pretty row 43&lt;/li&gt;\n                        &lt;li&gt;Pretty row 44&lt;/li&gt;\n                        &lt;li&gt;Pretty row 45&lt;/li&gt;\n                        &lt;li&gt;Pretty row 46&lt;/li&gt;\n                        &lt;li&gt;Pretty row 47&lt;/li&gt;\n                        &lt;li&gt;Pretty row 48&lt;/li&gt;\n                        &lt;li&gt;Pretty row 49&lt;/li&gt;\n                        &lt;li&gt;Pretty row 50&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/Scroll&gt;\n            &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Button\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n    .wrapper-example-scroll{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        padding-top: 0.45rem;\n        top: 0px;\n        left: 0px;\n        border-top: solid 1px #ccc;\n        box-sizing: border-box;\n    }\n    .wrapper-example-scroll .wrapper-area-content{\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n    .wrapper-example-scroll .wrapper-area-content li{\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-example-scroll .wrapper-area-content li: last-child {\n        border-bottom-width: 0px;\n    }\n    .wrapper-example-scroll .wrapper-area-content .wrapper-area{\n        padding: 0px;\n        margin: 0px;\n    }\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Scroll-滚动条\"><a href=\"#Scroll-滚动条\" class=\"headerlink\" title=\"Scroll 滚动条\"></a>Scroll 滚动条</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Scroll 可以自定义通用属性class和style，以及size（滚动距离），direction（滚动方式y轴|x轴），isMomentum（惯性）<br>，isBounce（超出边界是否可拖动），bounceTime（回弹时间），preventDefault（是否阻止默认行为），disabled（是否禁用），<br>pullRefresh（下拉刷新），refreshStatus（刷新状态），isRefresh（是否从新计算）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div&gt;\n        &lt;Scroll&gt;\n            &lt;ul&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n                &lt;li&gt;滚动测试&lt;/li&gt;\n            &lt;/ul&gt;\n        &lt;/Scroll&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Scroll } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Scroll,\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Scroll props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">size</td>\n<td style=\"text-align:left\">选填，滚动的距离</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">0</td>\n<td style=\"text-align:left\">任意整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">direction</td>\n<td style=\"text-align:left\">选填，滚动方式</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">y</td>\n<td style=\"text-align:left\">x,y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is-momentum</td>\n<td style=\"text-align:left\">选填，是否支持惯性</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is-bounce</td>\n<td style=\"text-align:left\">选填，超出边界是否还能拖动</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bounce-time</td>\n<td style=\"text-align:left\">选填，回弹时间</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">350</td>\n<td style=\"text-align:left\">任意整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prevent-default</td>\n<td style=\"text-align:left\">选填，是否阻止默认滚动事件</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">pull-refresh</td>\n<td style=\"text-align:left\">选填，是使用下拉刷新</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">refresh-status</td>\n<td style=\"text-align:left\">选填，刷新状态</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">ready</td>\n<td style=\"text-align:left\">ready,move,loading</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">is-refresh</td>\n<td style=\"text-align:left\">选填，刷新状态</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Scroll&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-scroll&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Scroll&gt;\n                    &lt;ul&gt;\n                        &lt;li&gt;Pretty row 1&lt;/li&gt;\n                        &lt;li&gt;Pretty row 2&lt;/li&gt;\n                        &lt;li&gt;Pretty row 3&lt;/li&gt;\n                        &lt;li&gt;Pretty row 4&lt;/li&gt;\n                        &lt;li&gt;Pretty row 5&lt;/li&gt;\n                        &lt;li&gt;Pretty row 6&lt;/li&gt;\n                        &lt;li&gt;Pretty row 7&lt;/li&gt;\n                        &lt;li&gt;Pretty row 8&lt;/li&gt;\n                        &lt;li&gt;Pretty row 9&lt;/li&gt;\n                        &lt;li&gt;Pretty row 10&lt;/li&gt;\n                        &lt;li&gt;Pretty row 11&lt;/li&gt;\n                        &lt;li&gt;Pretty row 12&lt;/li&gt;\n                        &lt;li&gt;Pretty row 13&lt;/li&gt;\n                        &lt;li&gt;Pretty row 14&lt;/li&gt;\n                        &lt;li&gt;Pretty row 15&lt;/li&gt;\n                        &lt;li&gt;Pretty row 16&lt;/li&gt;\n                        &lt;li&gt;Pretty row 17&lt;/li&gt;\n                        &lt;li&gt;Pretty row 18&lt;/li&gt;\n                        &lt;li&gt;Pretty row 19&lt;/li&gt;\n                        &lt;li&gt;Pretty row 20&lt;/li&gt;\n                        &lt;li&gt;Pretty row 21&lt;/li&gt;\n                        &lt;li&gt;Pretty row 22&lt;/li&gt;\n                        &lt;li&gt;Pretty row 23&lt;/li&gt;\n                        &lt;li&gt;Pretty row 24&lt;/li&gt;\n                        &lt;li&gt;Pretty row 25&lt;/li&gt;\n                        &lt;li&gt;Pretty row 26&lt;/li&gt;\n                        &lt;li&gt;Pretty row 27&lt;/li&gt;\n                        &lt;li&gt;Pretty row 28&lt;/li&gt;\n                        &lt;li&gt;Pretty row 29&lt;/li&gt;\n                        &lt;li&gt;Pretty row 30&lt;/li&gt;\n                        &lt;li&gt;Pretty row 31&lt;/li&gt;\n                        &lt;li&gt;Pretty row 32&lt;/li&gt;\n                        &lt;li&gt;Pretty row 33&lt;/li&gt;\n                        &lt;li&gt;Pretty row 34&lt;/li&gt;\n                        &lt;li&gt;Pretty row 35&lt;/li&gt;\n                        &lt;li&gt;Pretty row 36&lt;/li&gt;\n                        &lt;li&gt;Pretty row 37&lt;/li&gt;\n                        &lt;li&gt;Pretty row 38&lt;/li&gt;\n                        &lt;li&gt;Pretty row 39&lt;/li&gt;\n                        &lt;li&gt;Pretty row 40&lt;/li&gt;\n                        &lt;li&gt;Pretty row 41&lt;/li&gt;\n                        &lt;li&gt;Pretty row 42&lt;/li&gt;\n                        &lt;li&gt;Pretty row 43&lt;/li&gt;\n                        &lt;li&gt;Pretty row 44&lt;/li&gt;\n                        &lt;li&gt;Pretty row 45&lt;/li&gt;\n                        &lt;li&gt;Pretty row 46&lt;/li&gt;\n                        &lt;li&gt;Pretty row 47&lt;/li&gt;\n                        &lt;li&gt;Pretty row 48&lt;/li&gt;\n                        &lt;li&gt;Pretty row 49&lt;/li&gt;\n                        &lt;li&gt;Pretty row 50&lt;/li&gt;\n                    &lt;/ul&gt;\n                &lt;/Scroll&gt;\n            &lt;/div&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Scroll,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Scroll,\n        Button\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n    .wrapper-example-scroll{\n        position: fixed;\n        width: 100%;\n        height: 100%;\n        padding-top: 0.45rem;\n        top: 0px;\n        left: 0px;\n        border-top: solid 1px #ccc;\n        box-sizing: border-box;\n    }\n    .wrapper-example-scroll .wrapper-area-content{\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n    }\n    .wrapper-example-scroll .wrapper-area-content li{\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-example-scroll .wrapper-area-content li: last-child {\n        border-bottom-width: 0px;\n    }\n    .wrapper-example-scroll .wrapper-area-content .wrapper-area{\n        padding: 0px;\n        margin: 0px;\n    }\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Slider 轮播","date":"2016-10-19T07:25:57.000Z","_content":"\n\n# Slider 轮播\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nSlider 可以自定义通用属性class和style\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Slider>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n    </Slider>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Slider,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n</script>\n```\n\n\n## API\n\n\nSlider props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    direction  | 选填，滚动方式               |    String          |     y         |    x,y               |\n|    bounce  | 选填，超出边界是否还能拖动    |    Boolean          |     true     |    true,false        |\n|    prevent-default| 选填，是否阻止默认滚动事件 |    Boolean         |     true     |    true,false        |\n|    disabled    | 选填，是否禁用              |    Boolean         |     false    |    true,false        |\n\n\n\n## 右侧示例代码\n\n\n### 默认\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Slider</Hometitle>\n        <div class=\"wrapper-example wrapper-example-slider\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Slider>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                </Slider>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Slider,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n</script>\n<style>\n.wrapper-example-slider {\n    width: 100%;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-slider .wrapper-area-content {\n    width: 100%;\n}\n\n.wrapper-example-slider .wrapper-area-content li {\n    border-bottom: solid 1px #ccc;\n    color: #666;\n}\n\n.wrapper-example-slider .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-slider .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```","source":"_posts/slider.md","raw":"---\ntitle: Slider 轮播\ndate: 2016-10-19 15:25:57\ntags: http://localhost:8080/#!/slider?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Slider 轮播\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nSlider 可以自定义通用属性class和style\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Slider>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n        <li>\n            <img src=\"/static/click1.jpg\"/>\n            <span>文案</span>\n        </li>\n    </Slider>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Slider,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n</script>\n```\n\n\n## API\n\n\nSlider props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    direction  | 选填，滚动方式               |    String          |     y         |    x,y               |\n|    bounce  | 选填，超出边界是否还能拖动    |    Boolean          |     true     |    true,false        |\n|    prevent-default| 选填，是否阻止默认滚动事件 |    Boolean         |     true     |    true,false        |\n|    disabled    | 选填，是否禁用              |    Boolean         |     false    |    true,false        |\n\n\n\n## 右侧示例代码\n\n\n### 默认\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Slider</Hometitle>\n        <div class=\"wrapper-example wrapper-example-slider\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Slider>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                    <li>\n                        <img src=\"/static/click1.jpg\"/>\n                        <span>文案</span>\n                    </li>\n                </Slider>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Slider,\n    Button\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n</script>\n<style>\n.wrapper-example-slider {\n    width: 100%;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-slider .wrapper-area-content {\n    width: 100%;\n}\n\n.wrapper-example-slider .wrapper-area-content li {\n    border-bottom: solid 1px #ccc;\n    color: #666;\n}\n\n.wrapper-example-slider .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-slider .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n\n```","slug":"slider","published":1,"updated":"2016-11-24T01:24:23.000Z","_id":"civu9oajo000by2s6ovjdtq6i","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Slider-轮播\"><a href=\"#Slider-轮播\" class=\"headerlink\" title=\"Slider 轮播\"></a>Slider 轮播</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Slider 可以自定义通用属性class和style</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Slider&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n    &lt;/Slider&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Slider,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Slider props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">direction</td>\n<td style=\"text-align:left\">选填，滚动方式</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">y</td>\n<td style=\"text-align:left\">x,y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bounce</td>\n<td style=\"text-align:left\">选填，超出边界是否还能拖动</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prevent-default</td>\n<td style=\"text-align:left\">选填，是否阻止默认滚动事件</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认\"><a href=\"#默认\" class=\"headerlink\" title=\"默认\"></a>默认</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Slider&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-slider&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Slider&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                &lt;/Slider&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Slider,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-slider {\n    width: 100%;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-slider .wrapper-area-content {\n    width: 100%;\n}\n\n.wrapper-example-slider .wrapper-area-content li {\n    border-bottom: solid 1px #ccc;\n    color: #666;\n}\n\n.wrapper-example-slider .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-slider .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Slider-轮播\"><a href=\"#Slider-轮播\" class=\"headerlink\" title=\"Slider 轮播\"></a>Slider 轮播</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Slider 可以自定义通用属性class和style</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Slider&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n        &lt;li&gt;\n            &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n            &lt;span&gt;文案&lt;/span&gt;\n        &lt;/li&gt;\n    &lt;/Slider&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Slider,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Slider props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">direction</td>\n<td style=\"text-align:left\">选填，滚动方式</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">y</td>\n<td style=\"text-align:left\">x,y</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">bounce</td>\n<td style=\"text-align:left\">选填，超出边界是否还能拖动</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">prevent-default</td>\n<td style=\"text-align:left\">选填，是否阻止默认滚动事件</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">disabled</td>\n<td style=\"text-align:left\">选填，是否禁用</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">false</td>\n<td style=\"text-align:left\">true,false</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认\"><a href=\"#默认\" class=\"headerlink\" title=\"默认\"></a>默认</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Slider&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-slider&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Slider&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                    &lt;li&gt;\n                        &lt;img src=&quot;/static/click1.jpg&quot;/&gt;\n                        &lt;span&gt;文案&lt;/span&gt;\n                    &lt;/li&gt;\n                &lt;/Slider&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Slider,\n    Button\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Slider\n    },\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-slider {\n    width: 100%;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-slider .wrapper-area-content {\n    width: 100%;\n}\n\n.wrapper-example-slider .wrapper-area-content li {\n    border-bottom: solid 1px #ccc;\n    color: #666;\n}\n\n.wrapper-example-slider .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-slider .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Uploader 上传","date":"2016-10-19T07:25:57.000Z","_content":"\n\n# Uploader 上传\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nUploader 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）\n\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Uploader url=\"http://www.huiyi.com/upload/upload\" @on-preview=\"preview\" @on-before=\"before\" @on-validate=\"validate\" @on-progress=\"progress\"  @on-error=\"error\" @on-success=\"success\" @on-complete=\"complete\"></Uploader>\n\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Uploader,\n} from 'mvui';\nexport default {\n    components: {\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: ''\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n</script>\n```\n\n\n## API\n\nUploader props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名                  |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    url       | 必填， 上传地址               |    String          |      -        |    任意        |\n|    field       | 选填，后台接受的field       |    String          |      file  |    任意        |\n|    max-size    | 选填，文件最大尺寸（单位M）     |     Number          |      4       |    任意数字         |\n|    max-size-message| 选填，文件最大尺寸（单位M） |     String      | 图片大小超过限制|    任意         |\n|    type     | 选填，格式（用逗号隔开）     |     String          |      jpg,png,jpeg,gif       |    任意         |\n|    type-message | 选填，格式错误提示      |     String      | 图片格式不正确          |    任意         |\n|    auto-load | 选填，是否自动上传      |     Boolean      | true          |    true, false         |\n|    more     | 选填，是否一次允许选中多张 |     Boolean      | true          |    true, false         |\n|    status     | 选填，上传状态(更改run开始上传，上传后变complete)| String   |  'status'     |    run         |\n   \n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Uploader</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">单张图片</div>\n                <div class=\"wrapper-area-content\">\n                    <Uploader url=\"http://www.huiyi.com/upload/upload\" @on-preview=\"preview\" @on-before=\"before\" @on-validate=\"validate\" @on-progress=\"progress\"  @on-error=\"error\" @on-success=\"success\" @on-complete=\"complete\"></Uploader>\n                    <img style=\"width: 40px;\" :src=\"previewImage\"/>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">多张图片</div>\n                <div class=\"wrapper-area-content\">\n                    <Uploader url=\"http://www.huiyi.com/upload/upload\" @on-preview=\"preview1\" @on-before=\"before1\" @on-validate=\"validate1\" @on-progress=\"progress1\"  @on-error=\"error1\" @on-success=\"success1\" @on-complete=\"complete1\" :more=\"true\"></Uploader>\n                    <div v-for=\"item in previewImage1\">\n                        <img style=\"width: 40px;\" :src=\"item\"/>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Uploader\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: '',\n            previewImage1: []\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        },\n        preview1(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage1 = file;\n        },\n        validate1(){\n            debugger;\n            console.dir(arguments)\n        },\n        before1(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress1(){\n            debugger;\n            console.dir(arguments)\n        },\n        error1(){\n            debugger;\n            console.dir(arguments)\n        },\n        success1(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete1(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n</script>\n<style>\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n```\n\n\n","source":"_posts/uploader.md","raw":"---\ntitle: Uploader 上传\ndate: 2016-10-19 15:25:57\ntags: http://localhost:8080/#!/uploader?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Uploader 上传\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nUploader 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）\n\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <Uploader url=\"http://www.huiyi.com/upload/upload\" @on-preview=\"preview\" @on-before=\"before\" @on-validate=\"validate\" @on-progress=\"progress\"  @on-error=\"error\" @on-success=\"success\" @on-complete=\"complete\"></Uploader>\n\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Uploader,\n} from 'mvui';\nexport default {\n    components: {\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: ''\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n</script>\n```\n\n\n## API\n\nUploader props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名                  |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    url       | 必填， 上传地址               |    String          |      -        |    任意        |\n|    field       | 选填，后台接受的field       |    String          |      file  |    任意        |\n|    max-size    | 选填，文件最大尺寸（单位M）     |     Number          |      4       |    任意数字         |\n|    max-size-message| 选填，文件最大尺寸（单位M） |     String      | 图片大小超过限制|    任意         |\n|    type     | 选填，格式（用逗号隔开）     |     String          |      jpg,png,jpeg,gif       |    任意         |\n|    type-message | 选填，格式错误提示      |     String      | 图片格式不正确          |    任意         |\n|    auto-load | 选填，是否自动上传      |     Boolean      | true          |    true, false         |\n|    more     | 选填，是否一次允许选中多张 |     Boolean      | true          |    true, false         |\n|    status     | 选填，上传状态(更改run开始上传，上传后变complete)| String   |  'status'     |    run         |\n   \n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Uploader</Hometitle>\n        <div class=\"wrapper-example\">\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">单张图片</div>\n                <div class=\"wrapper-area-content\">\n                    <Uploader url=\"http://www.huiyi.com/upload/upload\" @on-preview=\"preview\" @on-before=\"before\" @on-validate=\"validate\" @on-progress=\"progress\"  @on-error=\"error\" @on-success=\"success\" @on-complete=\"complete\"></Uploader>\n                    <img style=\"width: 40px;\" :src=\"previewImage\"/>\n                </div>\n            </div>\n\n            <div class=\"wrapper-area\">\n                <div class=\"wrapper-area-title\">多张图片</div>\n                <div class=\"wrapper-area-content\">\n                    <Uploader url=\"http://www.huiyi.com/upload/upload\" @on-preview=\"preview1\" @on-before=\"before1\" @on-validate=\"validate1\" @on-progress=\"progress1\"  @on-error=\"error1\" @on-success=\"success1\" @on-complete=\"complete1\" :more=\"true\"></Uploader>\n                    <div v-for=\"item in previewImage1\">\n                        <img style=\"width: 40px;\" :src=\"item\"/>\n                    </div>\n                </div>\n            </div>\n\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Uploader\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: '',\n            previewImage1: []\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        },\n        preview1(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage1 = file;\n        },\n        validate1(){\n            debugger;\n            console.dir(arguments)\n        },\n        before1(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress1(){\n            debugger;\n            console.dir(arguments)\n        },\n        error1(){\n            debugger;\n            console.dir(arguments)\n        },\n        success1(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete1(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n</script>\n<style>\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n</style>\n```\n\n\n","slug":"uploader","published":1,"updated":"2016-11-24T01:54:48.000Z","_id":"civu9p414000ey2s6c9ogl11f","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Uploader-上传\"><a href=\"#Uploader-上传\" class=\"headerlink\" title=\"Uploader 上传\"></a>Uploader 上传</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Uploader 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Uploader url=&quot;http://www.huiyi.com/upload/upload&quot; @on-preview=&quot;preview&quot; @on-before=&quot;before&quot; @on-validate=&quot;validate&quot; @on-progress=&quot;progress&quot;  @on-error=&quot;error&quot; @on-success=&quot;success&quot; @on-complete=&quot;complete&quot;&gt;&lt;/Uploader&gt;\n\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Uploader,\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: &#39;&#39;\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Uploader props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">url</td>\n<td style=\"text-align:left\">必填， 上传地址</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">选填，后台接受的field</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">file</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">max-size</td>\n<td style=\"text-align:left\">选填，文件最大尺寸（单位M）</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">任意数字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">max-size-message</td>\n<td style=\"text-align:left\">选填，文件最大尺寸（单位M）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">图片大小超过限制</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，格式（用逗号隔开）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">jpg,png,jpeg,gif</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type-message</td>\n<td style=\"text-align:left\">选填，格式错误提示</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">图片格式不正确</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">auto-load</td>\n<td style=\"text-align:left\">选填，是否自动上传</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true, false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">more</td>\n<td style=\"text-align:left\">选填，是否一次允许选中多张</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true, false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">status</td>\n<td style=\"text-align:left\">选填，上传状态(更改run开始上传，上传后变complete)</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">‘status’</td>\n<td style=\"text-align:left\">run</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Uploader&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;单张图片&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Uploader url=&quot;http://www.huiyi.com/upload/upload&quot; @on-preview=&quot;preview&quot; @on-before=&quot;before&quot; @on-validate=&quot;validate&quot; @on-progress=&quot;progress&quot;  @on-error=&quot;error&quot; @on-success=&quot;success&quot; @on-complete=&quot;complete&quot;&gt;&lt;/Uploader&gt;\n                    &lt;img style=&quot;width: 40px;&quot; :src=&quot;previewImage&quot;/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;多张图片&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Uploader url=&quot;http://www.huiyi.com/upload/upload&quot; @on-preview=&quot;preview1&quot; @on-before=&quot;before1&quot; @on-validate=&quot;validate1&quot; @on-progress=&quot;progress1&quot;  @on-error=&quot;error1&quot; @on-success=&quot;success1&quot; @on-complete=&quot;complete1&quot; :more=&quot;true&quot;&gt;&lt;/Uploader&gt;\n                    &lt;div v-for=&quot;item in previewImage1&quot;&gt;\n                        &lt;img style=&quot;width: 40px;&quot; :src=&quot;item&quot;/&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Uploader\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: &#39;&#39;,\n            previewImage1: []\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        },\n        preview1(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage1 = file;\n        },\n        validate1(){\n            debugger;\n            console.dir(arguments)\n        },\n        before1(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress1(){\n            debugger;\n            console.dir(arguments)\n        },\n        error1(){\n            debugger;\n            console.dir(arguments)\n        },\n        success1(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete1(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Uploader-上传\"><a href=\"#Uploader-上传\" class=\"headerlink\" title=\"Uploader 上传\"></a>Uploader 上传</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Uploader 可以自定义通用属性class和style，以及show（是否显示），type（loadding呈现样式，circle 或 line），position（居中情况）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;Uploader url=&quot;http://www.huiyi.com/upload/upload&quot; @on-preview=&quot;preview&quot; @on-before=&quot;before&quot; @on-validate=&quot;validate&quot; @on-progress=&quot;progress&quot;  @on-error=&quot;error&quot; @on-success=&quot;success&quot; @on-complete=&quot;complete&quot;&gt;&lt;/Uploader&gt;\n\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Uploader,\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: &#39;&#39;\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Uploader props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">url</td>\n<td style=\"text-align:left\">必填， 上传地址</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">field</td>\n<td style=\"text-align:left\">选填，后台接受的field</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">file</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">max-size</td>\n<td style=\"text-align:left\">选填，文件最大尺寸（单位M）</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">4</td>\n<td style=\"text-align:left\">任意数字</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">max-size-message</td>\n<td style=\"text-align:left\">选填，文件最大尺寸（单位M）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">图片大小超过限制</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type</td>\n<td style=\"text-align:left\">选填，格式（用逗号隔开）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">jpg,png,jpeg,gif</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">type-message</td>\n<td style=\"text-align:left\">选填，格式错误提示</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">图片格式不正确</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">auto-load</td>\n<td style=\"text-align:left\">选填，是否自动上传</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true, false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">more</td>\n<td style=\"text-align:left\">选填，是否一次允许选中多张</td>\n<td style=\"text-align:left\">Boolean</td>\n<td style=\"text-align:left\">true</td>\n<td style=\"text-align:left\">true, false</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">status</td>\n<td style=\"text-align:left\">选填，上传状态(更改run开始上传，上传后变complete)</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">‘status’</td>\n<td style=\"text-align:left\">run</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Uploader&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example&quot;&gt;\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;单张图片&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Uploader url=&quot;http://www.huiyi.com/upload/upload&quot; @on-preview=&quot;preview&quot; @on-before=&quot;before&quot; @on-validate=&quot;validate&quot; @on-progress=&quot;progress&quot;  @on-error=&quot;error&quot; @on-success=&quot;success&quot; @on-complete=&quot;complete&quot;&gt;&lt;/Uploader&gt;\n                    &lt;img style=&quot;width: 40px;&quot; :src=&quot;previewImage&quot;/&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n            &lt;div class=&quot;wrapper-area&quot;&gt;\n                &lt;div class=&quot;wrapper-area-title&quot;&gt;多张图片&lt;/div&gt;\n                &lt;div class=&quot;wrapper-area-content&quot;&gt;\n                    &lt;Uploader url=&quot;http://www.huiyi.com/upload/upload&quot; @on-preview=&quot;preview1&quot; @on-before=&quot;before1&quot; @on-validate=&quot;validate1&quot; @on-progress=&quot;progress1&quot;  @on-error=&quot;error1&quot; @on-success=&quot;success1&quot; @on-complete=&quot;complete1&quot; :more=&quot;true&quot;&gt;&lt;/Uploader&gt;\n                    &lt;div v-for=&quot;item in previewImage1&quot;&gt;\n                        &lt;img style=&quot;width: 40px;&quot; :src=&quot;item&quot;/&gt;\n                    &lt;/div&gt;\n                &lt;/div&gt;\n            &lt;/div&gt;\n\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Uploader\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Uploader\n    },\n    data() {\n        return {\n            previewImage: &#39;&#39;,\n            previewImage1: []\n        }\n    },\n    methods: {\n        preview(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage = file[0];\n        },\n        validate(){\n            debugger;\n            console.dir(arguments)\n        },\n        before(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress(){\n            debugger;\n            console.dir(arguments)\n        },\n        error(){\n            debugger;\n            console.dir(arguments)\n        },\n        success(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete(){\n            debugger;\n            console.dir(arguments)\n        },\n        preview1(file){\n            debugger;\n            console.dir(arguments)\n            this.previewImage1 = file;\n        },\n        validate1(){\n            debugger;\n            console.dir(arguments)\n        },\n        before1(){\n            debugger;\n            console.dir(arguments)\n        },\n        progress1(){\n            debugger;\n            console.dir(arguments)\n        },\n        error1(){\n            debugger;\n            console.dir(arguments)\n        },\n        success1(){\n            debugger;\n            console.dir(arguments)\n        },\n        complete1(){\n            debugger;\n            console.dir(arguments)\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style&gt;\n.wrapper-example-load-scroll {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content {\n    width: 100%;\n    height: 100%;\n    overflow: hidden;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li {\n    height: 0.4rem;\n    line-height: 0.4rem;\n    border-bottom: solid 1px #ccc;\n    padding-left: 0.1rem;\n    color: #666;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content li: last-child {\n    border-bottom-width: 0px;\n}\n\n.wrapper-example-load-scroll .wrapper-area-content .wrapper-area {\n    padding: 0px;\n    margin: 0px;\n}\n&lt;/style&gt;\n</code></pre>\n"},{"title":"Page 分页","date":"2016-10-19T07:25:57.000Z","_content":"\n\n# Page 分页\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nPage 分页 可以自定义通用属性class和style，以及current（当前页），all（总页数）\n\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <div>\n        <Page :current=\"current\" :all=\"all\" @on-change=\"change\"></Page>\n    </div>\n</template>\n<script>\n    import { Page } from 'mvui';\n    export default{   \n        components: { \n            Page,\n        },\n        data (){\n            return {\n                current: 1,\n                all: 10\n            }\n        }\n    }\n</script>\n```\n\n\n\n## API\n\n\nPage props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    current    | 必填，当前页                 |    Number          |     1        |    大于0整数               |\n|    all       | 必填，总页数                  |    Number          |     1       |    大于0整数                |\n\n\nPage Events\n\n\nGotop events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    点击上一页下一页触发     |        Number(切换后的页面)|\n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Page</Hometitle>\n        <div class=\"wrapper-example wrapper-example-page\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Page :current=\"current\" :all=\"all\" @on-change=\"change\"></Page>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Button,\n    Page\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Page\n    },\n    data() {\n        return {\n            current: 1,\n            all: 10\n        }\n    },\n    methods: {\n        change: function(page){\n            console.dir(page);\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n.wrapper-example-page {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n\n    .wrapper-area-content {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        text-align: center;\n    }\n    .wrapper-area-content li {\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-area-content li:last-child {\n        border-bottom-width: 0px;\n    }\n\n    .wrapper-area-content .wrapper-area {\n        padding: 0px;\n        margin: 0px;\n    }\n}\n</style>\n```\n\n\n","source":"_posts/page.md","raw":"---\ntitle: Page 分页\ndate: 2016-10-19 15:25:57\ntags: http://localhost:8080/#!/page?hidetitle=true\ncategories:\n- Other\n---\n\n\n# Page 分页\n\n## 通用参数\n###### 所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\n###### 注：如果是变量需要在class前面加冒号,例如 :class=\"mv-button\"\n\n\n## 概述\nPage 分页 可以自定义通用属性class和style，以及current（当前页），all（总页数）\n\n\n\n\n## 如何使用\n\n``` html\n<template>  \n    <div>\n        <Page :current=\"current\" :all=\"all\" @on-change=\"change\"></Page>\n    </div>\n</template>\n<script>\n    import { Page } from 'mvui';\n    export default{   \n        components: { \n            Page,\n        },\n        data (){\n            return {\n                current: 1,\n                all: 10\n            }\n        }\n    }\n</script>\n```\n\n\n\n## API\n\n\nPage props\n\n|     属性       | 说明                       |        类型       |    默认值       |    可选值             |\n| :------------- |:-------------------------- | :----------------  | :------------|    :-----------------|\n|    class      | 选填，类名（可以设置icon）    |    String          |      -       |     任意              |\n|    style      | 选填，内联样式,自由设置样式    |   [String,Object] |      -        |     任意              |\n|    current    | 必填，当前页                 |    Number          |     1        |    大于0整数               |\n|    all       | 必填，总页数                  |    Number          |     1       |    大于0整数                |\n\n\nPage Events\n\n\nGotop events\n\n|     事件名      | 说明                       |        返回值       | \n| :------------- |:-------------------------- | :----------------  |\n|    on-change    |    点击上一页下一页触发     |        Number(切换后的页面)|\n\n\n## 右侧示例代码\n\n\n### 默认loadding\n``` html\n<template>\n    <div class=\"body-wrapper\">\n        <Hometitle>Page</Hometitle>\n        <div class=\"wrapper-example wrapper-example-page\">\n            <div class=\"wrapper-area-content\" id=\"parent\">\n                <Page :current=\"current\" :all=\"all\" @on-change=\"change\"></Page>\n            </div>\n        </div>\n</template>\n<script>\nimport Hometitle from './common/hometitle.vue';\nimport {\n    Panel,\n    Button,\n    Page\n} from 'mvui';\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Page\n    },\n    data() {\n        return {\n            current: 1,\n            all: 10\n        }\n    },\n    methods: {\n        change: function(page){\n            console.dir(page);\n        }\n    }\n}\n</script>\n<style lang=\"less\">\n.wrapper-example-page {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n\n    .wrapper-area-content {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        text-align: center;\n    }\n    .wrapper-area-content li {\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-area-content li:last-child {\n        border-bottom-width: 0px;\n    }\n\n    .wrapper-area-content .wrapper-area {\n        padding: 0px;\n        margin: 0px;\n    }\n}\n</style>\n```\n\n\n","slug":"page","published":1,"updated":"2016-11-23T02:01:03.000Z","_id":"civu9pxge000hy2s671p6p2ee","comments":1,"layout":"post","photos":[],"link":"","content":"<h1 id=\"Page-分页\"><a href=\"#Page-分页\" class=\"headerlink\" title=\"Page 分页\"></a>Page 分页</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Page 分页 可以自定义通用属性class和style，以及current（当前页），all（总页数）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div&gt;\n        &lt;Page :current=&quot;current&quot; :all=&quot;all&quot; @on-change=&quot;change&quot;&gt;&lt;/Page&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Page } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Page,\n        },\n        data (){\n            return {\n                current: 1,\n                all: 10\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Page props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">current</td>\n<td style=\"text-align:left\">必填，当前页</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">大于0整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">all</td>\n<td style=\"text-align:left\">必填，总页数</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">大于0整数</td>\n</tr>\n</tbody>\n</table>\n<p>Page Events</p>\n<p>Gotop events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">点击上一页下一页触发</td>\n<td style=\"text-align:left\">Number(切换后的页面)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Page&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-page&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Page :current=&quot;current&quot; :all=&quot;all&quot; @on-change=&quot;change&quot;&gt;&lt;/Page&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Button,\n    Page\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Page\n    },\n    data() {\n        return {\n            current: 1,\n            all: 10\n        }\n    },\n    methods: {\n        change: function(page){\n            console.dir(page);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n.wrapper-example-page {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n\n    .wrapper-area-content {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        text-align: center;\n    }\n    .wrapper-area-content li {\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-area-content li:last-child {\n        border-bottom-width: 0px;\n    }\n\n    .wrapper-area-content .wrapper-area {\n        padding: 0px;\n        margin: 0px;\n    }\n}\n&lt;/style&gt;\n</code></pre>\n","excerpt":"","more":"<h1 id=\"Page-分页\"><a href=\"#Page-分页\" class=\"headerlink\" title=\"Page 分页\"></a>Page 分页</h1><h2 id=\"通用参数\"><a href=\"#通用参数\" class=\"headerlink\" title=\"通用参数\"></a>通用参数</h2><h6 id=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"><a href=\"#所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\" class=\"headerlink\" title=\"所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象\"></a>所有组件均支持class和style属性，class可以是vue变量也可以是字符串，style可以是字符串或者对象</h6><h6 id=\"注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\"><a href=\"#注：如果是变量需要在class前面加冒号-例如-class-”mv-button”\" class=\"headerlink\" title=\"注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”\"></a>注：如果是变量需要在class前面加冒号,例如 :class=”mv-button”</h6><h2 id=\"概述\"><a href=\"#概述\" class=\"headerlink\" title=\"概述\"></a>概述</h2><p>Page 分页 可以自定义通用属性class和style，以及current（当前页），all（总页数）</p>\n<h2 id=\"如何使用\"><a href=\"#如何使用\" class=\"headerlink\" title=\"如何使用\"></a>如何使用</h2><pre><code class=\"html\">&lt;template&gt;  \n    &lt;div&gt;\n        &lt;Page :current=&quot;current&quot; :all=&quot;all&quot; @on-change=&quot;change&quot;&gt;&lt;/Page&gt;\n    &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\n    import { Page } from &#39;mvui&#39;;\n    export default{   \n        components: { \n            Page,\n        },\n        data (){\n            return {\n                current: 1,\n                all: 10\n            }\n        }\n    }\n&lt;/script&gt;\n</code></pre>\n<h2 id=\"API\"><a href=\"#API\" class=\"headerlink\" title=\"API\"></a>API</h2><p>Page props</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">属性</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">类型</th>\n<th style=\"text-align:left\">默认值</th>\n<th style=\"text-align:left\">可选值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">class</td>\n<td style=\"text-align:left\">选填，类名（可以设置icon）</td>\n<td style=\"text-align:left\">String</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">style</td>\n<td style=\"text-align:left\">选填，内联样式,自由设置样式</td>\n<td style=\"text-align:left\">[String,Object]</td>\n<td style=\"text-align:left\">-</td>\n<td style=\"text-align:left\">任意</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">current</td>\n<td style=\"text-align:left\">必填，当前页</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">大于0整数</td>\n</tr>\n<tr>\n<td style=\"text-align:left\">all</td>\n<td style=\"text-align:left\">必填，总页数</td>\n<td style=\"text-align:left\">Number</td>\n<td style=\"text-align:left\">1</td>\n<td style=\"text-align:left\">大于0整数</td>\n</tr>\n</tbody>\n</table>\n<p>Page Events</p>\n<p>Gotop events</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:left\">事件名</th>\n<th style=\"text-align:left\">说明</th>\n<th style=\"text-align:left\">返回值</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:left\">on-change</td>\n<td style=\"text-align:left\">点击上一页下一页触发</td>\n<td style=\"text-align:left\">Number(切换后的页面)</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"右侧示例代码\"><a href=\"#右侧示例代码\" class=\"headerlink\" title=\"右侧示例代码\"></a>右侧示例代码</h2><h3 id=\"默认loadding\"><a href=\"#默认loadding\" class=\"headerlink\" title=\"默认loadding\"></a>默认loadding</h3><pre><code class=\"html\">&lt;template&gt;\n    &lt;div class=&quot;body-wrapper&quot;&gt;\n        &lt;Hometitle&gt;Page&lt;/Hometitle&gt;\n        &lt;div class=&quot;wrapper-example wrapper-example-page&quot;&gt;\n            &lt;div class=&quot;wrapper-area-content&quot; id=&quot;parent&quot;&gt;\n                &lt;Page :current=&quot;current&quot; :all=&quot;all&quot; @on-change=&quot;change&quot;&gt;&lt;/Page&gt;\n            &lt;/div&gt;\n        &lt;/div&gt;\n&lt;/template&gt;\n&lt;script&gt;\nimport Hometitle from &#39;./common/hometitle.vue&#39;;\nimport {\n    Panel,\n    Button,\n    Page\n} from &#39;mvui&#39;;\nexport default {\n    components: {\n        Hometitle,\n        Button,\n        Page\n    },\n    data() {\n        return {\n            current: 1,\n            all: 10\n        }\n    },\n    methods: {\n        change: function(page){\n            console.dir(page);\n        }\n    }\n}\n&lt;/script&gt;\n&lt;style lang=&quot;less&quot;&gt;\n.wrapper-example-page {\n    position: fixed;\n    width: 100%;\n    height: 100%;\n    padding-top: 0.45rem;\n    top: 0px;\n    left: 0px;\n    box-sizing: border-box;\n\n    .wrapper-area-content {\n        width: 100%;\n        height: 100%;\n        overflow: hidden;\n        text-align: center;\n    }\n    .wrapper-area-content li {\n        height: 0.4rem;\n        line-height: 0.4rem;\n        border-bottom: solid 1px #ccc;\n        padding-left: 0.1rem;\n        color: #666;\n    }\n    .wrapper-area-content li:last-child {\n        border-bottom-width: 0px;\n    }\n\n    .wrapper-area-content .wrapper-area {\n        padding: 0px;\n        margin: 0px;\n    }\n}\n&lt;/style&gt;\n</code></pre>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"ciut8cagr0000v7s6nk2e51vt","category_id":"ciut8cagy0002v7s611wpdqfj","_id":"ciut8cah9000bv7s60ici6mzn"},{"post_id":"ciut8cagw0001v7s6f6d5xxjc","category_id":"ciut8cah70007v7s6rkc8frzu","_id":"ciut8cahe000iv7s6djn1wylz"},{"post_id":"ciut8cah9000cv7s6s3cnr89n","category_id":"ciut8cah70007v7s6rkc8frzu","_id":"ciut8cahh000mv7s6qmeq80d5"},{"post_id":"ciut8cahg000lv7s6wupx0atp","category_id":"ciut8cagy0002v7s611wpdqfj","_id":"ciut8cahl000uv7s61nvq2v2s"},{"post_id":"ciut8cah20005v7s6u3w9b11d","category_id":"ciut8cahf000jv7s65txllvtf","_id":"ciut8cahm000wv7s660ac6jpm"},{"post_id":"ciut8cahh000ov7s6a6ft5ew9","category_id":"ciut8cahf000jv7s65txllvtf","_id":"ciut8cahp0010v7s6d3ykyzi6"},{"post_id":"ciut8cah60006v7s6qefmfkv7","category_id":"ciut8cahj000qv7s6ku2d51aa","_id":"ciut8cahs0013v7s6z6zyjk3r"},{"post_id":"ciut8cahn000yv7s6w3mxgh2p","category_id":"ciut8cahj000qv7s6ku2d51aa","_id":"ciut8cahv0017v7s6oxear593"},{"post_id":"ciut8cahq0012v7s63qtai43j","category_id":"ciut8cahj000qv7s6ku2d51aa","_id":"ciut8cahw0019v7s6yojzquxg"},{"post_id":"ciut8cah8000av7s6sizgjvk7","category_id":"ciut8cahm000xv7s65igeu71i","_id":"ciut8cahw001cv7s6l7t061bi"},{"post_id":"ciut8caht0014v7s6rtqvf9co","category_id":"ciut8cagy0002v7s611wpdqfj","_id":"ciut8cahx001ev7s6odckmexd"},{"post_id":"ciut8cahd000fv7s6dwxwzijn","category_id":"ciut8cahm000xv7s65igeu71i","_id":"ciut8cahx001gv7s6rj4lm5fz"},{"post_id":"ciut8cahe000hv7s6pm8wdvq9","category_id":"ciut8cahj000qv7s6ku2d51aa","_id":"ciut8cahx001jv7s6bh7ltigl"},{"post_id":"ciut8cahk000sv7s6es6pui8y","category_id":"ciut8cahm000xv7s65igeu71i","_id":"ciut8cahy001mv7s6gu4zmz0l"},{"post_id":"ciut8cahl000vv7s6x0lov7p9","category_id":"ciut8cahm000xv7s65igeu71i","_id":"ciut8cahz001pv7s6fn3brz4r"},{"post_id":"ciuxtuudd0000vos6d4cxf4bp","category_id":"ciuxugojt0009vos6fr2czxca","_id":"ciuxugojv000avos6z9phdbww"},{"post_id":"ciuxtvjie0003vos6mey4cgcl","category_id":"ciuxugojt0009vos6fr2czxca","_id":"ciuxugvxu000cvos6qzj4ylib"},{"post_id":"ciuxtvmsi0004vos63w133jti","category_id":"ciuxugojt0009vos6fr2czxca","_id":"ciuxugy42000evos6n1d564ii"},{"post_id":"ciuxtv9fn0002vos6c0xf20x7","category_id":"ciuxugojt0009vos6fr2czxca","_id":"ciuxuh39y000gvos62kezt3xa"},{"post_id":"ciuxtv30i0001vos6rfpa4gu8","category_id":"ciuxugojt0009vos6fr2czxca","_id":"ciuxuhpwb000ivos6ya5zywqd"},{"post_id":"civ32u5j50000brs68tgimcil","category_id":"ciut8cagy0002v7s611wpdqfj","_id":"civ32u5jc0001brs6c2citfyq"},{"post_id":"civu9jw6h0006y2s6ywylqozu","category_id":"ciut8cahm000xv7s65igeu71i","_id":"civu9jymr0008y2s63b6bxkdp"},{"post_id":"civu9oajo000by2s6ovjdtq6i","category_id":"ciut8cahm000xv7s65igeu71i","_id":"civu9obny000dy2s69ff8xbr6"},{"post_id":"civu9p414000ey2s6c9ogl11f","category_id":"ciut8cahm000xv7s65igeu71i","_id":"civu9pbok000gy2s69onxleyn"},{"post_id":"civu9pxge000hy2s671p6p2ee","category_id":"ciut8cahm000xv7s65igeu71i","_id":"civu9q2fp000jy2s6ninipse5"}],"PostTag":[{"post_id":"ciut8cagr0000v7s6nk2e51vt","tag_id":"ciut8cah00003v7s6gguxt199","_id":"ciut8cah80009v7s6w5w7u29o"},{"post_id":"ciut8cagw0001v7s6f6d5xxjc","tag_id":"ciut8cah70008v7s63aj1w26m","_id":"ciut8cahd000gv7s66fw5a4hm"},{"post_id":"ciut8cah20005v7s6u3w9b11d","tag_id":"ciut8cahb000ev7s6q2jz34yc","_id":"ciut8cahh000nv7s6y01kwwtm"},{"post_id":"ciut8cah60006v7s6qefmfkv7","tag_id":"ciut8cahg000kv7s644bdjbxx","_id":"ciut8cahl000tv7s6ybh23pp8"},{"post_id":"ciut8cah8000av7s6sizgjvk7","tag_id":"ciut8cahj000rv7s65aw5qdvb","_id":"ciut8cahq0011v7s68i004x7c"},{"post_id":"ciut8cah9000cv7s6s3cnr89n","tag_id":"ciut8caho000zv7s6z184736r","_id":"ciut8cahv0018v7s6lgpx36zt"},{"post_id":"ciut8cahd000fv7s6dwxwzijn","tag_id":"ciut8cahv0016v7s6n9ucyvve","_id":"ciut8cahx001dv7s6etb6dg33"},{"post_id":"ciut8cahg000lv7s6wupx0atp","tag_id":"ciut8cahw001bv7s6c2hfblb2","_id":"ciut8cahx001iv7s6oql8zjrp"},{"post_id":"ciut8cahh000ov7s6a6ft5ew9","tag_id":"ciut8cahx001hv7s69f87ib45","_id":"ciut8cahy001nv7s6h80em0az"},{"post_id":"ciut8caht0014v7s6rtqvf9co","tag_id":"ciut8cahz001rv7s6wyi8ujtm","_id":"ciut8cai0001tv7s69se8el78"},{"post_id":"ciuxtuudd0000vos6d4cxf4bp","tag_id":"ciuxtwugd0007vos6rcm0zn4m","_id":"ciuxtwugf0008vos63wmtme5n"},{"post_id":"ciuxtv9fn0002vos6c0xf20x7","tag_id":"ciuxtwugd0007vos6rcm0zn4m","_id":"ciuxuh39y000fvos6daowp2w0"},{"post_id":"ciuxtv30i0001vos6rfpa4gu8","tag_id":"ciuxujsbs000jvos60kep0b5q","_id":"ciuxujsbs000kvos663zre4j2"},{"post_id":"ciuxtvjie0003vos6mey4cgcl","tag_id":"civt4yd550000y2s6aory2hk1","_id":"civt4yd560001y2s6t1l1849s"},{"post_id":"ciuxtvmsi0004vos63w133jti","tag_id":"civt6l44x0002y2s69bzybvdc","_id":"civt6l44y0003y2s6lottrpc7"},{"post_id":"civ32u5j50000brs68tgimcil","tag_id":"civtb71es0004y2s6548v8s2a","_id":"civtb71et0005y2s6xxh45kvo"},{"post_id":"civu9jw6h0006y2s6ywylqozu","tag_id":"civu9k9ur0009y2s6qj6dmm6s","_id":"civu9k9us000ay2s602w6c8ch"},{"post_id":"civu9pxge000hy2s671p6p2ee","tag_id":"civu9q9x7000ky2s6t3gpe19r","_id":"civu9q9x8000ly2s6fo66m5rx"},{"post_id":"ciut8cahk000sv7s6es6pui8y","tag_id":"civuco2xt000my2s6ty5e9c7e","_id":"civuco2xu000ny2s6h459uxz2"},{"post_id":"ciut8cahl000vv7s6x0lov7p9","tag_id":"civud5o3z000qy2s6g5nexo8n","_id":"civud5o40000ry2s6qcz68wel"},{"post_id":"civu9p414000ey2s6c9ogl11f","tag_id":"civueue8m000sy2s6ksf3ule6","_id":"civueue8n000ty2s6qqgqup84"},{"post_id":"civu9oajo000by2s6ovjdtq6i","tag_id":"civueum2f000uy2s66bxgqb7k","_id":"civueum2g000vy2s6jwmwuq3z"}],"Tag":[{"name":"http://localhost:8080/#!/alert?hidetitle=true","_id":"ciut8cah00003v7s6gguxt199"},{"name":"http://localhost:8080/#!/button?hidetitle=true","_id":"ciut8cah70008v7s63aj1w26m"},{"name":"http://localhost:8080/#!/circle?hidetitle=true","_id":"ciut8cahb000ev7s6q2jz34yc"},{"name":"http://localhost:8080/#!/home","_id":"ciut8cahg000kv7s644bdjbxx"},{"name":"http://localhost:8080/#!/gotop?hidetitle=true","_id":"ciut8cahj000rv7s65aw5qdvb"},{"name":"http://localhost:8080/#!/icon?hidetitle=true","_id":"ciut8caho000zv7s6z184736r"},{"name":"http://localhost:8080/#!/loadding?hidetitle=true","_id":"ciut8cahv0016v7s6n9ucyvve"},{"name":"http://localhost:8080/#!/modal?hidetitle=true","_id":"ciut8cahw001bv7s6c2hfblb2"},{"name":"http://localhost:8080/#!/progress?hidetitle=true","_id":"ciut8cahx001hv7s69f87ib45"},{"name":"http://localhost:8080/#!/pullrefresh?hidetitle=true","_id":"ciut8cahy001lv7s6px827o71"},{"name":"http://localhost:8080/#!/pullload?hidetitle=true","_id":"ciut8cahz001ov7s6ni2fgd5i"},{"name":"http://localhost:8080/#!/tip?hidetitle=true","_id":"ciut8cahz001rv7s6wyi8ujtm"},{"name":"http://localhost:8080/#!/inputbox?hidetitle=true","_id":"ciuxtwugd0007vos6rcm0zn4m"},{"name":"http://localhost:8080/#!/radio?hidetitle=true","_id":"ciuxujsbs000jvos60kep0b5q"},{"name":"http://localhost:8080/#!/selector?hidetitle=true","_id":"civt4yd550000y2s6aory2hk1"},{"name":"http://localhost:8080/#!/switch?hidetitle=true","_id":"civt6l44x0002y2s69bzybvdc"},{"name":"http://localhost:8080/#!/accordion?hidetitle=true","_id":"civtb71es0004y2s6548v8s2a"},{"name":"http://localhost:8080/#!/scroll?hidetitle=true","_id":"civu9k9ur0009y2s6qj6dmm6s"},{"name":"http://localhost:8080/#!/page?hidetitle=true","_id":"civu9q9x7000ky2s6t3gpe19r"},{"name":"http://localhost:8080/#!/pullRefresh?hidetitle=true","_id":"civuco2xt000my2s6ty5e9c7e"},{"name":"http://localhost:8080/#!/pullLoad?hidetitle=true","_id":"civud5o3z000qy2s6g5nexo8n"},{"name":"http://localhost:8080/#!/uploader?hidetitle=true","_id":"civueue8m000sy2s6ksf3ule6"},{"name":"http://localhost:8080/#!/slider?hidetitle=true","_id":"civueum2f000uy2s66bxgqb7k"}]}}